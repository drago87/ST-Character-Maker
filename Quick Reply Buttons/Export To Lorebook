/setvar key=catgen "Export"|
/setvar key=genid "0"|

/buttons labels=["Yes", "No"] This is the last time you have to look over the character and make any neccisary changes. Do you want to continue?|
/setvar key=selected_btn {{pipe}}|

/ife ( selected_btn != 'Yes'){:
  /echo Aborting | /:"Character Maker V4.Flushvar"|
:}|

/:"Character Maker V4.Get Char info"|


/setvar key=wi "{{getvar::fname}} {{getvar::lname}}"|

/let remove_accents {: string=
    /re-exec find=/(.)/g "ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ" | /map {{pipe}} {: /getat index="1" {{var::item}} :} | /let key=mfrom ||
    /re-exec find=/(.)/g "AAAAAACEEEEIIIINOOOOOUUUUYaaaaaaceeeeiiiinooooouuuuyy" | /map {{pipe}} {: /getat index="1" {{var::item}} :} | /let key=mto ||
    /foreach {{var::mfrom}} {:
        /getat index={{var::index}} {{var::mto}}
        | /let lto {{pipe}}
        | /re-replace find=/{{var::item}}/g replace={{var::lto}} {{var::string}}
        | /var string {{pipe}}
    :}
:} ||



/:remove_accents string={{getvar::wi}} |
/setvar as=string key=wi {{pipe}}|

//getchatlore {{getvar::wi}}|
/createlore file={{getvar::wi}}|
/setvar key=wiBook {{getvar::wi}}|


/setvar key=entryName Appearance Info|
/echo Processing: {{getvar::entryName}}|
/setvar key=i 0|
/setvar key=x {{lastMessageId}}|
/setvar key=appinfo []|
/whilee ( i <= x ){:
	/messages hidden=on {{getvar::i}}|
	/setvar key=mess {{pipe}}|
	/ife ( entryName in mess){:
    /ife ( 'Character Rules' not in mess){:
  		/unhide {{getvar::i}}|
      /addvar key=appinfo {{getvar::i}}|
		:}|
	:}|
	/incvar i|
:}|
/setvar key=trigger ["Height", "Weight", "Appearance", "Face", "Hair", "Ear", "Eye", "Nose", "Mouth", "Tongue", "Upper Body", "Body Type", "Torso", "Arm", "Hand", "Stomach", "Lower Body", "Butt", "Buttocks", "Leg", "Feet", "Public Hair", "Tightness", "Depth", "Size"]|
/ife ( gender == 'Female'){:
  /addvar key=trigger "Breast"|
  /addvar key=trigger "Cup size"|
  /addvar key=trigger "Firmness"|
  /addvar key=trigger "Nipples"|
  /addvar key=trigger "Sensativity"|
  /addvar key=trigger "Pussy"|
  /addvar key=trigger "Clit"|
  /addvar key=trigger "Hood"|
  /addvar key=trigger "Hymen"|

:}|
/else {:
  /addvar key=trigger "Lenght"|
  /addvar key=trigger "Girth"|
  /addvar key=trigger "Flacid"|
  /addvar key=trigger "Erect"|
  /addvar key=trigger "Scrotum"|
  /addvar key=trigger "Balls"|
  /addvar key=trigger "Feature"|
  /addvar key=trigger "Form"|
:}|

/setvar key=triggers {{noop}}|
/foreach {{getvar::trigger}} {:
  /setvar key=it {{var::item}}|
  /ife ( it != ''){:
    /addvar key=triggers ", {{getvar::it}}"|
  :}|
  /else {:
    /setvar key=triggers {{getvar::it}}|
  :}|
:}|


/foreach {{getvar::appinfo}} {:
  /messages names=off hidden=on {{var::item}}|
  /setvar key=mess {{pipe}}|
  /re-replace replace="" find="/<h2 align='center'>/g" {{getvar::mess}}|
  /setvar key=mess {{pipe}}|
  /re-replace replace="" find="/<\/h2>/g" {{getvar::mess}}|
  /setvar key=mess {{pipe}}|
  /re-replace replace="" find="/^-\s/g" {{getvar::mess}}|
  /setvar key=mess {{pipe}}|
  /trim {{getvar::mess}}|
  /setvar key=mess {{pipe}}|

  /setvar key=in {{var::index}}|
  /createentry file={{getvar::wiBook}} key={{getvar::triggers}} {{getvar::mess}}|
  /setvar key=uid {{pipe}}|
  /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=comment "{{getvar::entryName}} {{getvar::form}}"|
  /ife ( in > 0){:
    /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=disable true|
  :}|
  /ife ( form != ''){:
    /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=keysecondary {{getvar::form}}|
  :}|
:}|




/setvar key=entryName <h2 align='center'>Outfit</h2>|
/echo Processing: Outfits|
/setvar key=i 0|
/setvar key=x {{lastMessageId}}|
/setvar key=index1 0|
/setvar key=outfit []|
/whilee ( i <= x ){:
	/messages hidden=on {{getvar::i}}|
	/setvar key=mess {{pipe}}|
	/ife ( entryName in mess){:
    /ife ( 'Character Rules' not in mess){:
      /incvar index1|
      /setvar key=index1 {{pipe}}|
      /setvar key=i2 {{getvar::i}}|
      /incvar i2|
  		/unhide {{getvar::i}}|
  		/unhide {{getvar::i2}}|
      /addvar key=outfit {{getvar::i}}|

      /setvar key=trigger1 []|
      /setvar key=temptrigger1 {{noop}}|
      /messages names=off {{getvar::i}}|
      /setvar key=mess1 {{pipe}}|

      /setvar key=trigger2 []|
      /setvar key=temptrigger2 {{noop}}|
      /messages names=off {{getvar::i2}}|
      /setvar key=mess2 {{pipe}}|

      /setvar key=outfitLook1 {{noop}}|
      /genraw Using this message '{{getvar::mess1}}' identify the overall look of the outfit(If most fields are None, {{getvar::fname}} is considered Nude.).
EXAMPLES: 'Outfit: Nude', 'Outfit: Office', 'Outfit: Bikini', 'Outfit: Swimsuit'
INSTRUCTION: Never have {{getvar::fname}}'s name in the reply. Keep the reply to a maximum of four tokens. Start the reply with 'Outfit: ' then the overall look. Reply with only the overall look of the outfit and nothing else.|
      /setvar key=outfitLook1 {{pipe}}|
      /re-replace find="/Outfit:\s/g" replace="" {{getvar::outfitLook1}}|
      /addvar key=trigger1 {{pipe}}|

      /setvar key=outfitLook2 {{noop}}|
      /genraw Using this message '{{getvar::mess2}}' identify the overall usage of the gear.
EXAMPLES: 'Gear: Swimming', 'Gear: Office', 'Gear: Climbing'
INSTRUCTION: Start the reply with 'Gear: ' then the overall Category name. Reply with only the overall Category name of the gear and nothing else.|
      /setvar key=outfitLook2 {{pipe}}|
      /re-replace find="/Gear:\s/g" replace="" {{getvar::outfitLook2}}|
      /addvar key=trigger2 {{pipe}}|

      /setvar key=a1 {{noop}}|
      /genraw Using the message '{{getvar::mess1}}', extract a list of specific clothing items. Follow these rules:

1. Identify Specific Items: Extract only the names of clothing items, e.g., "Turtleneck," "Sweater," "Panties," "Pantyhose," "Heels."
2. Simplify: Exclude all descriptive details (e.g., colors, patterns, fit, or materials).
 - Example: "Navy Top" becomes "Top", "Sports Bra" becomes "Bra", "Pencil Skirt" becomes "Skirt"
3. Include All Relevant Clothing: List all distinct pieces of clothing explicitly mentioned.
4. Formatting: Reply with only the clothing item names in a comma-separated list.
5. Do Not Exclude: Ensure all items of clothing mentioned are included in their simplest form.
Example Outputs:

-Input:
 - "She wore a sleek black turtleneck, fitted jeans, and white sneakers."
 - Output: "Turtleneck, Jeans, Sneakers"
- Input:
 - "Her outfit included a patterned shirt, loose shorts, and ankle socks."
-Output: "Shirt, Shorts, Socks"|
      /setvar key=a1 {{pipe}}|
      /ife ( a1 == ''){:
        /ife ( gender == 'Female'){:
          /addvar key=a1 Panties, Briefs, Thong, Boyshorts, Skirt, Bra, Undershirt, Top, Blouse
        :}|
        /ife ( gender == 'Male'){:
          /addvar key=a1 Boxers, Briefs
        :}|

        /addvar key=a1 Shorts, Pants, Jeans, Trouser, Sweater, T-shirt, Jacket, Coat, Blazer, Hat, Cap, Beanie

      :}|
      /split {{getvar::a1}}|
      /setvar as=array key=a1 {{pipe}}|
      /addvar key=a1 Outfit|
      /addvar key=a1 Upper Body|
      /addvar key=a1 Lower Body|
      /ife ( 'One-Piece' in mess1){:
        /addvar key=a1 One-Piece|
      :}|
      /elseif ( 'Two-Piece' in mess1){:
        /addvar key=a1 Two-Piece|
      :}|
      /foreach {{getvar::a1}} {:
        /setvar key=it1 {{var::item}}|
        /addvar key=trigger1 {{getvar::it1}}|
      :}|

      /setvar key=a2 {{noop}}|
      /genraw In the message '{{getvar::mess2}}', extract a list of all gear items. Follow these rules:

1. Generalize the Item: Remove all descriptors and adjectives. For example:
"Luxurious Blindfold" becomes "Blindfold."
"Carefully Crafted Gag" becomes "Gag."
"Wireless Mouse" becomes "Mouse."
2. Use Singular Form: Ensure items are in singular form. Avoid plurals.
3. Focus on Concrete Gear: Ignore descriptions or context; extract only the base gear items.
4. Formatting: Reply with a simple, comma-separated list of items. No extra text, explanations, or formatting.

Example Outputs:

Input: "A luxurious blindfold, crafted gag, and noise-canceling headphones."
Output: "Blindfold, Gag, Headphones"
Input: "Safety helmet, rope, and a set of carabiners."
Output: "Helmet, Rope, Carabiner"|
      /setvar key=a2 {{pipe}}|
      /split {{getvar::a2}}|
      /setvar as=array key=a2 {{pipe}}|
      /addvar key=a2 Gear|
      /foreach {{getvar::a2}} {:
        /setvar key=it1 {{var::item}}|
        /addvar key=trigger2 {{getvar::it1}}|
      :}|

      /setvar key=triggers1 {{noop}}|
      /foreach {{getvar::trigger1}} {:
      	/setvar key=it1 {{var::item}}|
      	/setvar key=in {{var::index}}|
      	/ife ( in == 0){:
          /addvar key=triggers1 {{getvar::it1}}|
        :}|
        /else {:
          /addvar key=triggers1 ", {{getvar::it1}}"|
        :}|

      :}|

      /setvar key=triggers2 {{noop}}|
      /foreach {{getvar::trigger2}} {:
      	/setvar key=it1 {{var::item}}|
      	/setvar key=in {{var::index}}|
      	/ife ( in == 0){:
          /addvar key=triggers2 {{getvar::it1}}|
        :}|
        /else {:
          /addvar key=triggers2 ", {{getvar::it1}}"|
        :}|

      :}|

      /re-replace replace="" find="/<h2 align='center'>Outfit<\/h2>/g" {{getvar::mess1}}|
      /setvar key=mess1 {{pipe}}|
      /re-replace replace="" find="/<h2 align='center'>/g" {{getvar::mess1}}|
      /setvar key=mess1 {{pipe}}|
      /re-replace replace="" find="/<\/h2>/g" {{getvar::mess1}}|
      /setvar key=mess1 {{pipe}}|
      /re-replace replace="" find="/^-\s/g" {{getvar::mess1}}|
      /setvar key=mess1 {{pipe}}|
      /trim {{getvar::mess1}}|
      /setvar key=mess1 {{pipe}}|

      /re-replace replace="" find="/<h2 align='center'>Gear<\/h2>/g" {{getvar::mess2}}|
      /setvar key=mess2 {{pipe}}|
      /re-replace replace="" find="/<h2 align='center'>/g" {{getvar::mess2}}|
      /setvar key=mess2 {{pipe}}|
      /re-replace replace="" find="/<\/h2>/g" {{getvar::mess2}}|
      /setvar key=mess2 {{pipe}}|
      /re-replace replace="" find="/^-\s/g" {{getvar::mess2}}|
      /setvar key=mess2 {{pipe}}|
      /trim {{getvar::mess2}}|
      /setvar key=mess2 {{pipe}}|

      /len {{getvar::outfit}}| /setvar key=len {{pipe}}|
      /createentry file={{getvar::wiBook}} key={{getvar::triggers1}} {{getvar::mess1}}|
      /setvar key=uid {{pipe}}|
      /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=comment "{{getvar::index1}}A-{{getvar::outfitLook1}} {{getvar::form}}"|
      /ife ( len > 1){:
        /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=disable true|
        /hide {{getvar::key=i}}|
      :}|
      /ife ( form != ''){:
        /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=keysecondary {{getvar::form}}|
      :}|
      /createentry file={{getvar::wiBook}} key={{getvar::triggers2}} {{getvar::mess2}}|
      /setvar key=uid {{pipe}}|
      /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=comment "{{getvar::index1}}B-{{getvar::outfitLook2}} {{getvar::form}}"|
      /ife ( len > 1){:
        /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=disable true|
        /hide {{getvar::key=i2}}|
      :}|
      /ife ( form != ''){:
        /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=keysecondary {{getvar::form}}|
      :}|
		:}|
	:}|
	/incvar i|
:}|



/setvar key=entryName Known Kinks|
/echo Processing: {{getvar::entryName}}|
/setvar key=i 0|
/setvar key=x {{lastMessageId}}|
/whilee ( i <= x ){:
	/messages hidden=on {{getvar::i}}|
	/setvar key=mess {{pipe}}|
	/ife ( entryName in mess){:
    /ife ( 'Character Rules' not in mess){:
  		/unhide {{getvar::i}}|
      /setvar key=trigger []|
      /setvar key=temptrigger {{noop}}|
      /messages names=off {{getvar::i}}|
      /setvar key=mess {{pipe}}|

      /genraw Using this message '{{getvar::mess}}' identify the name of the kink.
INSTRUCTION: Do not include parentheses or the content within them in your response under any circumstances. Reply with only the name of the kink and nothing else.|
      /setvar key=kinkName {{pipe}}|
      /re-replace replace="" find="/ \(.*/g" {{getvar::kinkName}}|
      /setvar key=kinkName {{pipe}}|
      /addvar key=trigger {{pipe}}|
      /genraw in this message '{{getvar::mess}}' reply with a list of alternate name for the kink.
INSTRUCTION: Never include anything inside '()', Only reply with a comma-separated list, nothing else.|
      /setvar key=a {{pipe}}|
      /split {{getvar::a}}|
      /setvar as=array key=a {{pipe}}|
      /foreach {{getvar::a}} {:
        /setvar key=it1 {{var::item}}|
        /addvar key=trigger {{getvar::it1}}|
      :}|

      /addvar key=trigger Kink|
      /addvar key=trigger Known Kink|

      /setvar key=triggers {{noop}}|
      /foreach {{getvar::trigger}} {:
      	/setvar key=it1 {{var::item}}|
      	/setvar key=in {{var::index}}|
      	/ife ( in == 0){:
          /addvar key=triggers {{getvar::it1}}|
        :}|
        /else {:
          /addvar key=triggers ", {{getvar::it1}}"|
        :}|

      :}|

      /re-replace replace="" find="/<h2 align='center'>Known Kinks<\/h2>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/<h2 align='center'>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/<\/h2>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/^-\s/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /trim {{getvar::mess}}|
      /setvar key=mess {{pipe}}|

      /createentry file={{getvar::wiBook}} key={{getvar::triggers}} {{getvar::mess}}|
      /setvar key=uid {{pipe}}|
      /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=comment "Known {{getvar::kinkName}}"|

		:}|
	:}|
	/incvar i|
:}|



/setvar key=entryName Latent Kinks|
/echo Processing: {{getvar::entryName}}|
/setvar key=i 0|
/setvar key=x {{lastMessageId}}|
/whilee ( i <= x ){:
	/messages hidden=on {{getvar::i}}|
	/setvar key=mess {{pipe}}|
	/ife ( entryName in mess){:
    /ife ( 'Character Rules' not in mess){:
  		/unhide {{getvar::i}}|
      /setvar key=trigger []|
      /setvar key=temptrigger {{noop}}|
      /messages names=off {{getvar::i}}|
      /setvar key=mess {{pipe}}|

      /genraw Using this message '{{getvar::mess}}' identify the name of the kink.
INSTRUCTION: Do not include parentheses or the content within them in your response under any circumstances. Reply with only the name of the kink and nothing else.|
      /setvar key=kinkName {{pipe}}|
      /re-replace replace="" find="/ \(.*/g" {{getvar::kinkName}}|
      /setvar key=kinkName {{pipe}}|
      /addvar key=trigger {{pipe}}|
      /genraw in this message '{{getvar::mess}}' reply with a list of alternate name for the kink.
INSTRUCTION: Never include anything inside '()', Only reply with a comma-separated list, nothing else.|
      /setvar key=a {{pipe}}|
      /split {{getvar::a}}|
      /setvar as=array key=a {{pipe}}|
      /foreach {{getvar::a}} {:
        /setvar key=it1 {{var::item}}|
        /addvar key=trigger {{getvar::it1}}|
      :}|

      /addvar key=trigger Kink|
      /addvar key=trigger Latent Kink|

      /setvar key=triggers {{noop}}|
      /foreach {{getvar::trigger}} {:
      	/setvar key=it1 {{var::item}}|
      	/setvar key=in {{var::index}}|
      	/ife ( in == 0){:
          /addvar key=triggers {{getvar::it1}}|
        :}|
        /else {:
          /addvar key=triggers ", {{getvar::it1}}"|
        :}|

      :}|

      /re-replace replace="" find="/<h2 align='center'>Latent Kinks<\/h2>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/<h2 align='center'>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/<\/h2>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/^-\s/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /trim {{getvar::mess}}|
      /setvar key=mess {{pipe}}|

      /createentry file={{getvar::wiBook}} key={{getvar::triggers}} {{getvar::mess}}|
      /setvar key=uid {{pipe}}|
      /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=comment "Latent: {{getvar::kinkName}}"|

		:}|
	:}|
	/incvar i|
:}|



/setvar key=entryName <h2 align='center'>Sibling</h2>|
/echo Processing: Siblings|
/setvar key=i 0|
/setvar key=x {{lastMessageId}}|
/whilee ( i <= x ){:
	/messages hidden=on {{getvar::i}}|
	/setvar key=mess {{pipe}}|
	/ife ( entryName in mess){:
    /ife ( 'Character Rules' not in mess){:
      /re-replace find="/<h2 align='center'>/g" replace="" {{getvar::entryName}}|
      /setvar key=entryName {{pipe}}|
      /re-replace find="/<\/h2>/g" replace="" {{getvar::entryName}}|
      /setvar key=entryName {{pipe}}|
  		/unhide {{getvar::i}}|
      /setvar key=trigger []|
      /setvar key=temptrigger {{noop}}|
      /messages names=off {{getvar::i}}|
      /setvar key=mess {{pipe}}|

      /genraw Using this message '{{getvar::mess}}'identify the name of the sibling of {{getvar::fname}}.
INSTRUCTION: Reply with only the name of the sibling and nothing else.|
      /setvar key=sName {{pipe}}|
      /re-replace replace="" find="/ \(.*/g" {{getvar::sName}}|
      /setvar key=sName {{pipe}}|
      /addvar key=trigger {{pipe}}|
      /genraw in this message '{{getvar::mess}}' reply with a Sister or Brother depending on what {{getvar::sName}} is to {{getvar::fname}}.
INSTRUCTION: Only reply with Sister or Brother, nothing else.|
      /setvar key=a {{pipe}}|
      /split {{getvar::a}}|
      /setvar as=array key=a {{pipe}}|
      /foreach {{getvar::a}} {:
        /setvar key=it1 {{var::item}}|
        /addvar key=trigger {{getvar::it1}}|
      :}|

      /addvar key=trigger Sibling|

      /setvar key=triggers {{noop}}|
      /foreach {{getvar::trigger}} {:
      	/setvar key=it1 {{var::item}}|
      	/setvar key=in {{var::index}}|
      	/ife ( in == 0){:
          /addvar key=triggers {{getvar::it1}}|
        :}|
        /else {:
          /addvar key=triggers ", {{getvar::it1}}"|
        :}|

      :}|

      /re-replace replace="" find="/<h2 align='center'>Sibling<\/h2>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/<h2 align='center'>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/<\/h2>/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /re-replace replace="" find="/^-\s/g" {{getvar::mess}}|
      /setvar key=mess {{pipe}}|
      /trim {{getvar::mess}}|
      /setvar key=mess {{pipe}}|

      /createentry file={{getvar::wiBook}} key={{getvar::triggers}} {{getvar::mess}}|
      /setvar key=uid {{pipe}}|
      /setentryfield file="{{getvar::wiBook}}" uid={{getvar::uid}} field=comment "Sibling: {{getvar::sName}}"|

		:}|
	:}|
	/incvar i|
:}|

/popup <div>Done</div>
<div>Remember to check the Primary Keywords of the Lorebooks entries.</div>
<div>Refresh the SillyTavern page to see the new Lorebook.</div>
<div>It will be named {{getvar::wiBook}}</div>
