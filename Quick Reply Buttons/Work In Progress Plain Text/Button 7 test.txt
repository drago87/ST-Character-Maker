/setvar key=catgen "Latent Kinks"|
/setvar key=genid "7"|


//setvar key=swipe Yes|

/:"Character Maker V4.Get Char info"|
	
	
	
	
/buttons labels=["One", "Two", "Three", "Four", "Five"] How many known kinks do you want?| /setvar key=answer {{pipe}}|
/ife {: /test left=answer right=One rule=eq:}|
	/then {: /setvar key=x 1:}|
/elseif {: /test left=answer right=Two rule=eq:}|
	/then {: /setvar key=x 2:}|
/elseif {: /test left=answer right=Three rule=eq:}|
	/then {: /setvar key=x 3:}|
/elseif {: /test left=answer right=Four rule=eq:}|
	/then {: /setvar key=x 4:}|
/elseif {: /test left=answer right=Five rule=eq:}|
	/then {: /setvar key=x 5:}|
/else {: /:"Character Maker V4.Flushvar"| /echo Aborting | /abort:}|

/setvar key=kinks []|
/setvar key=i 0|
/while left=i right=x rule=lt {:

	//Make kink|
	/setvar key=kink []|
	/setvar key=genState Redo|

	/while left=genState right=Redo rule=eq {:
		/echo Generating Latent Kink|
		/setvar key=genState []|  
	
		/genraw lock=on name={{char}} 
		system="{{getvar::char_info}}"
{{instructInput}} You are {{char}}. Based on the conversation between you and {{user}}: "{{getvar::messageHistory}}"Now, provide a comma-separated list of five kinks.
INSTRUCTION: Use the right pronounce. Start each kink with a capital letter. Ensure the kink is not one of these kinks, {{getvar::temp}}. The response should be a comma-separated list of five kinks, nothing else.
{{instructFirstOutput}}|

		/setvar key=t {{pipe}}|
		/re-replace replace="" find="/\./g" var=t | /setvar key=t {{pipe}}|
		/split var=t | 
		/setvar key=genState {{pipe}}|
		/addvar key=genState "Manually Add"|  
		/addvar key=genState Redo|  
	
		/buttons labels={{getvar::genState}} Select the latent kink you want {{getvar::fname}} to have.|
	
		/setvar key=selected_btn {{pipe}}|
	
		/ife {: /test left=selected_btn right="" rule=eq :}|
			/then {:/:"Character Maker V4.Flushvar"| /echo Aborting | /abort:}|
		/elseif {: /test left={{getvar::selected_btn}} right="Manually Add" rule=eq :}|
			/then {:
				
				/input rows=8 Add the kink you want {{getvar::fname}} to have.|
				/setvar key=selected_btn {{pipe}}|
				/ife {: /test left=selected_btn right="" rule=eq :}|
						/then {:/:"Character Maker V4.Flushvar"| /echo Aborting | /abort:}|
			:}|
	
		/elseif {: /test left={{getvar::selected_btn}} right=Redo rule=eq :}|
			/then {:
				/setvar key=genState Redo|
			:}|
	:}|
	/addvar key=kink {{getvar::selected_btn}}|


	/setvar key=regiv {{noop}}
	/setvar key=tempregiv {{noop}}|
	/buttons labels=["Receiver","Giver","Not Specified"] Would you like the character to be on the receiving end or the giving end?|
	/setvar key=regiv {{pipe}} |
	/ife {: /test left=regiv right="" rule=eq :}|
		/then {:/:"Character Maker V4.Flushvar"| /echo Aborting | /abort:}|
	/ife {: /test left=regiv right=Receiver rule=eq :}|
		/then {: /setvar key=tempregiv "This is where {{getvar::fname}} is the one that have the kink done to. "| /addvar key=regivs {{getvar::regiv}} :}|
	/elseif {: /test left=regiv right=Giver rule=eq :}|
		/then {: /setvar key=tempregiv "This is where {{getvar::fname}} is the one doing the kink to another. "|/addvar key=regivs {{getvar::regiv}}| :}|
	/addvar key=kink {{getvar::regiv}}|
	
	
	//Explanation of the kink|
	
	/getvar key=kink index=0| /setvar key=k {{pipe}}|
	
	/setvar key=genState Redo|
	
	/while left=genState right=Redo rule=eq {:
		/echo Generating Explanation for {{getvar::k}}|
		/setvar key=genState []|  
	
		/genraw lock=on name={{char}} 
		system="{{getvar::rules}}
{{getvar::info}}
{{getvar::char_info}}"
{{instructInput}} You are {{char}}. Based on the conversation between you and {{user}}: "{{getvar:: messageHistory}}. Now, provide a short Explanation of what the kink '{{getvar::k}}' entails.
INSTRUCTION: Use the right pronounce. Start the explanation with '{{getvar::k}}' followed by ' is when a person'. Use max fifteen tokens.
{{instructFirstOutput}} |
		
		
		
		
		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|  
		/addvar key=genState Redo|  
	
		/buttons labels={{getvar::genState}} Want to use this explanation of {{getvar::k}}?|
	
		/setvar key=selected_btn {{pipe}}|
	
		/ife {: /test left=selected_btn right="" rule=eq :}|
			/then {:/:"Character Maker V4.Flushvar"| /echo Aborting | /abort:}|
		/elseif {: /test left={{getvar::selected_btn}} right=Edit rule=eq :}|
			/then {:
				/getvar key=genState index=0 | /setvar key=t {{pipe}}|
				/input rows=8 default={{getvar::t}} Edit the explanation to your liking.|
				/setvar key=selected_btn {{pipe}}|
				/ife {: /test left=selected_btn right="" rule=eq :}|
						/then {:/:"Character Maker V4.Flushvar"| /echo Aborting | /abort:}|
			:}|
	
		/elseif {: /test left={{getvar::selected_btn}} right=Redo rule=eq :}|
			/then {:
				/setvar key=genState Redo|
			:}|
	:}|
	/addvar key=kink {{getvar::selected_btn}}|
	
	
	//Trigger for the kink|
	
	/setvar key=genState Redo|

	/while left=genState right=Redo rule=eq {:
		/echo Generating {{getvar::k}} trigger|
		/setvar key=genState []|  
	
		/genraw lock=on name={{char}} 
		system="{{getvar::rules}}
{{getvar::info}}
{{getvar::char_info}}"
{{instructInput}} You are {{char}}. Based on the conversation between you and {{user}}: "{{getvar:: messageHistory}}. Now, provide a short description on what could make {{getvar::fname}} interested in {{getvar::kink}}. {{getvar::fname}} could get the know about the kink from {{random::a parent::a older sibling (Mention the siblings name)::a older relative (Mention the relatives name)::a neighbor (Mention the neighbors name)::a rental video in the wrong package::a magazine::accidentally seeing someone doing the kink}}
INSTRUCTION: Use the right pronounce. Keep in mind that {{getvar::fname}} is a {{getvar::age}} {{getvar::gender}}. Start the reply with 'If {{getvar::fname}}' or 'If someone' (This could be that if someone does something to the character, the character sees or hear something or the character may accidentally be exposed to it) . The reply should be in future tense. Use max fifteen tokens.
{{instructFirstOutput}} |
		
		
		
		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|  
		/addvar key=genState Redo|  
	
		/buttons labels={{getvar::genState}} Do you want this as a trigger for {{getvar::fname}} to become interested in {{getvar::k}}.|
	
		/setvar key=selected_btn {{pipe}}|
	
		/ife {: /test left=selected_btn right="" rule=eq :}|
			/then {:/:"Character Maker V4.Flushvar"| /echo Aborting | /abort:}|
		/elseif {: /test left={{getvar::selected_btn}} right=Edit rule=eq :}|
			/then {:
				/getvar key=genState index=0 | /setvar key=t {{pipe}}|
				/input rows=8 default={{getvar::t}} Edit the trigger for {{getvar::k}}.|
				/setvar key=selected_btn {{pipe}}|
				/ife {: /test left=selected_btn right="" rule=eq :}|
						/then {:/:"Character Maker V4.Flushvar"| /echo Aborting | /abort:}|
			:}|
	
		/elseif {: /test left={{getvar::selected_btn}} right=Redo rule=eq :}|
			/then {:
				/setvar key=genState Redo|
			:}|
	:}|
	/addvar key=kink {{getvar::selected_btn}}|
	
	
	
	/setvar key=kinkinfo []|
	/foreach var=kink {:
		/ife {: /test left={{index}} right=0 rule=neq :}|
			/then {: /addvar key=kinkinfo {{item}} :}|
		
	:}|
	/addvar key=kinks ["{{getvar::k}}", {{getvar::kinkinfo}}]|
	
	/incvar i|
:}|


/setvar key=output "<h2 align='center'>{{getvar::catgen}}</h2>

{{getvar::catgen}}

"|

/setvar key=output1 {{noop}}|
/setvar key=output2 {{noop}}|
/foreach var=kinks {:
	/setvar key=tempoutput2 {{noop}}|
	/setvar key=p1 {{item}}|
	/setvar key=i {{index}}|
	/foreach var=p1 {:
		/ife {: /test left={{index}} right=0 rule=eq :}|
			/then {: /setvar key=kinkname {{item}} :}|
		/else {:
			/setvar key=x {{item}}|
			/foreach var=x {:
				
				/ife {: /test left={{index}} right=0 rule=eq :}|
					/then {:
						/addvar key=output1 "- {{getvar::kinkname}} ({{item}})
" :}|
				/elseif {: /test left={{index}} right=0 rule=neq :}|
					/then {:
						/ife {: /test left=tempoutput2 right="" rule=eq :}|
							/then {: /addvar key=tempoutput2 "- {{item}}" :}|
							/else {: /addvar key=tempoutput2 "
{{item}}" :}|
					:}|
			:}|
		:}|
	:}|
	/ife {: /test left=output2 right="" rule=eq :}|
		/then {: 
			/addvar key=output2 "{{getvar::tempoutput2}}"|
		:}|
	/else {: 
		/addvar key=output2 "
{{getvar::tempoutput2}}"|
	:}|
:}|

/addvar key=output "{{getvar::output1}}

{{getvar::catgen}} Explanation

{{getvar::output2}}"|

/message-edit message={{lastMessageId}} {{getvar::output}}