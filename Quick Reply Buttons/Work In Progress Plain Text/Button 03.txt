/setvar key=catgen "Personality Traits And Quirks"|
/setvar key=genid "3"|




/:"Character Maker V4.Get Char info"|



/setvar key=postrs {{noop}}|
/setvar key=negtrs {{noop}}|

/setvar key=archetype {{noop}}|
/buttons labels=["Yes", "No"] Do you want to have help generate a list of positive and negative traits that conforms to a specific archetype?|
/setvar key=selected_btn {{pipe}}|
/ife ( selected_btn == ''){:
	/echo Aborting | /:"Character Maker V4.Flushvar"|
:}|
/elseif ( selected_btn == 'Yes'){:
	/setvar key=selected_btn No|

	/ife ( toAnalize != '') {:
		/genraw Using this information: '{{getvar::toAnalize}}'
Identify the personality archetype for {{getvar::fname}} {{getvar::lname}}.
EXAMPLES: Tomboy, Idealist, Realist, Extrovert, Introvert
INSTRUCTION: Only reply with the archetype, noting else.|
		/setvar key=exType {{pipe}}|
	:}|
	/else {:
		/buttons labels=["Yes", "No"] Do you know the name archetype of {{getvar::fname}}'s personality?|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/ife ( selected_btn == 'Yes'){:
			/input default={{getvar::exType}} rows=8 Give the archetype you want to generate positive personality traits for. Ex Tomboy.|
			/setvar key=archetype {{pipe}}|
			/ife ( archetype == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}
		:}|
		/elseif ( selected_btn == 'No'){:
			/setvar key=selected_btn Redo|
			/setvar key=t {{noop}}|
			/genraw Analyze this text: '{{getvar::userInput}}'
Is there something in the text that eludes to a personality?
If yes respond with the part that is about the personality. If no respond with 'No'.
INSTRUCTION: Only reply with the part that eludes to a personality, noting else.|
			/setvar key=t {{pipe}}|
			/ife ( (t == 'No') or ( t == 'no') or (t == 'No.') or ( t == 'no.')){:
				/setvar key=t {{noop}}|
			:}|
			/whilee ( selected_btn == 'Redo'){:
				/input default={{getvar::t}} rows=8 Give a description on {{getvar::fname}}'s peronality and the archetype will be generated.|
				/setvar key=t {{pipe}}|
				/genraw Analyze this personality description: {{getvar::t}}
Generate a comma-seperated list of minimum four peronality archetypes that fits best for the description. Start with the archetype that fits best.
EXAMPLES: Tomboy, Idealist, Realist, Extrovert, Introvert
INSTRUCTION: Only reply with a comma-separated list of archetype names, noting else.|
				/setvar key=archetype {{pipe}}|
				/split {{getvar::archetype}}|
				/setvar key=archetype {{pipe}}|
				/addvar key=archetype Redo|
				/buttons labels={{getvar::archetype}} <div>Select the correct personality archetype.</div>|
				/setvar key=selected_btn {{pipe}}|
				/ife ( selected_btn == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/elseif ( selected_btn != 'Redo') {:
					/setvar key=archetype {{getvar::selected_btn}}|
				:}|
			:}|
		:}|
	:}|

	/setvar key=selected_btn No|
	/split {{getvar::genre}}|
	/len {{pipe}}| /setvar key=len {{pipe}}|
	/ife ( len > 1) {:
		/setvar key=amGen these genres {{getvar::genre}}|
	:}|
	/else {:
	/setvar key=amGen this genre {{getvar::genre}}|

	:}|
	/whilee ( selected_btn == 'No'){:
		/genraw Make me a comma-seperated list of six positive personality traits for a {{getvar::archetype}}. Add Two positive personality traits that would fit into {{getvar::amGen}}
INFORMATION: The character is a {{getvar::age}} {{getvar::gender}}.
Example11: Outgoing, Positive
INSTRUCTION: Start the traits with a uppercase. Never end the reply with a '.'. Only respond with a comma-separated list of eight positive traits, nothing else.|
		/setvar key=genState1 {{pipe}}|
		/genraw Make me a comma-seperated list of six negative personality traits for a {{getvar::archetype}}. Add Two negative personality traits that would fit into {{getvar::amGen}}
INFORMATION: The character is a {{getvar::age}} {{getvar::gender}} and have these positive traits {{getvar::genState1}}
EXAMPLES: Example11: Shy, Rowdy
INSTRUCTION: Start the traits with a uppercase. Never end the reply with a '.'. Only respond with a comma-separated list of eight negative traits, nothing else.|
		/setvar key=genState2 {{pipe}}|
		/buttons labels=["Yes", "No", "Edit"] <div>Do these personality traits conform to {{getvar::archetype}}?</div><div>Positive: {{getvar::genState1}}</div><div>Negative: {{getvar::genState2}}</div>|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/elseif ( selected_btn == 'Yes'){:
			/split {{getvar::genState}}|
			/setvar as=array key=outputList {{pipe}}|
		:}|
		/elseif ( selected_btn == 'Edit'){:
			/input default={{getvar::genState1}} rows=8 Add/Remove the Positive traits you want.|
			/setvar key=genState1 {{pipe}}|
			/ife ( genState1 == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::genState2}} rows=8 Add/Remove the Negative traits you want.|
			/setvar key=genState2 {{pipe}}|
			/ife ( genState2 == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|
		/setvar key=traInfo "Positive Personality Traits: {{getvar::genState1}}
Negative Personality Traits: {{getvar::genState2}}"|

		/genraw Using this information: '{{getvar::userInput}}' to identify positive personality traits for {{getvar::fname}}.
Find any positive personality traits that is missing from the included INFORMATION.
Did you find any missed positive traits for {{getvar::fname}}?
If Yes make a comma-seperated list of the missing positive traits. If No reply with 'No'.
INFORMATION: {{getvar::traInfo}}
EXAMPLES: Example11: Outgoing, Positive, Hardworking
Example2: No
INSTRUCTION: Only reply with a comma-seperated list or No, noting else.|
		/setvar key=extraPos {{pipe}}|
		/ife ( (extraPos == 'No') or ( extraPos == 'no') or (extraPos == 'No.') or ( extraPos == 'no.')){:
			/setvar key=extraPos {{noop}}|
		:}|
		/ife ( extraPos != ''){:
			/setvar key=genState1 "{{getvar::extraPos}}, {{getvar::genState1}}"
		:}|

		/setvar key=traInfo "Positive Personality Traits: {{getvar::genState1}}
Negative Personality Traits: {{getvar::genState2}}"|

		/genraw Using this information: '{{getvar::userInput}}' to identify negative personality traits for {{getvar::fname}}.
Find any negative personality traits that is missing from the included INFORMATION.
Did you find any missed negative traits for {{getvar::fname}}?
If Yes make a comma-seperated list of the missing negative traits. If No reply with 'No'.
INFORMATION: {{getvar::traInfo}}
EXAMPLES: Example11: Angry, Aggressive, Negative, Shy
Example2: No
INSTRUCTION: Only reply with a comma-seperated list or No, noting else.|
		/setvar key=extraNeg {{pipe}}|
		/ife ( (extraNeg == 'No') or ( extraNeg == 'no') or (extraNeg == 'No.') or ( extraNeg == 'no.')){:
			/setvar key=extraNeg {{noop}}|
		:}|
		/ife ( extraNeg != ''){:
			/setvar key=genState2 "{{getvar::extraNeg}}, {{getvar::genState2}}"
		:}|


		/split {{getvar::genState1}}|
		/setvar as=array key=postrs {{pipe}}|
		/split {{getvar::genState2}}|
		/setvar as=array key=negtrs {{pipe}}|

	:}|

	/setvar key=traInfo "Positive Personality Traits: {{getvar::genState1}}
Negative Personality Traits: {{getvar::genState2}}"|


	/ife ( toAnalize != ''){:
		/genraw Using this information: '{{getvar::toAnalize}}' to identify positive personality traits for {{getvar::fname}}.
Find any positive personality traits that is missing from this list: '{{getvar::genState}}'.
Did you find any missed positive traits for {{getvar::fname}}?
If Yes make a comma-seperated list of the missing positive traits. If No reply with 'No'.
EXAMPLES: Example11: Outgoing, Positive: Shy, Rowdy
Example2: No
INSTRUCTION: Only reply with a comma-seperated list or No, noting else.|
		/setvar key=extraPos {{pipe}}|
		/ife ( extraPos != 'No') {:
			/input default={{getvar::extraPos}} rows=8 Add/Remove the traits that dont fit.|
			/setvar key=o {{pipe}}|
			/ife ( o == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/split {{getvar::o}}|
			/foreach {{pipe}} {:
				/addvar key=postrs {{var::item}}|
			:}|
		:}|
		/genraw Using this information: '{{getvar::toAnalize}}'
Find any negative personality traits that is missing from this list: '{{getvar::genState}}'.
Did you find any missed negative traits for {{getvar::fname}}?
If Yes make a comma-seperated list of the missing negative traits. If No reply with 'No'.
EXAMPLES: Example11: Angry, Aggressive, NegativeextraNeg
Example2: No
INSTRUCTION: Only reply with a comma-seperated list or No, noting else.|
		/setvar key=extraNeg {{pipe}}|
		/ife ( extraNeg != 'No') {:
			/input default={{getvar::extraNeg}} rows=8 Add/Remove the traits that dont fit.|
			/setvar key=o {{pipe}}|
			/ife ( o == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/split {{getvar::o}}|
			/foreach {{pipe}} {:
				/addvar key=negtrs {{var::item}}|
			:}|
		:}|
	:}|
:}|



/ife ( postrs == ''){:
	/setvar key=genState Redo |
	/setvar key=outputList []|

	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generateing Positive Traits|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|


		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button03-01A|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 166|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 167|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 168|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|

		/setvar key=t {{pipe}}|
		/re-replace replace="" find="/\./" {{getvar::t}}| /setvar key=t {{pipe}}|
		/split {{getvar::t}}|
		/setvar key=genState {{pipe}}|

		/addvar key=genState "Manually Add"|
		/addvar key=genState Done|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|

		/buttons labels={{getvar::genState}} Is any of these positive traits anything you want you want for {{getvar::fname}}?|

		/setvar key=selected_btn {{pipe}} |
		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Manually Add'){:
			/input rows=8 Add the positive trait you want.|
			/setvar key=t {{pipe}}|
			/setvar key=genState Redo|
			/ife ( t == ''){:
				/setvar key=genState Redo|
			:}|
			/else {:
				/addvar key=outputList {{getvar::t}}|
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
	    :}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
		/else {:
			/addvar key=outputList {{getvar::selected_btn}}|
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::selected_btn}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::selected_btn}}|
			:}|
			/setvar key=genState Redo|
		:}|

	:}|
	/setvar key=postrs {{getvar::outputList}}|
:}|

/setvar key=positive_desc []|
/foreach {{getvar::postrs}} {:
	/setvar key=genState Redo|
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|

	/while left=genState right=Redo rule=eq {:
		/re-replace find=/\(.*$/g replace="" {{getvar::it}}|
		/setvar key=cat {{pipe}}|
		/echo Generating Description of the positive trait: {{getvar::cat}}|
		/setvar key=genState []|

		/setvar key=traInfoDesc {{getvar::traInfo}}|
		/foreach {{getvar::positive_desc}} {:
			/addvar key=traInfoDesc "
{{var::item}}"|
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button03-01B|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 410|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 411|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 412|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|

		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|

		/buttons labels={{getvar::genState}} Is this a good description of {{getvar::cat}} for {{getvar::fname}}?|

		/setvar key=selected_btn {{pipe}}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0| /setvar key=t {{pipe}}|
			/input default={{getvar::t}} rows=8 Edit the description for {{getvar::cat}} to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/setvar key=guide {{noop}}|
	/addvar key=positive_desc "{{getvar::selected_btn}}"|
:}|

/setvar key=posStringList {{pipe}}|
/foreach {{getvar::postrs}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( in == 0){:
		/setvar key=posStringList "{{getvar::it}}"|
	:}|
	/else {:
		/addvar key=posStringList ", {{getvar::it}}"|
	:}|

:}|




/ife ( negtrs == ''){:
	/setvar key=genState Redo |
	/setvar key=outputList []|

	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generateing Negative Traits|
	  /setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|


		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button03-02A|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 170|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 171|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 172|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|

		/setvar key=t {{pipe}}|
		/re-replace replace="" find="/\./" {{getvar::t}}| /setvar key=t {{pipe}}|
		/split {{getvar::t}}|
		/setvar key=genState {{pipe}}|

		/addvar key=genState "Manually Add"|
		/addvar key=genState Done|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|

		/buttons labels={{getvar::genState}} Is any of these negative traits something you want you want for {{getvar::fname}}?|

		/setvar key=selected_btn {{pipe}}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Manually Add'){:
			/input rows=8 Add the negative trait you want.|
			/setvar key=t {{pipe}}|
			/setvar key=genState Redo|
			/ife ( t == ''){:
				/setvar key=genState Redo|
			:}|
			/else {:
				/addvar key=outputList {{getvar::t}}|
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
	    :}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
		/else  {:
			/addvar key=outputList {{getvar::selected_btn}}|
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::selected_btn}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::selected_btn}}|
			:}|
			/setvar key=genState Redo|
		:}|

	:}|
	/setvar key=negtrs {{getvar::outputList}}|
:}|

/setvar key=traInfo "Positive Personality Traits:"|

/foreach {{getvar::positive_desc}} {:
	/addvar key=traInfo "
{{var::item}}"|
:}|


/addvar key=traInfo "

Negative Personality Traits: {{getvar::genState2}}"|


/setvar key=negative_desc []|
/foreach {{getvar::negtrs}} {:
	/setvar key=genState Redo|
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|

	/while left=genState right=Redo rule=eq {:
		/re-replace find=/\(.*$/g replace="" {{getvar::it}}|
		/setvar key=cat {{pipe}}|
		/echo Generating Description of the negative trait: {{getvar::cat}}|
		/setvar key=genState []|

		/setvar key=traInfoDesc {{getvar::traInfo}}|
		/foreach {{getvar::negative_desc}} {:
			/addvar key=traInfoDesc "
{{var::item}}"|
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button03-02B|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 414|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 415|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 416|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|

		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|

		/buttons labels={{getvar::genState}} Is this a good description of the negative trait {{getvar::cat}} for {{getvar::fname}}?|

		/setvar key=selected_btn {{pipe}}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0| /setvar key=t {{pipe}}|
			/input default={{getvar::t}} rows=8 Edit the description for {{getvar::cat}} to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/setvar key=guide {{noop}}|
	/addvar key=negative_desc "{{getvar::selected_btn}}"|
:}|

/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue no :}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no :}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue no :}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue no :}|
/elseif ( 'Pokémon' in species){:
	/setvar key=isTrue yes :}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes :}|
/else {: /setvar key=isTrue yes :}|

/setvar key=human_traits []|

/ife ( isTrue == 'yes'){:
	/setvar key=genState Redo|
	/setvar key=outputList []|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generating Human Trait|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button03-03|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 174|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 175|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 176|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|

		/setvar key=t {{pipe}}|
		/re-replace replace="" find="/\./" {{getvar::t}} | /setvar key=t {{pipe}}|
		/split {{getvar::t}} |
		/setvar key=genState {{pipe}}|
		/addvar key=genState "Manually Add"|
		/addvar key=genState Done|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|

		/buttons labels={{getvar::genState}} Select the Human trait you want {{getvar::fname}} to have.|

		/setvar key=selected_btn {{pipe}}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Manually Add'){:
			/input rows=8 Add the human trait you want.|
			/setvar key=t {{pipe}}|
			/setvar key=genState Redo|
			/ife ( t == ''){:
				/setvar key=genState Redo|
			:}|
			/else {:
				/addvar key=outputList {{getvar::t}}|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
		/else  {:
			/addvar key=outputList {{getvar::selected_btn}}|
			/setvar key=guide {{noop}}|
			/setvar key=genState Redo|
		:}|

	:}|

	/setvar key=human_traits {{getvar::outputList}}|
:}|

/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue no :}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no :}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue no :}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue no :}|
/elseif ( 'Pokémon' in species){:
	/setvar key=isTrue yes :}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes :}|
/else {: /setvar key=isTrue yes :}|


/setvar key=non-human_traits []|

/ife ( isTrue == 'yes'){:
	/setvar key=genState Redo|
	/setvar key=outputList []|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generating {{getvar::cleanSpeciees}} Trait|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button03-04|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 178|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 179|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 180|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|

		/setvar key=t {{pipe}}|
		/re-replace replace="" find="/\./" {{getvar::t}} | /setvar key=t {{pipe}}|
		/split {{getvar::t}}|
		/setvar key=genState {{pipe}}|
		/addvar key=genState "Manually Add"|
		/addvar key=genState Done|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|

		/buttons labels={{getvar::genState}} Select the {{getvar::cleanSpeciees}} trait you want {{getvar::fname}} to have.|

		/setvar key=selected_btn {{pipe}}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Manually Add'){:
			/input rows=8 Add the {{getvar::cleanSpeciees}} trait you want.|
			/setvar key=t {{pipe}}|
			/setvar key=genState Redo|
			/ife ( t == ''){:
				/setvar key=genState Redo|
			:}|
			/else {:
				/addvar key=outputList {{getvar::t}}|
      :}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
		/else  {:
			/addvar key=outputList {{getvar::selected_btn}}|
			/setvar key=guide {{noop}}|
			/setvar key=genState Redo|
		:}|
	:}|

	/setvar key=non-human_traits "{{getvar::outputList}}"|
:}|




/buttons labels=["Yes", "No"] Do you want to have help generate a list of Quirks that conforms to {{getvar::archetype}}?|
/setvar key=selected_btn {{pipe}}|
/ife ( selected_btn == ''){:
	/echo Aborting | /:"Character Maker V4.Flushvar"|
:}|
/elseif ( selected_btn == 'Yes'){:
	/setvar key=selected_btn No|
	/split {{getvar::genre}}|
	/setvar key=qgenre {{pipe}}|
	/setvar key=reroll Yes|

	/whilee ( selected_btn == 'No'){:
		/ife ( reroll == 'Yes' ){:
			/setvar as=number key=i 0|
			/setvar key=genState1 {{noop}}|
			/whilee ( i++ < 3){:
				/genraw Make me a Quirk for {{getvar::archetype}}. Quirks are something that {{getvar::fname}} does that is out of the norm.
EXAMPLES: {{getvar::fname}} likes to play with the boys even though she is a girl. {{getvar::fname}} likes to spy on his elder sister in the shower.
INSTRUCTION: Make one positive quirks. Start the quirk with a uppercase. {{getvar::fname}} is a {{getvar::age}} {{getvar::gender}}. Only respond with a single quirk, nothing else.|
				/setvar key=t {{pipe}}|
				/ife ( genState1 == ''){:
					/setvar key=genState1 {{getvar::t}}.|
				:}|
				/else {:
					/addvar key=genState1 ": {{getvar::t}}."|
				:}|
			:}|
			/setvar as=number key=i 0|
			/setvar key=genState2 {{noop}}|
			/whilee ( i++ < 3){:
				/genraw Make me a Quirk for {{getvar::archetype}}. Quirks are something that {{getvar::fname}} does that is out of the norm.
EXAMPLES: {{getvar::fname}} likes to play with the boys even though she is a girl. {{getvar::fname}} likes to spy on his elder sister in the shower.
INSTRUCTION: Make one negative quirks. Start the quirk with a uppercase. {{getvar::fname}} is a {{getvar::age}} {{getvar::gender}}. Only respond with a single quirk, nothing else.|
				/setvar key=t {{pipe}}|
				/ife ( genState2 == ''){:
					/setvar key=genState2 {{getvar::t}}.|
				:}|
				/else {:
					/addvar key=genState2 ": {{getvar::t}}."|
				:}|
			:}|
			/setvar key=genState3 {{noop}}|
			/foreach {{getvar::qgenre}} {:
				/setvar as=number key=i 0|
				/whilee ( i++ < 2){:
					/genraw Make me a colon-seperated list of Quirks for {{getvar::archetype}}. Quirks are something that {{getvar::fname}} does that is out of the norm.
	EXAMPLES: {{getvar::fname}} likes to play with the boys even though she is a girl. {{getvar::fname}} likes to spy on his elder sister in the shower.
	INSTRUCTION: Make one quirk that suits the genre {{var::item}}. Start the quirk with a uppercase. {{getvar::fname}} is a {{getvar::age}} {{getvar::gender}}. Only respond with a single quirk, nothing else.|
					/setvar key=t {{pipe}}|
					/ife ( genState3 == ''){:
						/setvar key=genState3 {{getvar::t}}|
					:}|
					/else {:
						/addvar key=genState3 ": {{getvar::t}}"|
					:}|
				:}|
			:}|
			/re-replace find="/\.\./g" replace="." {{getvar::genState1}}|
			/setvar key=genState1 {{pipe}}|

			/re-replace find="/\.\./g" replace="." {{getvar::genState2}}|
			/setvar key=genState2 {{pipe}}|

			/re-replace find="/\.\./g" replace="." {{getvar::genState3}}|
			/setvar key=genState3 {{pipe}}|

			/setvar key=genState "{{getvar::genState1}}: {{getvar::genState2}}: {{getvar::genState3}}"|

			/split find=":" {{getvar::genState}}|/setvar key=genState4 {{pipe}}|
		:}|
		/buttons labels=["Yes", "No", "Edit All", "Reroll specific"] <div>Do these Quirks conform to {{getvar::archetype}}?</div><div>{{getvar::genState}}</div>|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/elseif ( selected_btn == 'Yes'){:
			/split find=":" {{getvar::genState}}|
			/setvar as=array key=outputList {{pipe}}|
			/setvar key=selected_btn Yes|
		:}|
		/elseif ( selected_btn == 'No'){:
			/setvar key=reroll Yes|
		:}|
		/elseif ( selected_btn == 'Edit All'){:
			/input default={{getvar::genState}} rows=8 Add/Remove the traits you want.|
			/setvar key=genState {{pipe}}|
			/ife ( genState == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/split find=":" {{getvar::genState}}|
			/setvar as=array key=outputList {{pipe}}|
			/setvar key=selected_btn Yes|
		:}|
		/elseif ( selected_btn == 'Reroll specific'){:
			/setvar key=reroll No|
			/whilee ( selected_btn != 'Done'){:
				/setvar key=genStateList {{getvar::genState4}}|
				/addvar key=genStateList Done|
				/buttons labels={{getvar::genStateList}} Select the quirk you want to reroll.|
				/setvar key=selected_btn {{pipe}}|
				/ife ( selected_btn == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/setvar key=i {{noop}}|
				/foreach {{getvar::genState4}} {:
					/setvar key=it {{var::item}}|
					/setvar key=in {{var::index}}|
					/ife ( it == selected_btn){:
						/ife ( in < 3){:
							/genraw Make me a Quirk for {{getvar::archetype}}. Quirks are something that {{getvar::fname}} does that is out of the norm.
EXAMPLES: {{getvar::fname}} likes to play with the boys even though she is a girl. {{getvar::fname}} likes to spy on his elder sister in the shower.
INSTRUCTION: Make one positive quirks. Start the quirk with a uppercase. {{getvar::fname}} is a {{getvar::age}} {{getvar::gender}}. Only respond with a single quirk, nothing else.|
							/setvar key=t {{pipe}}|
							/buttons labels=["Yes", "No"] <div>Is this positive quirk good?</div><div>{{getvar::t}}</div>|
							/setvar key=temp {{pipe}}|

							/ife ( temp == ''){:
								/echo Aborting | /:"Character Maker V4.Flushvar"|
							:}|
							/elseif ( temp == 'Yes'){:
								/setvar key=run No|
								/setvar key=selected_btn No|
								/setvar key=genState4 index={{getvar::i}} {{getvar::t}}|
							:}|
						:}|
						/elseif ( ( in >= 3) and ( in < 6 ) ){:
							/genraw Make me a Quirk for {{getvar::archetype}}. Quirks are something that {{getvar::fname}} does that is out of the norm.
EXAMPLES: {{getvar::fname}} likes to play with the boys even though she is a girl. {{getvar::fname}} likes to spy on his elder sister in the shower.
INSTRUCTION: Make one negative quirks. Start the quirk with a uppercase. {{getvar::fname}} is a {{getvar::age}} {{getvar::gender}}. Only respond with a single quirk, nothing else.|
							/setvar key=t {{pipe}}|
							/buttons labels=["Yes", "No"] <div>Is this negative quirk good?</div><div>{{getvar::t}}</div>|
							/setvar key=temp {{pipe}}|

							/ife ( temp == ''){:
								/echo Aborting | /:"Character Maker V4.Flushvar"|
							:}|
							/elseif ( temp == 'Yes'){:
								/setvar key=run No|
								/setvar key=selected_btn No|
								/setvar key=genState4 index={{getvar::i}} {{getvar::t}}|
							:}|
						:}|
						/else {:
							/len {{getvar::qgenre}}| /setvar key=len {{pipe}}|
							/len {{getvar::qgenre}}| /setvar key=len {{pipe}}|
							/sub {{getvar::i}} 6| 
							/setvar key=math {{pipe}}|
							/mod {{getvar::math}} {{getvar::len}}|
							/setvar key=result {{pipe}}|
							/getvar key=qgenre index={{getvar::result}}|
							/setvar key=item {{pipe}}|

							/setvar key=run Yes|
							/whilee ( run == 'Yes'){:
								/genraw Make me a colon-seperated list of Quirks for {{getvar::archetype}}. Quirks are something that {{getvar::fname}} does that is out of the norm.
EXAMPLES: {{getvar::fname}} likes to play with the boys even though she is a girl. {{getvar::fname}} likes to spy on his elder sister in the shower.
INSTRUCTION: Make one quirk that suits the genre {{getvar::item}}. Start the quirk with a uppercase. {{getvar::fname}} is a {{getvar::age}} {{getvar::gender}}. Only respond with a single quirk, nothing else.|
								/setvar key=t {{pipe}}|
								/buttons labels=["Yes", "No"] <div>Is this quirk from the genre {{getvar::item}} good?</div><div>{{getvar::t}}</div>|
								/setvar key=temp {{pipe}}|

								/ife ( temp == ''){:
									/echo Aborting | /:"Character Maker V4.Flushvar"|
								:}|
								/elseif ( temp == 'Yes'){:
									/setvar key=run No|
									/setvar key=selected_btn No|
									/setvar key=genState4 index={{getvar::i}} {{getvar::t}}|
								:}|
							:}|
						:}|
					:}|
					/incvar i|
				:}|
				/foreach {{getvar::genState4}} {:
					/setvar key=it {{var::item}}|
					/setvar key=in {{var::index}}|
					/ife ( in == 0){:
						/setvar key=genState {{getvar::it}}|
					:}|
					/else {:
						/addvar key=genState ": {{getvar::it}}"|
					:}|

				:}|
			:}|
			/setvar key=selected_btn No|
		:}|
	:}|

	/ife ( toAnalize != ''){:
		/genraw Using this information: '{{getvar::toAnalize}}'
Find any quirks that is missing from this list: '{{getvar::genState}}'.
Did you find any missing quirks for {{getvar::fname}}?
If Yes make a colon-seperated list of the missing quirks. If No reply with 'No'.
EXAMPLES: Example11: Angry, Aggressive, Negative
Example2: No
INSTRUCTION: colon is ':'. Only reply with a colon-seperated list or No, noting else.|
		/setvar key=extraNeg {{pipe}}|
		/ife ( extraNeg != 'No') {:
			/input default={{getvar::extraNeg}} rows=8 Add/Remove the quirks that dont fit.|
			/setvar key=o {{pipe}}|
			/ife ( o == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/split find=":" {{getvar::o}}|
			/foreach {{pipe}} {:
				/addvar key=outputList {{var::item}}|
			:}|
		:}|
	:}|

:}|

/ife ( selected_btn == 'No'){:
	/setvar key=genState Redo |
	/setvar key=outputList []|
:}|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generateing Quirks|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|


	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button03-05|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 182|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 183|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 184|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


	/addvar key=genState {{pipe}}|
  /addvar key=genState Edit|
	/addvar key=genState Done|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|

	/buttons labels={{getvar::genState}} Is this a quirk you want for {{getvar::fname}}?|

	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0| /setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=8 Edit the quirk to your liking.|
		/setvar key=t {{pipe}}|
		/setvar key=genState Redo|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
		/else {:
			/addvar key=outputList {{getvar::t}}|
    :}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
	  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
		/setvar key=guide {{pipe}}|
		/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
	  /setvar key=guide {{pipe}}|
	  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
	/else  {:
		/addvar key=outputList {{getvar::selected_btn}}|
		/setvar key=guide {{noop}}|
		/setvar key=genState Redo|
	:}|

:}|
/setvar key=quirks {{getvar::outputList}}|


/setvar key=show {{noop}}|
/foreach {{getvar::quirks}} {:
	/addvar key=show <div>{{var::item}}</div>|
:}|

/setvar key=person "{{getvar::fname}}'s Positive Traits
"|
/foreach {{getvar::positive_desc}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/addvar key=person "- {{getvar::it}}
"|
:}|
/addvar key=person "

{{getvar::fname}}'s Negative Traits
"|
/foreach {{getvar::negative_desc}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/addvar key=person "- {{getvar::it}}
"|
:}|
/len {{getvar::human_traits}}| /setvar key=len|
/ife ( len > 0){:
	/addvar key=person "

{{getvar::fname}}'s Human Traits
"|
	/foreach {{getvar::human_traits}} {:
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/addvar key=person "- {{getvar::it}}
"|
	:}|
:}|


/len {{getvar::non-human_traits}}| /setvar key=len|
/ife ( len > 0){:
	/addvar key=person "

{{getvar::fname}}'s {{getvar::cleanSpeciees}} Traits
"|
	/foreach {{getvar::non-human_traits}} {:
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/addvar key=person "- {{getvar::it}}
"|
	:}|
:}|


/addvar key=person "

{{getvar::fname}}'s Quirks
"|
/foreach {{getvar::quirks}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/addvar key=person "- {{getvar::it}}
"|
:}|



//Good Habits|


/setvar key=genState Redo|
/setvar key=outputList []|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generating Good Habits|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button03-06|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 442|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 443|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 444|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


  /addvar key=genState {{pipe}}|
  /addvar key=genState Edit|
	/len {{getvar::outputList}}| /setvar key=len {{pipe}}|
	/ife ( len >= 1){:
		/addvar key=genState Done|
	:}|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|

  /buttons labels={{getvar::genState}} Is this a Good habit you want {{getvar::fname}} to have?|

  /setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0| /setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=8 Edit the description to your liking.|
		/setvar key=t {{pipe}}|
		/setvar key=genState Redo|
		/ife ( t == ''){:
			/setvar key=genState Redo|
		:}|
		/else {:
			/addvar key=outputList {{getvar::t}}|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
		/setvar key=guide {{noop}}|
		/input default="{{getvar::guidePrompt}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
	/else  {:
		/addvar key=outputList {{getvar::selected_btn}}|
		/setvar key=guide {{noop}}|
		/setvar key=genState Redo|
	:}|

:}|
/setvar key=goodHabits {{getvar::outputList}}|



//Bad Habits|


/setvar key=genState Redo|
/setvar key=outputList []|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generating Bad Habits|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button03-07|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 438|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 439|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 440|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


  /addvar key=genState {{pipe}}|
  /addvar key=genState Edit|
	/len {{getvar::outputList}}| /setvar key=len {{pipe}}|
	/ife ( len >= 1){:
		/addvar key=genState Done|
	:}|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|

  /buttons labels={{getvar::genState}} Is this a Bad habit you want {{getvar::fname}} to have?|

  /setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0| /setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=8 Edit the description to your liking.|
		/setvar key=t {{pipe}}|
		/setvar key=genState Redo|
		/ife ( t == ''){:
			/setvar key=genState Redo|
		:}|
		/else {:
			/addvar key=outputList {{getvar::t}}|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
		/setvar key=guide {{noop}}|
		/input default="{{getvar::guidePrompt}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
	/else  {:
		/addvar key=outputList {{getvar::selected_btn}}|
		/setvar key=guide {{noop}}|
		/setvar key=genState Redo|
	:}|

:}|
/setvar key=badHabits {{getvar::outputList}}|

/setvar key=stringgoodHabits {{noop}}|
/foreach {{getvar::goodHabits}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( in == 0){:
		/setvar key=stringgoodHabits "{{getvar::it}}"|
	:}|
	/else {:
		/addvar key=stringgoodHabits "

{{getvar::it}}"|
	:}|
:}|

/setvar key=stringbadHabits {{noop}}|
/foreach {{getvar::badHabits}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( in == 0){:
		/setvar key=stringbadHabits "{{getvar::it}}"|
	:}|
	/else {:
		/addvar key=stringbadHabits "

{{getvar::it}}"|
	:}|
:}|

//Personality|

/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|
/while left=genState right=Redo rule=eq {:
	/echo Generating Personality|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button03-06|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 186|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 187|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 188|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|

	/addvar key=genState {{pipe}}|
	/addvar key=genState Edit|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|

	/buttons labels={{getvar::genState}} Is this the personality you want for {{getvar::fname}}?|

	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0| /setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=8 Edit the personality to your liking.|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
	  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
		/setvar key=guide {{pipe}}|
		/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
	  /setvar key=guide {{pipe}}|
	  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
:}|
/setvar key=personality {{getvar::selected_btn}}|

/addvar key=person "

{{getvar::fname}}'s Good Habits"|

/foreach {{getvar::goodHabits}} {:
	/setvar key=it {{var::item}}|
	/addvar key=person "
- {{getvar::it}}"|
:}|

/addvar key=person "

{{getvar::fname}}'s Bad Habits"|

/foreach {{getvar::badHabits}} {:
	/setvar key=it {{var::item}}|
	/addvar key=person "
- {{getvar::it}}"|
:}|


/message-edit message={{lastMessageId}} "<h2 align='center'>{{getvar::catgen}}</h2>
<h2 align='center'>{{getvar::form}}</h2>

{{getvar::person}}"|

/sendas name={{char}} "<h2 align='center'>Personality</h2>
<h2 align='center'>{{getvar::form}}</h2>

{{getvar::personality}}"|
