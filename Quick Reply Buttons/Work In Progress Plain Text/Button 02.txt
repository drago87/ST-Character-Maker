/setvar key=catgen "Appearance Info"|
/setvar key=genid "2"|




/:"Character Maker V4.Get Char info"|


/buttons labels=["Yes", "No"] Want to enable quick mode?(This will not let you edit or reroll the generation.)|
/setvar key=quickRoll {{pipe}}|
/ife ( quickRoll == ''){:
	/setvar key=quickRoll No|
:}|


/setvar key=form {{noop}}|
/ife ( 'TRANSFORM' in tags){:
	/buttons labels=["Normal","Transformation"] "Do you want to make a description for {{getvar::fname}}'s normal form or the transformation?"|
	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Normal'){:
		/setvar key=species "{{getvar::normal_form}}"|
		/setvar key=form "{{getvar::cleanSpeciees}}"|
	:}|
	/elseif ( selected_btn == 'Transformation'){:
		/split {{getvar::transformation}}| /setvar key=tr {{pipe}}|
		/buttons labels={{getvar::tr}} What transformation do you want the description for?|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
		/else {:
			/re-exec first=true find="/\((.*?)\)/g" {{getvar::selected_btn}}|
			/setvar key=a {{pipe}}|
			/getvar key=a index=1| /setvar key=a {{pipe}}|
			/re-exec first=true find="/^(.*?)\(/g" {{getvar::selected_btn}}|
			/setvar key=b {{pipe}}|
			/getvar key=b index=1| /setvar key=b {{pipe}}|
			/setvar key=cleanSpecies {{getvar::b}}|
			/setvar key=type {{getvar::a}}|
			/setvar key=form "{{getvar::cleanSpecies}}"|
		:}|

	:}|
	/else {:
	/setvar key=form "{{getvar::cleanSpecies}}"|

	:}|
:}|

/ife ( type != 'None'){:
	/setvar key=typef "{{getvar::fname}}'s genetalia is {{getvar::type}} in form."
:}|
/else {:
	/setvar key=typef {{noop}}
:}|

/setvar key=extra1 {{noop}}|
/setvar key=extra2 {{noop}}|
/setvar key=extra3 {{noop}}|
/setvar key=extra4 {{noop}}|
/setvar key=cover {{noop}}|

/buttons labels=["cm", "m" , " ft.", " in."] What format do you want to use for the measurements?|
/setvar key=measure {{pipe}}|
/ife ( measure == ''){:
	/echo Aborting | /:"Character Maker V4.Flushvar"|
:}|
/elseif ( measure == 'cm'){:
	/setvar key=measurements "The measurements in the reply should be in centimeters. "|
:}|
/elseif ( measure == 'm'){:
	/setvar key=measurements "The measurements in the reply should be in meters. "|
:}|
/elseif ( measure == ' ft.'){:
	/setvar key=measurements "The measurements in the reply should be in feet. "|
:}|
/elseif ( measure == ' in.'){:
	/setvar key=measurements "The measurements in the reply should be in inches. "|
:}|

/ife ( isTrue == 'yes'){:
	/setvar key=h "(This is the Height of {{getvar::fname}} when standing on two legs. It is mesured from the ground to the top of the head.)"|
:}|
/else {:
	/setvar key=h "(This is the Height of {{getvar::fname}} when standing on four legs. It is measured from the ground to its withers.)"|
:}|

/setvar key=exHeight {{noop}}|
/ife ( toAnalize != '') {:
	/genraw Using this information: '{{getvar::toAnalize}}'
Identify how tall {{getvar::fname}} {{getvar::lname}} is.
Did you find how tall {{getvar::fname}} {{getvar::lname}} is?
If Yes reply with the height. If No reply with None
EXAMPLES: Example1: 150{{getvar::measure}}
Example2: 85{{getvar::measure}}
Example3: None
INSTRUCTION: {{getvar::measurements}}Only reply with the height in numbers or None, noting else.|
	/setvar key=exHeight {{pipe}}|

	/ife ( (exHeight != 'None') and (exHeight != '')){:
		/buttons labels=["Yes", "No"] The found height according to the uploaded material is: {{getvar::exHeight}}. Do you want to use it?(You can convert it later)|
		/setvar key=ex {{pipe}}|
		/ife ( ex == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/elseif ( ex == 'Yes'){:
			/setvar key=selected_btn {{getvar::exHeight}}|
		:}|
		/else {:
			/setvar key=exHeight {{noop}}|
		:}|
	:}|
:}|

/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/whilee (( genState == 'Redo') and (exHeight == '')) {:
	/echo Generating Height|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button02-01|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 58|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 59|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 60|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|

	/setvar key=t {{pipe}}|
	/re-replace replace="" find="/\./g" {{getvar::t}} | /setvar key=t {{pipe}}|
	/split {{getvar::t}} |
	/setvar key=genState {{pipe}}|
  /addvar key=genState "Manually Add"|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|
	/ife ( quickRoll != 'Yes'){:
	  /buttons labels={{getvar::genState}} Select a height.|

		/setvar key=selected_btn {{pipe}}|
	:}|
	/else {:
		/getvar key=genState index=0|
		/setvar key=selected_btn {{pipe}}|
	:}|
	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|

	/ife (selected_btn is string){:
	  /ife ( selected_btn == 'Manually Add'){:
			/input rows=8  Add your own height.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
:}|
/setvar key=height {{getvar::selected_btn}}{{getvar::measure}}|


/setvar key=length None|

/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:

	/setvar key=exLength {{noop}}|
	/ife ( toAnalize != '') {:
		/genraw Using this information: '{{getvar::toAnalize}}'
Identify how long {{getvar::fname}} {{getvar::lname}} is.
Did you find how long {{getvar::fname}} {{getvar::lname}} is?
If Yes reply with the length. If No reply with None
EXAMPLES: Example1: 150{{getvar::measure}}
Example2: 85{{getvar::measure}}
Example3: None
INSTRUCTION: {{getvar::measurements}}Only reply with the length in numbers or None, noting else.|
		/setvar key=exLength {{pipe}}|

		/ife ( (exLength != 'None') and (exLength != '')){:
			/buttons labels=["Yes", "No"] The found height according to the uploaded material is: {{getvar::exHeight}}. Do you want to use it?(You can convert it later)|
			/setvar key=ex {{pipe}}|
			/ife ( ex == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/elseif ( ex == 'Yes'){:
				/setvar key=selected_btn {{getvar::exLength}}|
			:}|
			/else {:
				/setvar key=exLength {{noop}}|
			:}|
		:}|
	:}|


		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
		/setvar key=tskip {{noop}}|

		/whilee (( genState == 'Redo') and (exLength == '')) {:
			/echo Generating Length|
			/setvar key=genState []|

			/setvar key=skip {{noop}}|
			/ife ( tskip != ''){:
				/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
			:}|

			/setvar key=system {{noop}}|
			/setvar key=prompt {{noop}}|
			/setvar key=instruct {{noop}}|

			//Button02-02|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 62|
			/setvar key=system {{pipe}}|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 63|
			/setvar key=prompt {{pipe}}|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 64|
			/setvar key=instruct {{pipe}}|

			/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

			/ife ( debug == 'Yes'){:
				/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
				/setvar key=system {{pipe}}|
				/ife ( system == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
				/setvar key=cprompt {{pipe}}|
				/ife ( cprompt == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
			:}|

			/genraw lock=on name={{char}}
			system="{{getvar::system}}"
{{getvar::cprompt}}|

			/setvar key=t {{pipe}}|
			/re-replace replace="" find="/\./g" {{getvar::t}}| /setvar key=t {{pipe}}|
			/split {{getvar::t}}|
			/setvar key=genState {{pipe}}|
			/addvar key=genState "Manually Add"|
			/ife ( guide == ''){:
				/addvar key=genState "Set Guidance"|
				/addvar key=genState Redo|
			:}|
			/else {:
				/addvar key=genState Change Guidance|
				/addvar key=genState Redo(Keep Guidance)|
				/addvar key=genState Redo(Don't keep Guidance)|
			:}|

			/addvar key=genState "Exclude items"|
			/ife ( quickRoll != 'Yes'){:
				/buttons labels={{getvar::genState}} Select a length from the tip of the nose to the tip of the tail.|

				/setvar key=selected_btn {{pipe}}|
			:}|
			/else {:
				/getvar key=genState index=0|
				/setvar key=selected_btn {{pipe}}|
			:}|
			/ife ( selected_btn == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/ife ( selected_btn is string){:
			  /ife ( selected_btn == 'Manually Add'){:
					/input rows=8 Manually add a length from the tip of the nose to the tip of the tail.|
					/setvar key=selected_btn {{pipe}}|
					/ife ( selected_btn == ''){:
						/setvar key=genState Redo|
					:}|
				:}|
				/elseif ( selected_btn == 'Done'){:
					:}|
				/elseif ( selected_btn == 'Redo'){:
					/setvar key=genState Redo|
				:}|
				/elseif ( 'Don\'t' in selected_btn){:
					/setvar key=genState Redo|
					/setvar key=guide {{noop}}|
				:}|
				/elseif ( 'Keep Guidance' in selected_btn){:
					/setvar key=genState Redo|
				:}|
				/elseif ( 'Guidance' in selected_btn){:
				  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
					/setvar key=guide {{pipe}}|
					/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
				  /setvar key=guide {{pipe}}|
				  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
					/setvar key=guide " ({{pipe}})"|
					/setvar key=genState Redo|
				:}|
				/elseif ( selected_btn == 'Exclude items'){:
					/ife ( tskip != ''){:
						/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
					:}|
					/else {:
						/setvar key=t {{noop}}|
					:}|
					/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
					/setvar key=t {{pipe}}|
					/ife ( t == 'Reset'){:
						/setvar key=tskip {{noop}}|
					:}|
					/elseif ( t != ''){:
						/ife ( tskip != ''){:
							/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
						:}|
						/else {:
							/setvar key=tskip {{getvar::t}}|
						:}|
					:}|
					/setvar key=genState Redo|
				:}|
			:}|
		:}|
		/setvar key=length {{getvar::selected_btn}}{{getvar::measure}}|

:}|



/ife ( length == 'None'){:
	/setvar key=lenghtinf {{noop}}
:}|
/else {:
	/setvar key=lenghtinf "{{getvar::fname}}'s length from the tip of the nose to the tip of the tail is: {{getvar::length}}.
"
:}|

/buttons labels=["g", "kg", "oz", "lbs"] what type of weight measurements do you want to use?|
/setvar key=wmeasure {{pipe}}|
/ife ( wmeasure == ''){:
	/echo Aborting | /:"Character Maker V4.Flushvar"|
:}|
/elseif ( wmeasure == 'cm'){:
	/setvar key=wmeasurements "The weight measurements in the reply should be in Grams. "|
:}|
/elseif ( wmeasure == 'm'){:
	/setvar key=wmeasurements "The weight measurements in the reply should be in Kilograms. "|
:}|
/elseif ( wmeasure == 'oz'){:
	/setvar key=wmeasurements "The weight measurements in the reply should be in Ounce. "|
:}|
/elseif ( wmeasure == 'lbs'){:
	/setvar key=wmeasurements "The weight measurements in the reply should be in Pound. "|
:}|

/setvar key=exWeight {{noop}}|
/ife ( toAnalize != '') {:
	/genraw Using this information: '{{getvar::toAnalize}}'
Identify how heavy {{getvar::fname}} {{getvar::lname}} is.
Did you find how heavy {{getvar::fname}} {{getvar::lname}} is?
If Yes reply with the weight. If No reply with None
EXAMPLES: Example1: 23{{getvar::wmeasure}}
Example2: 85{{getvar::wmeasure}}
Example3: None
INSTRUCTION: {{getvar::wmeasurements}}Only reply with the height in numbers or None, noting else.|
	/setvar key=exWeight {{pipe}}|

	/ife ( (exWeight != 'None') and (exWeight != '')){:
		/buttons labels=["Yes", "No"] The found height according to the uploaded material is: {{getvar::exHeight}}. Do you want to use it?(You can convert it later)|
		/setvar key=ex {{pipe}}|
		/ife ( ex == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/elseif ( ex == 'Yes'){:
			/setvar key=selected_btn {{getvar::exWeight}}|
		:}|
		/else {:
			/setvar key=exWeight {{noop}}|
		:}|
	:}|
:}|

/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/whilee (( genState == 'Redo') and (exWeight == '')) {:
	/echo Generating Weight|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button02-03|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 66|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 67|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 68|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|

	/setvar key=t {{pipe}}|
	/re-replace replace="" find="/\./g" {{getvar::t}}| /setvar key=t {{pipe}}|
	/split {{getvar::t}} |
	/setvar key=genState {{pipe}}|
  /addvar key=genState "Manually Add"|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|
	/ife ( quickRoll != 'Yes'){:
	  /buttons labels={{getvar::genState}} Select a weight.|

		/setvar key=selected_btn {{pipe}}|
	:}|
	/else {:
		/getvar key=genState index=0|
		/setvar key=selected_btn {{pipe}}|
	:}|
	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|

	/ife ( selected_btn is string){:
		/ife ( selected_btn == 'Manually Add'){:
			/input rows=8 Add a weight (End it in kg or t)|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
:}|
/setvar key=weight {{getvar::selected_btn}}|

/setvar key=covers {{noop}}|

/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue yes|
	/getentryfield file="Character Maker Combined NSFW" 25|
	/setvar key=covers {{pipe}}|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue yes|
	/getentryfield file="Character Maker Combined NSFW" 26|
	/setvar key=covers {{pipe}}|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( (type == 'Canine') or (type == 'Feline') or (type == 'Equine')){:
	/setvar key=coverType Mammalian Fur|
:}|
/elseif ( (type == 'Reptilian') ){:
	/setvar key=coverType Reptile Scales|
:}|
/elseif ( (type == 'Aviary') ){:
	/setvar key=coverType Avian Plumage|
	/*
	Avian Plumage
	Feathered Covering
	Plume
	Featherwork
	*|
:}|

/ife ( isTrue == 'yes'){:
	/setvar key=overall {{noop}}|
	/whilee ( overall == ''){:
		/ife ( 'Animal' not in species) {:
			/genraw {{getvar::fname}} is a {{getvar::species}}. Describe in detail {{getvar::genpron}} covering(This is the {{getvar::coverType}} of {{getvar::fname}}).
Describe what parts of {{getvar::fname}} is covered in {{getvar::coverType}}.
Describe what parts are what color.
Have user included a color scheme?
If yes use that. If no make a realistic color scheme for a {{getvar::cleanSpeciees}}.
Analize the INFORMATION for information about {{getvar::fname}}'s {{getvar::coverType}} color and pattern.
Use the Analized information and User Input(Prioritize User Input) to make the description.
User Input: {{getvar::userInput}}
INFORMATION: {{getvar::toAnalize}}
INSTRUCTION: The reply should be neutral. The reply should foccus on {{getvar::fname}}'s {{getvar::coverType}} color and pattern, what body parts of {{getvar::fname}}'s body are covered by {{getvar::coverType}}.|
			/setvar key=t {{pipe}}|
		:}|
		/else {:
			/genraw {{getvar::fname}} is a {{getvar::cleanSpeciees}}. Describe in detail {{getvar::genpron}} covering(This is the {{getvar::coverType}} of {{getvar::fname}}).
Describe what parts of {{getvar::fname}} is covered in {{getvar::coverType}}.
Describe what parts are what color.
Have user included a color scheme?
If yes use that. If no make a realistic color scheme for a {{getvar::cleanSpeciees}}.
Analize the INFORMATION for information about {{getvar::fname}}'s {{getvar::coverType}} color and pattern.
Use the Analized information and User Input(Prioritize User Input) to make the description.
User Input: {{getvar::userInput}}
INFORMATION: {{getvar::toAnalize}}
INSTRUCTION: The reply should be neutral. The reply should foccus on {{getvar::fname}}'s {{getvar::coverType}} color and pattern.|
			/setvar key=t {{pipe}}|
		:}|
		/input default={{getvar::t}} rows=15 okButton=Continue Press cancel to redo the description.|
		/setvar key=overall {{pipe}}|

	:}|
:}|
/else {:
	/setvar key=overall {{noop}}|
	/whilee ( overall == ''){:
		/genraw {{getvar::fname}} is a Human.
**User Input:** '{{getvar::userInput}}'
**INFORMATION:** '{{getvar::toAnalize}}'

Analize the **INFORMATION:** and **User Input:** for information about {{getvar::fname}}'s sunburn. If there is conflicting information use **User Input:**.
Do {{getvar::fname}} have a sunburn?
**INSTRUCTION:** The reply should be Yes or No, nothing else.|
		/setvar key=sunburn {{pipe}}|

		/ife ( (sunburn == 'Yes') or (sunburn == 'yes')) {:
			/genraw {{getvar::fname}} is a Human.
**User Input:** '{{getvar::userInput}}'
**INFORMATION:** '{{getvar::toAnalize}}'

Use the **INFORMATION:** and **User Input:** for information about {{getvar::fname}}'s sunburn. If there is conflicting information use **User Input:**.
Make a comma-seperated list of bodyparts or part of bodyparts that is sunburned. . If nothing is specified make a comma-seperated list that make sense using the available information.
**INSTRUCTION:** The reply should be a comma-seperated list, nothing else.|
			/setvar key=sunburn {{pipe}}|
		:}|
		/else {:
			/setvar key=sunburn {{noop}}|
		:}|


		/genraw {{getvar::fname}} is a Human.
**User Input:** '{{getvar::userInput}}'
**INFORMATION:** '{{getvar::toAnalize}}'

Analize the **INFORMATION:** and **User Input:** for information about {{getvar::fname}}'s suntan. If there is conflicting information use **User Input:**.
Do {{getvar::fname}} have a suntan?
**INSTRUCTION:** The reply should be Yes or No, nothing else.|
		/setvar key=suntan {{pipe}}|

		/ife ( (suntan == 'Yes') or (suntan == 'yes')) {:
			/genraw {{getvar::fname}} is a Human.
**User Input:** '{{getvar::userInput}}'
**INFORMATION:** '{{getvar::toAnalize}}'

Use the **INFORMATION:** and **User Input:** for information about {{getvar::fname}}'s suntan. If there is conflicting information use **User Input:**.
Make a comma-seperated list of bodyparts or part of bodyparts that is suntaned. If nothing is specified make a comma-seperated list that make sense using the available information.
**EXAMPLES:** Example1: upper back, arms, legs
Example2: face, breasts, hands, feet
Example3: cleavage, pussy mound, stomach
**INSTRUCTION:** The reply should be a comma-seperated list, nothing else.|
			/setvar key=suntan {{pipe}}|
		:}|
		/else {:
			/setvar key=suntan {{noop}}|
		:}|

		/setvar key=charInformation {{noop}}|
		/ife ( sunburn != ''){:
			/addvar key=charInformation "{{getvar::fname}} have sunburn on these bodyparts: {{getvar::sunburn}}
"|
		:}|
		/ife ( suntan != ''){:
			/addvar key=charInformation "{{getvar::fname}} have suntan on these bodyparts: {{getvar::suntan}}
"|
		:}|

		/genraw {{getvar::fname}} is a Human.
**User Input:** '{{getvar::userInput}}'
**INFORMATION:** '{{getvar::charInformation}}'

Analize the **INFORMATION:** and **User Input:** for information about {{getvar::fname}}'s skin color. If there is conflicting information use **User Input:**.
What is {{getvar::fname}}'s base skin color?
**INSTRUCTION:** The reply should be a skin color, nothing else.|
		/setvar key=scolor {{pipe}}|

		/addvar key=charInformation "{{getvar::fname}}'s base skin color is: {{getvar::scolor}}"|

		/genraw {{getvar::fname}} is a Human.
**INFORMATION:** '{{getvar::charInformation}}'

Analize the **INFORMATION:** for information about {{getvar::fname}}'s looks.
Make a description of {{getvar::fname}}'s body.
**INSTRUCTION:** The reply should be a description, nothing else.|

		/setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=15 okButton=Continue Press cancel to redo the description. Only reply with a description, nothing else.|
		/setvar key=overall {{pipe}}|
	:}|
:}|

/setvar key=cover {{noop}}|
/setvar key=skin_color {{noop}}|

/ife ( isTrue == 'yes'){:
	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generating Covering|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button02-04A|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 70|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 71|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 72|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|

		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this the covering you want for {{getvar::fname}}?|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0 | /setvar key=t {{pipe}}|
			/input rows=8 default={{getvar::t}} Edit the description to what you want.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/setvar key=cover {{getvar::selected_btn}}|

:}|
/else {:
	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generating Skin Color|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button02-04B|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 409|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 408|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 407|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|

		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this the Skin color you want for {{getvar::fname}}?|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0 | /setvar key=t {{pipe}}|
			/input rows=8 default={{getvar::t}} Edit the description to what you want.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/setvar key=skin_color {{getvar::selected_btn}}|
:}|

/setvar key=input []|
/setvar key=oL {{noop}}|
/setvar key=oE {{noop}}|
/setvar key=outputLenght []|
/setvar key=outputExamples []|

/addvar key=input "Hair(This is the hair on top of {{getvar::fname}}'s head. This should only include hair color, hair length and hairstyle.)"|
/addvar key=outputLenght "Reply with less then two sentences"|
/addvar key=outputExamples "Example1: {{getvar::fname}}'s brown hair is short and messy.
Example2: {{getvar::fname}}'s pink hair is put up in a neat braid."|

/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/buttons labels=["Yes","No"] Do the character have horns?|
	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Yes'){:
		/addvar key=input "Horns(This is {{getvar::cleanSpeciees}}'s horns or things like that on the head.)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples Example1: {{getvar::fname}}'s horns are pointing strait up ending in a sharp tip.
Example2: {{getvar::fname}}'s rainbow colored horn is in the middle of {{getvar::genpron}} forehead and is ending in a sharp tip.|
		/ife ( extra1 !=''){:
			/setvar key=extra1 ", Horns"|
		:}|
		/else {: /setvar key=extra1 Horns| :}|
	:}|
:}|

/ife ( type == 'Human'){:
	/addvar key=input "Ears(This should include the form and position of {{getvar::fname}}'s ears)"|
:}|
/else {:
	/addvar key=input "Ears(This should include the form and position of {{getvar::fname}}'s {{getvar::cleanSpeciees}} ears)"|
:}|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples Example1: {{getvar::fname}}'s ears are rounded at the edges with a slight upward tilt.
Example2: {{getvar::fname}}'s ears are pointed with a sharp tilt backwards.
Example2: {{getvar::fname}}'s ears are pointed with a tuff of fur at the tips.|
/ife ( isTrue == 'Yes'){:
	/ife ( extra1 == ''){:
		/addvar key=extra1 ", Ears"|
	:}|
	/else {: /setvar key=extra1 Ears| :}|
:}|

/addvar key=input "Eyes(This should include the color of the irises and form of the pupils of {{getvar::fname}}'s {{getvar::cleanSpeciees}} eyes)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples Example1: {{getvar::fname}}'s eyes are golden with vertical slit pupils.
Example1: {{getvar::fname}}'s eyes are brown with circular pupils.|

/addvar key=input "Nose(This should include the form and look of {{getvar::fname}}'s {{getvar::cleanSpeciees}} nose)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples {{noop}}|

/addvar key=input "Mouth(This should include the shape, type and look of {{getvar::fname}}'s {{getvar::cleanSpeciees}} teeth and lips)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples {{noop}}|

/addvar key=input "Tongue(This should include the shape, type and look of {{getvar::fname}}'s {{getvar::cleanSpeciees}} tongue)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples {{noop}}|

/setvar key=fea {{noop}}|
/ife ( extra1 != ''){:
	/setvar key=fea " (In addition to {{getvar::extra1}})"|
:}|

/ife ( 'Demi-Human' not in species){:
	/ife ( 'Human' in species){:
		/setvar key=isTrue no|
	:}|
	/else {: /setvar key=isTrue yes|:}|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/buttons labels=["Yes","No"] Do {{getvar::fname}} have any non human feature on the head?{{getvar::fea}}|

	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Yes'){:
		/setvar key=w No|

		/while left=w right=Yes rule=neq {:
			/input rows=8 <div>Add a feature to {{getvar::fname}}'s head.</div><div>Example: Ridge(This is a bony ridge on top of {{getvar::fname}}'s head.)</div><div>Important: There is no space betwene "Ridge" and "(". The () is not needed but is reccomended</div> |

			/setvar key=add {{pipe}}|

			/ife ( add == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/else {:
				/addvar key=input {{getvar::add}}|
				/input default="Reply with less then three sentences" rows=8 How many sentences do you want for this generation?|
				/setvar key=t {{pipe}}|
				/ife ( t == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/addvar key=outputLenght {{getvar::t}}|
				/input default="Example1: Something
Example2: something else" rows=8 Add some examples. Press cancel if you don't need them.|
				/addvar key=outputExamples {{pipe}}|
				/re-replace find="/\(.*$/g" replace="" {{getvar::add}}|
				/setvar key=add {{pipe}}|

				/ife ( extra1 != ''){:
					/addvar key=extra1 ", {{getvar::add}}"|
				:}|
				/else {:
					/setvar key=extra1 {{getvar::add}}|
				:}|

				/buttons labels=["Yes","No"]Are you done?|
				/setvar key=w {{pipe}}|

				/ife ( w == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
			:}|
		:}|
	:}|
:}|

/setvar key=h1 []|
/foreach {{getvar::input}} {:
	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/getvar key=outputLenght index={{getvar::in}}|
  /setvar key=oL {{pipe}}|
  /getvar key=outputExamples index={{getvar::in}}|
  /setvar key=oE {{pipe}}|

	/while left=genState right=Redo rule=eq {:
		/re-replace find="/\(.*$/g" replace="" {{getvar::it}}|
		/setvar key=cat {{pipe}}|
		/echo Generating Head: {{getvar::cat}}|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|
		/setvar key=item {{getvar::it}}|

		//Button02-05|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 74|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 75|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 76|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|


		/addvar key=genState {{pipe}}|
		/ife ( cat == 'Hair'){: /addvar key=genState None :}|
		/ife ( cat == 'Horns'){: /addvar key=genState None :}|

		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this a good description of {{getvar::fname}}'s {{getvar::cat}}?|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0 | /setvar key=t {{pipe}}|
			/input rows=8 default={{getvar::t}} Edit the description to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/addvar key=h1 "{{getvar::cat}}: {{getvar::selected_btn}}"|
:}|

/setvar key=p1st {{noop}}|
/foreach {{getvar::h1}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( in != 0){:
		/ife ( it != 'Horns: None'){:
			/addvar key=p1st "
{{getvar::it}}"|
		:}|
	:}|
	/else {:
		/addvar key=p1st "{{getvar::it}}"
	:}|
:}|
/setvar key=face {{getvar::h1}}|

/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generating Face Appearance|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button02-06|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 78|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 79|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 80|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


  /addvar key=genState {{pipe}}|
  /addvar key=genState Edit|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|
	/ife ( quickRoll != 'Yes'){:
	  /buttons labels={{getvar::genState}} Is this description to your liking?|

		/setvar key=selected_btn {{pipe}}|
	:}|
	/else {:
		/getvar key=genState index=0|
		/setvar key=selected_btn {{pipe}}|
	:}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0 | /setvar key=t {{pipe}}|
		/input rows=8 default={{getvar::t}} Edit the description to your liking.|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
	  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
		/setvar key=guide {{pipe}}|
		/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
	  /setvar key=guide {{pipe}}|
	  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
:}|
/setvar key=p2 {{getvar::selected_btn}}|


/setvar key=head "{{getvar::p1st}}
Appearance: {{getvar::p2}}"|

/addvar key=face "Appearance: {{getvar::p2}}"|


/setvar key=input []|
/setvar key=oL {{noop}}|
/setvar key=oE {{noop}}|
/setvar key=outputLenght []|
/setvar key=outputExamples []|

/addvar key=input "Body Type(This is {{getvar::fname}}'s body type.)"|
/addvar key=outputLenght "Reply with a short sentence that describes {{getvar::genpron}} body type"|
/addvar key=outputExamples "Example1: {{getvar::fname}} body is petite but athletically built.
Example2: {{getvar::fname}} is Curvaceous yet lean, with strong musculature that hints at {{getvar::genpron}} agility and prowess.
Example3: {{getvar::fname}}'s body is well trained.
Example4: {{getvar::fname}} is small and slender for her age."|

/addvar key=input "Torso(Mention skin color, skin complexion, suntan. Exclude stomach, breasts, nipples, arms and butt from the reply)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples Example1: {{getvar::fname}}'s torso is hairy with well defined muscles .
Example2: {{getvar::fname}}'s torso is mostly smooth without a trace of muscles.|

/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/addvar key=input "Front Legs"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|
:}|
/else {:
	/addvar key=input "Arms(This is {{getvar::fname}}'s upper and lower arms.(Mention skin color, skin complexion, suntan.) Exclude hands and fingers in the reply)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|
:}|


/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/buttons labels=["Hands","Front Paws", "Front Fins","Front Hooves", "Front Flippers"]|
	/setvar key=selected_btn {{pipe}}|
	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Hands'){:
		/addvar key=input "{{getvar::selected_btn}}(This is human hands with human fingers)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( selected_btn == 'Front Paws'){:
		/ife ( posture == 'Bipedal'){:
			/setvar key=inex (Front Paws are something {{getvar::fname}} can use to hold things and is seldom used to walk with.)|
		:}|
		/elseif ( posture == 'Quadrupedal'){:
			/setvar key=inex (Front Paws are something {{getvar::fname}} is using to walk with.)|
		:}|
		/addvar key=input "{{getvar::selected_btn}}{{getvar::inex}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( selected_btn == 'Front Fins'){:
		/addvar key=input "{{getvar::selected_btn}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( selected_btn == 'Front Hooves'){:
		/addvar key=input "{{getvar::selected_btn}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( selected_btn == 'Front Flippers'){:
		/addvar key=input "{{getvar::selected_btn}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/else {:
		/addvar key=input "{{getvar::selected_btn}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/setvar key=inex {{noop}}|
:}|
/else {:
	/addvar key=input "Hands(Mention skin color, skin complexion, suntan.)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|
:}|



/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/buttons labels=["Yes","No"] Do the character have Claws?|
	/setvar key=selected_btn {{pipe}}|
	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Yes'){:
		/addvar key=input "Claws(This is {{getvar::cleanSpeciees}} claws)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples "Example1: {{getvar::fname}}'s claws are sharp and slightly curved.
Example2: {{getvar::fname}}'s claws are well-groomed and blunt."|
		/ife ( extra2 == ''){:
			/addvar key=extra2 ", Claws"|
		:}|
		/else {: /setvar key=extra2 Claws| :}|
	:}|
	/buttons labels=["Yes","No"] Do the character have Wings?|
	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Yes'){:
		/addvar key=input "Wings(This is {{getvar::cleanSpeciees}} wings)"|

		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples "Example1: {{getvar::fname}}'s wings are bat like with bony protrusions.
Example2: {{getvar::fname}}'s wings are feathered and colorful."|
		/ife ( extra2 == ''){:
			/addvar key=extra2 ", Wings"|
		:}|
		/else {: /setvar key=extra2 Wings| :}|
	:}|
:}|

/addvar key=input "Stomach(Mention skin color, skin complexion, suntan.)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples Example1: {{getvar::fname}}'s stomach has a hard six pack, with a outie bellybutton.
Example1: {{getvar::fname}}'s stomach is small and flat, with a bellybutton that is slightly indented.|

/setvar key=fea {{noop}}|
/ife ( extra2 != ''){:
	/setvar key=fea " (In addition to {{getvar::extra2}})"|
:}|

/ife ( 'Demi-Human' not in species){:
	/ife ( 'Human' in species){:
		/setvar key=isTrue no|
	:}|
	/else {: /setvar key=isTrue yes|:}|
:}|
/else {: /setvar key=isTrue yes|:}|
/ife ( isTrue == 'yes'){:
	/buttons labels=["Yes","No"] Do {{getvar::fname}} have any non human feature on the upper body?{{getvar::fea}}|

	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Yes'){:
		/setvar key=w No|
		/while left=w right=Yes rule=neq {:
			/input rows=8 <div>Add a feature to {{getvar::fname}}'s head.</div><div>Example: Ridge(This is a bony ridge on top of {{getvar::fname}}'s head.)</div><div>Important: There is no space betwene "Ridge" and "(". The () is not needed but is reccomended</div> |

			/setvar key=add {{pipe}}|

			/ife ( add == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/else {:
				/addvar key=input {{getvar::add}}|
				/input default="Reply with less then three sentences" rows=8 How many sentences do you want for this generation?|
				/setvar key=t {{pipe}}|
				/ife ( t == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/addvar key=outputLenght {{getvar::t}}|
				/input default="Example1: Something
Example2: something else" rows=8 Add some examples. Press cancel if you don't need them.|
				/addvar key=outputExamples {{pipe}}|
				/re-replace find="/\(.*$/g" replace="" {{getvar::add}}|
				/setvar key=add {{pipe}}|

				/ife ( extra2 != ''){:
					/addvar key=extra2 ", {{getvar::add}}"|
				:}|
				/else {:
					/setvar key=extra2 {{getvar::add}}|
				:}|
				/buttons labels=["Yes","No"]Are you done?|
				/setvar key=w {{pipe}}|
				/ife ( w  == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
			:}|
		:}|
	:}|
:}|

/setvar key=body_type {{noop}}|

/setvar key=u1 []|
/foreach {{getvar::input}} {:
	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/getvar key=outputLenght index={{getvar::in}}|
	/setvar key=oL {{pipe}}|
	/getvar key=outputExamples index={{getvar::in}}|
	/setvar key=oE {{pipe}}|

	/while left=genState right=Redo rule=eq {:
		/re-replace find="/\(.*$/g" replace="" {{getvar::it}}|
		/setvar key=cat {{pipe}}|
		/echo Generating Upper Body: {{getvar::cat}}|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|
		/setvar key=item {{getvar::it}}|

		//Button02-07|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 82|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 83|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 84|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|


		/addvar key=genState {{pipe}}|
		/ife ( cat == 'Claws'){: /addvar key=genState None :}|
		/ife ( cat == 'Wings'){: /addvar key=genState None :}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this a good description of {{getvar::fname}}'s {{getvar::cat}}|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0 | /setvar key=t {{pipe}}|
			/input rows=8 default={{getvar::t}} Edit the description to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/ife ( cat == 'Body Type'){:
		/setvar key=body_type "{{getvar::fname}}'s body type is {{getvar::selected_btn}}"
	:}|
	/addvar key=u1 "{{getvar::cat}}: {{getvar::selected_btn}}"|
:}|

/setvar key=p1st {{noop}}|
/foreach {{getvar::u1}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( in != 0){:
		/ife ( it != 'Horns: None'){:
			/addvar key=p1st "
{{getvar::it}}"|
		:}|
	:}|
	/else {: /addvar key=p1st "{{getvar::it}}" :}|
:}|


/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generating torso Appearance|
    /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button02-08|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 86|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 87|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 88|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


  /addvar key=genState {{pipe}}|
  /addvar key=genState Edit|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|
	/ife ( quickRoll != 'Yes'){:
	  /buttons labels={{getvar::genState}} Is this description to your liking?|

		/setvar key=selected_btn {{pipe}}|
	:}|
	/else {:
		/getvar key=genState index=0|
		/setvar key=selected_btn {{pipe}}|
	:}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0 | /setvar key=t {{pipe}}|
		/input rows=8 default={{getvar::t}} Edit the description to your liking.|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
	  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
		/setvar key=guide {{pipe}}|
		/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
	  /setvar key=guide {{pipe}}|
	  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
:}|
/setvar key=u2 {{getvar::selected_btn}}|
/setvar key=upper_body "{{getvar::p1st}}
Appearance: {{getvar::p2}}"|

/setvar key=upper {{getvar::u1}}|
/addvar key=upper "Appearance: {{getvar::u2}}"|



/setvar key=input []|
/setvar key=oL {{noop}}|
/setvar key=oE {{noop}}|
/setvar key=outputLenght []|
/setvar key=outputExamples []|

/addvar key=input "Buttocks(Mention skin color, skin complexion, suntan. Exclude tail in the reply)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples Example1: {{getvar::fname}}'s butt is firm.
Example2: {{getvar::fname}}'s butt is small and squishy.|


/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|


/ife ( isTrue == 'yes'){:
	/buttons labels=["Yes","No"] Do the character have a tail?|
	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Yes'){:
		/addvar key=input "Tail(This is a {{getvar::cleanSpeciees}} tail)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples "Example1: {{getvar::fname}}'s tail is covered with scales and have spikes at the end.
Example2: {{getvar::fname}}'s tail is soft and fluffy."|
		/ife ( extra3 != ''){:
			/addvar key=extra3 ", Tail"|
		:}|
		/else {: /setvar key=extra3 Tail| :}|
	:}|
:}|


/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/addvar key=input "Hind Legs(Exclude Feet and toes in the reply)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: {{getvar::fname}}'s hind legs are long and powerful.
Example2: {{getvar::fname}}'s hind legs are short and stubby."|
:}|
/else {:
	/addvar key=input "Legs(Mention skin color, skin complexion, suntan. Exclude Feet and toes in the reply)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: {{getvar::fname}}'s legs are long and powerful.
Example2: {{getvar::fname}}'s legs are short and stubby."|
:}|

/setvar key=fea {{noop}}|
/ife ( extra3 != ''){:
	/setvar key=fea " (In addition to {{getvar::extra3}})"|
:}|

/ife ( 'Demi-Human' not in species){:
	/ife ( 'Human' in species){:
		/setvar key=isTrue no|
	:}|
	/else {: /setvar key=isTrue yes|:}|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/buttons labels=["Yes","No"] Do {{getvar::fname}} have any non human feature on the lower body?{{getvar::fea}}|

	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Yes'){:
		/setvar key=w No|
		/while left=w right=Yes rule=neq {:
			/input rows=8 <div>Add a feature to {{getvar::fname}}'s head.</div><div>Example: Ridge(This is a bony ridge on top of {{getvar::fname}}'s head.)</div><div>Important: There is no space betwene "Ridge" and "(". The () is not needed but is reccomended</div> |
			/setvar key=add {{pipe}}|

			/ife ( add == ''(){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/else {:
				/addvar key=input {{getvar::add}}|
				/input default="Reply with less then three sentences" rows=8 How many sentences do you want for this generation?|
				/setvar key=t {{pipe}}|
				/ife ( t == ''){:
				  /echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/addvar key=outputLenght {{getvar::t}}|
				/input default="Example1: Something
Example2: something else" rows=8 Add some examples. Press cancel if you don't need them.|
				/addvar key=outputExamples {{pipe}}|
				/re-replace find="/\(.*$/g" replace="" {{getvar::add}}|
				/setvar key=add {{pipe}}|
				/ife {: ( extra3 != ){:
					/addvar key=extra3 ", {{getvar::add}}"|
				:}|
				/else {:
					/setvar key=extra3 {{getvar::add}}|
				:}|
				/buttons labels=["Yes","No"]Are you done?|
				/setvar key=w {{pipe}}|
				/ife ( w == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
			:}|
		:}|
	:}|
:}|



/ife ( 'Demi-Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Human' in species){:
	/setvar key=isTrue no|
:}|
/elseif ( 'Anthro' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Beastkin' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Pok√©mon' in species){:
	/setvar key=isTrue yes|
:}|
/elseif ( 'Animal' in species){:
	/setvar key=isTrue yes|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/buttons labels=["Feet","Hind Paws", "Hind Fins","Hind Hooves", "Flippers"] What type of extremities does {{getvar::fname}} use? |
	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Feet'){:
		/addvar key=input "{{getvar::selected_btn}}(Mention skin color, skin complexion, suntan. This is human Feet)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( selected_btn == 'Hind Paws'){:
		/addvar key=input "{{getvar::selected_btn}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
		/ife ( extra4 != ''){:
			/addvar key=extra4 ", {{getvar::selected_btn}}"|
		:}|
		/else {:
			/setvar key=extra4 "{{getvar::selected_btn}}"|
		:}|
	:}|
	/elseif ( selected_btn == 'Hind Fins'){:
		/addvar key=input "{{getvar::selected_btn}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
		/ife ( extra4 != ''){:
			/addvar key=extra4 ", {{getvar::selected_btn}}"|
		:}|
		/else {:
			/setvar key=extra4 "{{getvar::selected_btn}}"|
		:}|
	:}|
	/elseif ( selected_btn == 'Hind Hooves'){:
		/addvar key=input "{{getvar::selected_btn}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
		/ife ( extra4 != ''){:
			/addvar key=extra4 ", {{getvar::selected_btn}}"|
		:}|
		/else {:
			/setvar key=extra4 "{{getvar::selected_btn}}"|
		:}|
	:}|
	/elseif ( selected_btn == 'Hind Flippers'){:
		/addvar key=input "{{getvar::selected_btn}}"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
		/ife ( extra4 != ''){:
			/addvar key=extra4 ", {{getvar::selected_btn}}"|
		:}|
		/else {:
			/setvar key=extra4 "{{getvar::selected_btn}}"|
		:}|
	:}|
:}|
/else {:
	/addvar key=input "Feet(Mention skin color, skin complexion, suntan.)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|
:}|

/setvar key=fea {{noop}}|
/ife ( extra4 != ''){:
	/setvar key=fea " (In addition to {{getvar::extra4}})"|
:}|

/ife ( 'Demi-Human' not in species){:
	/ife ( 'Human' in species){:
		/setvar key=isTrue no|
	:}|
	/else {: /setvar key=isTrue yes|:}|
:}|
/else {: /setvar key=isTrue yes|:}|

/ife ( isTrue == 'yes'){:
	/buttons labels=["Yes","No"] Do {{getvar::fname}} have any other non human feature on some other places on the body?{{getvar::fea}}|

	/setvar key=selected_btn {{pipe}}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
	/elseif ( selected_btn == 'Yes'){:
		/setvar key=w No|
		/while left=w right=Yes rule=neq {:
			/input rows=8 <div>Add a feature to {{getvar::fname}}'s head.</div><div>Example: Ridge(This is a bony ridge on top of {{getvar::fname}}'s head.)</div><div>Important: There is no space betwene "Ridge" and "(". The () is not needed but is reccomended</div> |
			/setvar key=add {{pipe}}|

			/ife ( add == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/else {:
				/addvar key=input {{getvar::add}}|
				/input default="Reply with less then three sentences" rows=8 How many sentences do you want for this generation?|
				/setvar key=t {{pipe}}|
				/ife ( t == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/addvar key=outputLenght {{getvar::t}}|
				/input default="Example1: Something
Example2: something else" rows=8 Add some examples. Press cancel if you don't need them.|
				/addvar key=outputExamples {{pipe}}|
				/re-replace find="/\(.*$/g" replace="" {{getvar::add}}|
				/setvar key=add {{pipe}}|

				/ife ( extra4 != ''){:
					/addvar key=extra4 ", {{getvar::add}}"|
				:}|
				/else {:
					/setvar key=extra4 {{getvar::add}}|
				:}|
				/buttons labels=["Yes","No"]Are you done?|
				/setvar key=w {{pipe}}|
				/ife ( w == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
			:}|
		:}|
	:}|
:}|

/setvar key=l1 []|
/foreach  {{getvar::input}} {:
	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/getvar key=outputLenght index={{getvar::in}}|
	/setvar key=oL {{pipe}}|
	/getvar key=outputExamples index={{getvar::in}}|
	/setvar key=oE {{pipe}}|

	/while left=genState right=Redo rule=eq {:
		/re-replace find="/\(.*$/g" replace="" {{getvar::it}}|
		/setvar key=cat {{pipe}}|
		/echo Generating Lower Body: {{getvar::cat}}|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|
		/setvar key=item {{getvar::it}}|

		//Button02-09|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 90|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 91|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 92|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|


		/addvar key=genState {{pipe}}|
		/ife ( cat == 'Tail'){: /addvar key=genState None :}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this a good description of {{getvar::fname}}'s {{getvar::cat}}|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0 | /setvar key=t {{pipe}}|
			/input rows=8 default={{getvar::t}} Edit the description to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/addvar key=l1 "{{getvar::cat}}: {{getvar::selected_btn}}"|
:}|

/setvar key=p2st {{noop}}|
/foreach {{getvar::l1}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( in != 0){:
		/ife ( it != 'Horns: None'){:
			/addvar key=p2st "
{{getvar::it}}"
		:}|
	:}|
	/else {: /addvar key=p2st "{{getvar::it}}" :}|
:}|


/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generating lower body Appearance|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button02-10|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 94|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 95|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 96|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


  /addvar key=genState {{pipe}}|
  /addvar key=genState Edit|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|
	/ife ( quickRoll != 'Yes'){:
	  /buttons labels={{getvar::genState}} Is this description to your liking?|

		/setvar key=selected_btn {{pipe}}|
	:}|
	/else {:
		/getvar key=genState index=0|
		/setvar key=selected_btn {{pipe}}|
	:}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0| /setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=8 Edit the description to your liking.|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
	  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
		/setvar key=guide {{pipe}}|
		/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
	  /setvar key=guide {{pipe}}|
	  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
:}|
/setvar key=l2 {{getvar::selected_btn}}|
/setvar key=lower_body "{{getvar::p2st}}
Appearance: {{getvar::l2}}"|

/setvar key=lower {{getvar::l1}}|
/addvar key=lower "Appearance: {{getvar::l2}}"|


/setvar key=special {{noop}}|
/ife ( 'FCANINE' in list){:
	/getentryfield file="Character Maker Combined NSFW" 2|
	/addvar key=special {{pipe}}|
:}|
/elseif ( 'MCANINE' in list){:
	/getentryfield file="Character Maker Combined NSFW" 5|
	/addvar key=special {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW" 6|
	/addvar key=special "
{{pipe}}"|
	/getentryfield file="Character Maker Combined NSFW" 7|
	/addvar key=special "
{{pipe}}"|
:}|
/ife ( 'FQEUINE' in list){:
	/getentryfield file="Character Maker Combined NSFW" 3|
	/addvar key=special {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW" 4|
	/addvar key=special "
{{pipe}}"|
:}|
/elseif ( 'MQEUINE' in list){:
	/getentryfield file="Character Maker Combined NSFW" 8|
	/addvar key=special {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW" 9|
	/addvar key=special "
{{pipe}}"|
	/getentryfield file="Character Maker Combined NSFW" 10|
	/addvar key=special "
{{pipe}}"|
	/getentryfield file="Character Maker Combined NSFW" 11|
	/addvar key=special "
{{pipe}}"|
:}|
/ife ( 'FFELINE' in list){::}|
/elseif ( 'MFELINE' in list){::}|
/elseif ( 'FREPTILIAN' in list){::}|
/elseif ( 'MREPTILIAN' in list){::}|
/elseif ( 'FAVIARY' in list){::}|
/elseif ( 'MAVIARY' in list){::}|

/setvar key=breasts {{noop}}|
/setvar key=pussy {{noop}}|
/setvar key=dick {{noop}}|

/ife ( NSFW == 'Yes'){:
/ife ( gender == 'Female'){:
	/setvar key=input []|
	/setvar key=oL {{noop}}|
	/setvar key=oE {{noop}}|
	/setvar key=outputLenght []|
	/setvar key=outputExamples []|

	/addvar key=input "Cup size(This is the size of {{getvar::fname}}'s breasts.)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|

	/addvar key=input "Firmness(This is the firmness of {{getvar::fname}}'s breasts.)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: The firmness of {{getvar::fname}}'s breasts is squishy to the touch.
	Example2: {{getvar::fname}}'s breasts is firm to the touch."|

	/addvar key=input "Nipples(This is type(Protruding, flat or inverted) and size(long, short, wide) of {{getvar::fname}}'s nipples.)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: {{getvar::fname}}'s nipples are long and protruding.
	Example2: {{getvar::fname}}'s nipples are inverted."|

	/addvar key=input "Sensitivity(This is the sensitivity of {{getvar::fname}}'s nipples.)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: The sensitivity of {{getvar::fname}}'s nipples is really high.
	Example2: The sensitivity of {{getvar::fname}}'s nipples is low."|


	/setvar key=b1 []|
	/foreach {{getvar::input}} {:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
		/setvar key=tskip {{noop}}|
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|

		/while left=genState right=Redo rule=eq {:
			/re-replace find="/\(.*$/g" replace="" {{getvar::it}}|
			/setvar key=cat {{pipe}}|
			/echo Generating Breast: {{getvar::cat}}|
			/setvar key=genState []|
			/getvar key=outputLenght index={{getvar::in}}|
		  /setvar key=oL {{pipe}}|
		  /getvar key=outputExamples index={{getvar::in}}|
		  /setvar key=oE {{pipe}}|

			/setvar key=skip {{noop}}|
			/ife ( tskip != ''){:
				/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
			:}|

			/setvar key=system {{noop}}|
			/setvar key=prompt {{noop}}|
			/setvar key=instruct {{noop}}|
			/setvar key=item {{getvar::it}}|

			//Button02-11|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 98|
			/setvar key=system {{pipe}}|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 99|
			/setvar key=prompt {{pipe}}|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 100|
			/setvar key=instruct {{pipe}}|

			/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

			/ife ( debug == 'Yes'){:
				/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
				/setvar key=system {{pipe}}|
				/ife ( system == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
				/setvar key=cprompt {{pipe}}|
				/ife ( cprompt == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
			:}|

			/genraw lock=on name={{char}}
			system="{{getvar::system}}"
{{getvar::cprompt}}|

			/addvar key=genState {{pipe}}|
			/addvar key=genState Edit|
			/ife ( guide == ''){:
				/addvar key=genState "Set Guidance"|
				/addvar key=genState Redo|
			:}|
			/else {:
				/addvar key=genState Change Guidance|
				/addvar key=genState Redo(Keep Guidance)|
				/addvar key=genState Redo(Don't keep Guidance)|
			:}|

			/addvar key=genState "Exclude items"|
			/ife ( quickRoll != 'Yes'){:
				/buttons labels={{getvar::genState}} Is this a good description of {{getvar::fname}}'s {{getvar::cat}}|

				/setvar key=selected_btn {{pipe}}|
			:}|
			/else {:
				/getvar key=genState index=0|
				/setvar key=selected_btn {{pipe}}|
			:}|

			/ife ( selected_btn == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		  /elseif ( selected_btn == 'Edit'){:
				/getvar key=genState index=0| /setvar key=t {{pipe}}|
				/input default={{getvar::t}} rows=8 Edit the description to your liking.|
				/setvar key=selected_btn {{pipe}}|
				/ife ( selected_btn == ''){:
					/setvar key=genState Redo|
				:}|
			:}|
			/elseif ( selected_btn == 'Done'){:
				:}|
			/elseif ( selected_btn == 'Redo'){:
				/setvar key=genState Redo|
			:}|
			/elseif ( 'Don\'t' in selected_btn){:
				/setvar key=genState Redo|
				/setvar key=guide {{noop}}|
			:}|
			/elseif ( 'Keep Guidance' in selected_btn){:
				/setvar key=genState Redo|
			:}|
			/elseif ( 'Guidance' in selected_btn){:
			  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
				/setvar key=guide {{pipe}}|
				/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
			  /setvar key=guide {{pipe}}|
			  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
				/setvar key=guide " ({{pipe}})"|
				/setvar key=genState Redo|
			:}|
			/elseif ( selected_btn == 'Exclude items'){:
				/ife ( tskip != ''){:
					/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
				:}|
				/else {:
					/setvar key=t {{noop}}|
				:}|
				/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
				/setvar key=t {{pipe}}|
				/ife ( t == 'Reset'){:
					/setvar key=tskip {{noop}}|
				:}|
				/elseif ( t != ''){:
					/ife ( tskip != ''){:
						/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
					:}|
					/else {:
						/setvar key=tskip {{getvar::t}}|
					:}|
				:}|
				/setvar key=genState Redo|
			:}|
		:}|
		/addvar key=b1 "{{getvar::cat}}: {{getvar::selected_btn}}"|
	:}|

	/setvar key=p3st {{noop}}|
	/foreach {{getvar::b1}} {:
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}
		/ife ( in != 0){:
			/ife ( it != 'Horns: None'){:
				/addvar key=p3st "
{{getvar::it}}"|
			:}|
		:}|
		/else {:
			/addvar key=p3st "{{getvar::it}}"
		:}|
	:}|

	/setvar key=oL {{noop}}|
	/setvar key=oE {{noop}}|
	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generating breast Appearance|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button02-12|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 102|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 103|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 104|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|


		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this description to your liking?|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0| /setvar key=t {{pipe}}|
			/input default={{getvar::t}} rows=8 Edit the description to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/setvar key=b2 {{getvar::selected_btn}}|
	/setvar key=breast "{{getvar::p3st}}
Appearance: {{getvar::b2}}"|

	/setvar key=breasts {{getvar::b1}}|
	/addvar key=breasts "Appearance: {{getvar::b2}}"|



	/setvar key=input []|
	/setvar key=oL {{noop}}|
	/setvar key=oE {{noop}}|
	/setvar key=outputLenght []|
	/setvar key=outputExamples []|

	/addvar key=input "Tightness(This is how much force is needed to penetrate {{getvar::fname}}'s pussy. Give an example on what it can accommodate thickness wise(in {{getvar::measure}}))"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|

	/addvar key=input "Depth(This is the depth of {{getvar::fname}}'s pussy. Give an example on what it can accommodate length wise(in {{getvar::measure}}))"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|

	/addvar key=input "Clit(This is the size, visability and shape of {{getvar::fname}}'s clit. Give a example comparison. Exclude Clitorial Hood from the reply)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|

	/addvar key=input "Clitorial Hood(This is the visability and shape of {{getvar::fname}}'s clitorial hood. Do it cover the clit?)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|

	/addvar key=input "Public Hair(This is the state of {{getvar::fname}}'s public hair, it can be naturaly smooth(Due to age or something else), shaven, trimmed to a shape, or unshaved)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|

	/ife ( type == 'Human'){:
		/addvar key=input "Human Features(This is special human features of {{getvar::fname}}'s pussy. Exclude Tightness, Depth and Clit from the reply)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type == 'Canine'){:
		/addvar key=input "Canine Features(This is special Canine features of {{getvar::fname}}'s pussy(This could be things like Outward appearance etc..). Exclude Tightness, Depth and Clit from the reply)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type == 'Equine'){:
		/addvar key=input "Equine Features(This is special Equine features of {{getvar::fname}}'s pussy(This could be things like Outward appearance etc..). Exclude Tightness, Depth and Clit from the reply)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type == 'Feline'){:
		/addvar key=input "Feline Features(This is special Feline features of {{getvar::fname}}'s pussy. Exclude Tightness, Depth and Clit from the reply)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type == 'Reptilian'){:
		/addvar key=input "Reptilian Features(This is special Reptilian features of {{getvar::fname}}'s pussy. Exclude Tightness, Depth and Clit from the reply)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/else {:
		/addvar key=input "Feature(This is special {{getvar::cleanSpeciees}} features of {{getvar::fname}}'s pussy(This could be things like Sheath, Knot, Medial ring, Flare etc..). Exclude Tightness, Depth and Clit from the reply)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|

	/addvar key=input "Pussy Shape(This is the shape of {{getvar::fname}}'s {{getvar::cleanSpeciees}} pussy. It can have \"visible inner lips\", \"small, closed outer lips\", \"small, open outer lips\", \"long, dangling outer lips\", \"long, dangling inner lips\", \"prominent outer lips\", \"prominent inner lips\", \"curved outer lips\" or \"asymmetrical inner lips\")"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|

	/addvar key=input "Hymen(This is the state of {{getvar::fname}}'s hymen)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: {{getvar::fname}}'s hymen is intact.
Example2: {{getvar::fname}}'s hymen broke when she had sex with her boyfriend.
Example3: {{getvar::fname}}'s hymen naturally broke while doing sports."|


	/setvar key=p1 []|
	/setvar key=outputList []|
	/foreach {{getvar::input}} {:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
		/setvar key=tskip {{noop}}|
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/getvar key=outputLenght index={{getvar::in}}|
	  /setvar key=oL {{pipe}}|
	  /getvar key=outputExamples index={{getvar::in}}|
	  /setvar key=oE {{pipe}}|

		/while left=genState right=Redo rule=eq {:
			/re-replace find="/\(.*$/g" replace="" {{getvar::it}}|
			/setvar key=cat {{pipe}}|
			/echo Generating Pussy: {{getvar::cat}}|
			/setvar key=genState []|

			/setvar key=skip {{noop}}|
			/ife ( tskip != ''){:
				/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
			:}|

			/setvar key=pus {{noop}}|
			/foreach {{getvar::p1}} {:
				/setvar key=it {{var::item}}|
				/setvar key=in {{var::index}}|
				/ife ( in == 0){:
					/setvar key=pus "This is descriptions of {{getvar::fname}}'s pussy"
				:}|
					/addvar key=pus "
{{getvar::it}}"|
			:}|

			/setvar key=system {{noop}}|
			/setvar key=prompt {{noop}}|
			/setvar key=instruct {{noop}}|
			/setvar key=item {{getvar::it}}|

			//Button02-13|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 106|
			/setvar key=system {{pipe}}|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 107|
			/setvar key=prompt {{pipe}}|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 108|
			/setvar key=instruct {{pipe}}|

			/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

			/ife ( debug == 'Yes'){:
				/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
				/setvar key=system {{pipe}}|
				/ife ( system == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
				/setvar key=cprompt {{pipe}}|
				/ife ( cprompt == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
			:}|

			/genraw lock=on name={{char}}
			system="{{getvar::system}}"
{{getvar::cprompt}}|

			/addvar key=genState {{pipe}}|
			/addvar key=genState Edit|
			/ife ( guide == ''){:
				/addvar key=genState "Set Guidance"|
				/addvar key=genState Redo|
			:}|
			/else {:
				/addvar key=genState Change Guidance|
				/addvar key=genState Redo(Keep Guidance)|
				/addvar key=genState Redo(Don't keep Guidance)|
			:}|

			/addvar key=genState "Exclude items"|
			/ife ( quickRoll != 'Yes'){:
				/buttons labels={{getvar::genState}} Is this a good description of {{getvar::fname}}'s {{getvar::cat}}|

				/setvar key=selected_btn {{pipe}}|
			:}|
			/else {:
				/getvar key=genState index=0|
				/setvar key=selected_btn {{pipe}}|
			:}|

			/ife ( selected_btn == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		  /elseif ( selected_btn == 'Edit'){:
				/getvar key=genState index=0| /setvar key=t {{pipe}}|
				/input default={{getvar::t}} rows=8 Edit the description to your liking.|
				/setvar key=selected_btn {{pipe}}|
				/ife ( selected_btn == ''){:
					/setvar key=genState Redo|
				:}|
			:}|
			/elseif ( selected_btn == 'Done'){:
				:}|
			/elseif ( selected_btn == 'Redo'){:
				/setvar key=genState Redo|
			:}|
			/elseif ( 'Don\'t' in selected_btn){:
				/setvar key=genState Redo|
				/setvar key=guide {{noop}}|
			:}|
			/elseif ( 'Keep Guidance' in selected_btn){:
				/setvar key=genState Redo|
			:}|
			/elseif ( 'Guidance' in selected_btn){:
			  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
				/setvar key=guide {{pipe}}|
				/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
			  /setvar key=guide {{pipe}}|
			  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
				/setvar key=guide " ({{pipe}})"|
				/setvar key=genState Redo|
			:}|
			/elseif ( selected_btn == 'Exclude items'){:
				/ife ( tskip != ''){:
					/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
				:}|
				/else {:
					/setvar key=t {{noop}}|
				:}|
				/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
				/setvar key=t {{pipe}}|
				/ife ( t == 'Reset'){:
					/setvar key=tskip {{noop}}|
				:}|
				/elseif ( t != ''){:
					/ife ( tskip != ''){:
						/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
					:}|
					/else {:
						/setvar key=tskip {{getvar::t}}|
					:}|
				:}|
				/setvar key=genState Redo|
			:}|
		:}|
		/addvar key=p1 "{{getvar::cat}}: {{getvar::selected_btn}}"|
	:}|


	/setvar key=p4st {{noop}}|
	/foreach {{getvar::p1}} {:
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/ife ( in != 0){:
			/ife ( it != 'Horns: None'){:
				/addvar key=p4st "
{{getvar::it}}"
			:}|
		:}|
		/else {:
			/addvar key=p4st "{{getvar::it}}"
		:}|
	:}|


	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generating pussy Appearance|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button02-14|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 110|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 111|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 112|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|


		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this description to your liking?|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0| /setvar key=t {{pipe}}|
			/input default={{getvar::t}} rows=8 Edit the description to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/setvar key=p2 {{getvar::selected_btn}}|
	/setvar key=puss "{{getvar::p3st}}
Appearance: {{getvar::p2}}"|

	/setvar key=pussy {{getvar::p1}}|
	/addvar key=pussy "Appearance: {{getvar::p2}}"|

:}|
/elseif (gender == 'Male'){:
	/setvar key=input []|
	/setvar key=oL {{noop}}|
	/setvar key=oE {{noop}}|
	/setvar key=outputLenght []|
	/setvar key=outputExamples []|

	/addvar key=input "Length Flaccid(This is the length(in {{getvar::measure}}) of {{getvar::fname}}'s dick/penis when it is flaccid. Take {{getvar::fname}}'s age into account)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: The length of {{getvar::fname}}'s flaccid cock is 8cm.
	Example2: The length of {{getvar::fname}}'s flaccid cock is 40cm."|

	/addvar key=input "Girth Flaccid(This is the girth(in {{getvar::measure}}) of {{getvar::fname}}'s dick/penis when it is flaccid. Take {{getvar::fname}}'s age into account)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: The girth of {{getvar::fname}}'s flaccid cock is 5cm.
	Example2: The girth of {{getvar::fname}}'s flaccid cock is 20cm."|

	/addvar key=input "Length Erect(This is the length(in {{getvar::measure}}) of {{getvar::fname}}'s dick/penis when it is fully erect. Take {{getvar::fname}}'s age into account)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: The length of {{getvar::fname}}'s erect cock is 18cm.
	Example2: The length of {{getvar::fname}}'s erect cock is 88cm."|

	/addvar key=input "Girth Erect(This is the girth(in {{getvar::measure}}) of {{getvar::fname}}'s dick/penis when it is fully erect. Take {{getvar::fname}}'s age into account)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: The girth of {{getvar::fname}}'s erect cock is 8cm.
	Example2: The girth of {{getvar::fname}}'s erect cock is 33cm."|

	/addvar key=input "Scrotum(Describe how it looks and where it is placed(Is it internal or external?))"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|

	/ife ( type == 'Human'){:
		/addvar key=input "Feature(This is special human features of {{getvar::fname}}'s cock)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type  == 'Canine'){:
		/addvar key=input "Feature(This is special Canine features of {{getvar::fname}}'s cock(This could be things like Sheath, Knot etc..))"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type == 'Equine'){:
		/addvar key=input "Feature(This is special Equine features of {{getvar::fname}}'s cock(This could be things like Sheath, Medial ring, Flare etc..))"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type == 'Feline'){:
		/addvar key=input "Feature(This is special Feline features of {{getvar::fname}}'s cock(This could be things like Sheath etc..))"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type == 'Reptilian'){:
		/addvar key=input "Feature(This is special Reptilian features of {{getvar::fname}}'s cock(This could be things like Sheath, Knot, Medial ring, Flare etc..))"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/elseif ( type == 'Avian'){:
		/addvar key=input "Feature(This is special Avian features of {{getvar::fname}}'s cock)"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|
	/else {:
		/addvar key=input "Feature(This is special {{getvar::cleanSpeciees}} features of {{getvar::fname}}'s {{getvar::cleanSpeciees}} cock(This could be things like Sheath, Knot, Medial ring, Flare etc..))"|
		/addvar key=outputLenght "Reply with less then three sentences"|
		/addvar key=outputExamples {{noop}}|
	:}|

	/addvar key=input "Form(This could be if the cock "have a curve to it", "have veins on it" or "have been circumcised" etc..)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples "Example1: {{getvar::fname}}'s cock have a slight curve to the left. It also have pronounced veins on both sides."|

	/addvar key=input "Public Hair(This is the state of {{getvar::fname}}'s public hair, it can be naturaly smooth(Due to age or something else), shaven, trimmed to a shape, or unshaved. Take {{getvar::fname}}'s age and species into account)"|
	/addvar key=outputLenght "Reply with less then three sentences"|
	/addvar key=outputExamples {{noop}}|




	/setvar key=d1 []|
	/foreach  {{getvar::input}} {:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
		/setvar key=tskip {{noop}}|
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/getvar key=outputLenght index={{getvar::in}}|
	  /setvar key=oL {{pipe}}|
	  /getvar key=outputExamples index={{getvar::in}}|
	  /setvar key=oE {{pipe}}|

		/while left=genState right=Redo rule=eq {:
			/re-replace find="/\(.*$/g" replace="" {{getvar::it}}|
			/setvar key=cat {{pipe}}|
			/echo Generating Cock: {{getvar::cat}}|
			/setvar key=genState []|

			/setvar key=skip {{noop}}|
			/ife ( tskip != ''){:
				/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
			:}|

			/setvar key=system {{noop}}|
			/setvar key=prompt {{noop}}|
			/setvar key=instruct {{noop}}|
			/setvar key=item {{getvar::it}}|

			//Button02-15|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 114|
			/setvar key=system {{pipe}}|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 115|
			/setvar key=prompt {{pipe}}|
			/getentryfield file="Character Maker Combined NSFW GenRaw" 116|
			/setvar key=instruct {{pipe}}|

			/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

			/ife ( debug == 'Yes'){:
				/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
				/setvar key=system {{pipe}}|
				/ife ( system == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
				/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
				/setvar key=cprompt {{pipe}}|
				/ife ( cprompt == ''){:
					/echo Aborting | /:"Character Maker V4.Flushvar"|
				:}|
			:}|

			/genraw lock=on name={{char}}
			system="{{getvar::system}}"
{{getvar::cprompt}}|


			/addvar key=genState {{pipe}}|
			/addvar key=genState Edit|
			/ife ( guide == ''){:
				/addvar key=genState "Set Guidance"|
				/addvar key=genState Redo|
			:}|
			/else {:
				/addvar key=genState Change Guidance|
				/addvar key=genState Redo(Keep Guidance)|
				/addvar key=genState Redo(Don't keep Guidance)|
			:}|

			/addvar key=genState "Exclude items"|
			/ife ( quickRoll != 'Yes'){:
				/buttons labels={{getvar::genState}} Is this a good description of {{getvar::fname}}'s {{getvar::cat}}|

				/setvar key=selected_btn {{pipe}}|
			:}|
			/else {:
				/getvar key=genState index=0|
				/setvar key=selected_btn {{pipe}}|
			:}|

			/ife ( selected_btn == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		  /elseif ( selected_btn == 'Edit'){:
				/getvar key=genState index=0| /setvar key=t {{pipe}}|
				/input default={{getvar::t}} rows=8 Edit the description to your liking.|
				/setvar key=selected_btn {{pipe}}|
				/ife ( selected_btn == ''){:
					/setvar key=genState Redo|
				:}|
			:}|
			/elseif ( selected_btn == 'Done'){:
				:}|
			/elseif ( selected_btn == 'Redo'){:
				/setvar key=genState Redo|
			:}|
			/elseif ( 'Don\'t' in selected_btn){:
				/setvar key=genState Redo|
				/setvar key=guide {{noop}}|
			:}|
			/elseif ( 'Keep Guidance' in selected_btn){:
				/setvar key=genState Redo|
			:}|
			/elseif ( 'Guidance' in selected_btn){:
			  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
				/setvar key=guide {{pipe}}|
				/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
			  /setvar key=guide {{pipe}}|
			  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
				/setvar key=guide " ({{pipe}})"|
				/setvar key=genState Redo|
			:}|
			/elseif ( selected_btn == 'Exclude items'){:
				/ife ( tskip != ''){:
					/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
				:}|
				/else {:
					/setvar key=t {{noop}}|
				:}|
				/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
				/setvar key=t {{pipe}}|
				/ife ( t == 'Reset'){:
					/setvar key=tskip {{noop}}|
				:}|
				/elseif ( t != ''){:
					/ife ( tskip != ''){:
						/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
					:}|
					/else {:
						/setvar key=tskip {{getvar::t}}|
					:}|
				:}|
				/setvar key=genState Redo|
			:}|
		:}|
		/addvar key=d1 "{{getvar::cat}}: {{getvar::selected_btn}}"|
	:}|

	/setvar key=p5st {{noop}}|
	/foreach {{getvar::d1}} {:
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/ife ( in != 0){:
			/ife ( it != 'Horns: None'){:
				/addvar key=p5st "
{{getvar::it}}"
			:}|
		:}|
		/else {:
			/addvar key=p5st "{{getvar::it}}"
		:}|
	:}|


	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|

	/while left=genState right=Redo rule=eq {:
		/echo Generating dick Appearance|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|

		//Button02-16|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 118|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 119|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 120|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|


		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this description to your liking?|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0| /setvar key=t {{pipe}}|
			/input default={{getvar::t}} rows=8 Edit the description to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/setvar key=d2 {{getvar::selected_btn}}|
	/setvar key=dic "{{getvar::p5st}}
Appearance: {{getvar::p2}}"|

	/setvar key=dick {{getvar::d1}}|
	/addvar key=dick {{getvar::d2}}|
:}|



/setvar key=input []|
/setvar key=oL {{noop}}|
/setvar key=oE {{noop}}|
/setvar key=outputLenght []|
/setvar key=outputExamples []|

/addvar key=input "Tightness(This is the force needed to penetrate {{getvar::fname}}'s anus and the size(in {{getvar::measure}}) it can fit.)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples "Example1: {{getvar::fname}}'s anus can comfortably fit a horse dildo's girth.
Example2: {{getvar::fname}}'s anus struggles to fit a adult index finger."|

/addvar key=input "Depth(This is the depth(in {{getvar::measure}}) of {{getvar::fname}}'s {{getvar::cleanSpeciees}} anus. Give an example on what it can accommodate length wise)"|
/addvar key=outputLenght "Reply with less then three sentences"|
/addvar key=outputExamples "Example1: {{getvar::fname}}'s anus can fit a adult arm to the elbow."|

/setvar key=a1 []|
/foreach {{getvar::input}} {:
	/setvar key=genState Redo|
	/setvar key=guide {{noop}}|
	/setvar key=tskip {{noop}}|
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/getvar key=outputLenght index={{getvar::in}}|
  /setvar key=oL {{pipe}}|
  /getvar key=outputExamples index={{getvar::in}}|
  /setvar key=oE {{pipe}}|

	/while left=genState right=Redo rule=eq {:
		/re-replace find="/\(.*$/g" replace="" {{getvar::it}}|
		/setvar key=cat {{pipe}}|
		/echo Generating Anus: {{getvar::cat}}|
		/setvar key=genState []|

		/setvar key=skip {{noop}}|
		/ife ( tskip != ''){:
			/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
		:}|

		/setvar key=system {{noop}}|
		/setvar key=prompt {{noop}}|
		/setvar key=instruct {{noop}}|
		/setvar key=item {{getvar::it}}|

		//Button02-17|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 122|
		/setvar key=system {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 123|
		/setvar key=prompt {{pipe}}|
		/getentryfield file="Character Maker Combined NSFW GenRaw" 124|
		/setvar key=instruct {{pipe}}|

		/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

		/ife ( debug == 'Yes'){:
			/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
			/setvar key=system {{pipe}}|
			/ife ( system == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
			/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
			/setvar key=cprompt {{pipe}}|
			/ife ( cprompt == ''){:
				/echo Aborting | /:"Character Maker V4.Flushvar"|
			:}|
		:}|

		/genraw lock=on name={{char}}
		system="{{getvar::system}}"
{{getvar::cprompt}}|


		/addvar key=genState {{pipe}}|
		/addvar key=genState Edit|
		/ife ( guide == ''){:
			/addvar key=genState "Set Guidance"|
			/addvar key=genState Redo|
		:}|
		/else {:
			/addvar key=genState Change Guidance|
			/addvar key=genState Redo(Keep Guidance)|
			/addvar key=genState Redo(Don't keep Guidance)|
		:}|

		/addvar key=genState "Exclude items"|
		/ife ( quickRoll != 'Yes'){:
			/buttons labels={{getvar::genState}} Is this a good description of {{getvar::fname}}'s {{getvar::cat}}|

			/setvar key=selected_btn {{pipe}}|
		:}|
		/else {:
			/getvar key=genState index=0|
			/setvar key=selected_btn {{pipe}}|
		:}|

		/ife ( selected_btn == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	  /elseif ( selected_btn == 'Edit'){:
			/getvar key=genState index=0| /setvar key=t {{pipe}}|
			/input default={{getvar::t}} rows=8 Edit the description to your liking.|
			/setvar key=selected_btn {{pipe}}|
			/ife ( selected_btn == ''){:
				/setvar key=genState Redo|
			:}|
		:}|
		/elseif ( selected_btn == 'Done'){:
			:}|
		/elseif ( selected_btn == 'Redo'){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Don\'t' in selected_btn){:
			/setvar key=genState Redo|
			/setvar key=guide {{noop}}|
		:}|
		/elseif ( 'Keep Guidance' in selected_btn){:
			/setvar key=genState Redo|
		:}|
		/elseif ( 'Guidance' in selected_btn){:
		  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
			/setvar key=guide {{pipe}}|
			/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
		  /setvar key=guide {{pipe}}|
		  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
			/setvar key=guide " ({{pipe}})"|
			/setvar key=genState Redo|
		:}|
		/elseif ( selected_btn == 'Exclude items'){:
			/ife ( tskip != ''){:
				/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
			:}|
			/else {:
				/setvar key=t {{noop}}|
			:}|
			/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
			/setvar key=t {{pipe}}|
			/ife ( t == 'Reset'){:
				/setvar key=tskip {{noop}}|
			:}|
			/elseif ( t != ''){:
				/ife ( tskip != ''){:
					/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
				:}|
				/else {:
					/setvar key=tskip {{getvar::t}}|
				:}|
			:}|
			/setvar key=genState Redo|
		:}|
	:}|
	/addvar key=a1 "{{getvar::cat}}: {{getvar::selected_btn}}"|
:}|

/setvar key=p6st {{noop}}|
/foreach {{getvar::a1}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( in != 0){:
		/ife ( it != 'Horns: None'){:
		/addvar key=p6st "
{{getvar::it}}" :}|
	:}|
	/else {:
		/addvar key=p6st "{{getvar::it}}"
	:}|
:}|




/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generating anus Appearance|
	/setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button02-18|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 126|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 127|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 128|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


	/addvar key=genState {{pipe}}|
	/addvar key=genState Edit|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|
	/ife ( quickRoll != 'Yes'){:
		/buttons labels={{getvar::genState}} Is this description to your liking?|

		/setvar key=selected_btn {{pipe}}|
	:}|
	/else {:
		/getvar key=genState index=0|
		/setvar key=selected_btn {{pipe}}|
	:}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0| /setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=8 Edit the description to your liking.|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
	  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
		/setvar key=guide {{pipe}}|
		/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
	  /setvar key=guide {{pipe}}|
	  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
:}|
/setvar key=a2 {{getvar::selected_btn}}|
/setvar key=ass "{{getvar::p6st}}
Appearance: {{getvar::a2}}"|

/setvar key=ass_hole {{getvar::a1}}|
/addvar key=ass_hole "Appearance: {{getvar::a2}}"|


/setvar key=oe []|
/ife ( gender == 'Female'){:
	/addvar key=oe "{{getvar::fname}} is sensitive on the clit"|
	/addvar key=oe "{{getvar::fname}} is sensitive on the nipples"|
:}|
/else {:
	/addvar key=oe "{{getvar::fname}} is sensitive on the head of the penis"|
	/addvar key=oe "{{getvar::fname}} is sensitive on the shaft of the penis"|
	/addvar key=oe "{{getvar::fname}} is sensitive on the scrotum"|
	/addvar key=oe "{{getvar::fname}} is sensitive on the testicles"|
	/addvar key=oe "{{getvar::fname}}'s glans are sensitive"|

:}|
/ife ( type != 'Human'){:
	/addvar key=oe "{{getvar::fname}} is sensitive at the base of {{getvar::genpron}} tail."|
	/addvar key=oe "{{getvar::fname}} is sensitive behind {{getvar::genpron}} ears."|
:}|

/foreach {{getvar::oe}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/incvar in|
	/ife ( in == 0){:
		/setvar key=oE "Example{{getvar::in}}: {{var::item}}"|
	:}|
	/else {:
		/addvar key=oE "
Example{{getvar::in}}: {{var::item}}"|
	:}|

:}|

/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generating External Erogenous Zones|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button02-19|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 130|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 131|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 132|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


  /addvar key=genState {{pipe}}|
  /addvar key=genState Edit|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|
	/ife ( quickRoll != 'Yes'){:
	  /buttons labels={{getvar::genState}} Is this what you want the external Erogenous zones for {{getvar::fname}}?|

		/setvar key=selected_btn {{pipe}}|
	:}|
	/else {:
		/getvar key=genState index=0|
		/setvar key=selected_btn {{pipe}}|
	:}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0| /setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=8 Edit the description to your liking.|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
	  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
		/setvar key=guide {{pipe}}|
		/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
	  /setvar key=guide {{pipe}}|
	  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
:}|
/setvar key=ext_ergo_zones {{getvar::selected_btn}}|


/setvar key=oe []|
/ife ( gender == 'Female'){:
	/addvar key=oe "{{getvar::fname}}'s g-spot is sensitive "|
	/addvar key=oe "The inside of {{getvar::fname}}'s vula is sensitive"|
	/addvar key=oe "The inside of {{getvar::fname}}'s bladder is sensitive"|
	/addvar key=oe "{{getvar::fname}}'s a-spot is sensitive"|
	/addvar key=oe "The entrance of {{getvar::fname}}'s womb is sensitive"|
	/addvar key=oe "The inside of {{getvar::fname}}'s womb is sensitive"|
:}|
/else {:


:}|

/addvar key=oe "{{getvar::fname}}'s prostate is sensitive"|
/addvar key=oe "The entrance to {{getvar::fname}}'s colon is sensitive"|

/ife ( type != 'Human'){:

	/ife ( type == 'Canine'){:
		/ife ( gender == 'Female'){:

		:}|
		/else {:
			/addvar key=oe "{{getvar::fname}}'s knot is hypersensitive when enlarged"|
		:}|
	:}|
	/elseif ( type == 'Feline'){:
		/ife ( gender == 'Female'){:

		:}|
		/else {:

		:}|
	:}|
	/elseif ( type == 'Equine'){:
		/ife ( gender == 'Female'){:

		:}|
		/else {:

		:}|
	:}
	/elseif ( type == 'Reptilian' ){:
		/ife ( gender == 'Female'){:

		:}|
		/else {:

		:}|
	:}|
	/elseif ( type == 'Aviary' ){:
		/ife ( gender == 'Female'){:
			/addvar key=oe "{{getvar::fname}}'s cloaca is sensitive"
		:}|
		/else {:

		:}|
	:}|



:}|

/foreach {{getvar::oe}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/incvar in|
	/ife ( in == 0){:
		/setvar key=oE "Example{{getvar::in}}: {{var::item}}"|
	:}|
	/else {:
		/addvar key=oE "
Example{{getvar::in}}: {{var::item}}"|
	:}|

:}|

/setvar key=genState Redo|
/setvar key=guide {{noop}}|
/setvar key=tskip {{noop}}|

/while left=genState right=Redo rule=eq {:
	/echo Generating Internal Erogenous Zones|
  /setvar key=genState []|

	/setvar key=skip {{noop}}|
	/ife ( tskip != ''){:
		/setvar key=skip "In your reply, exclude things that include: {{getvar::tskip}}. "
	:}|

	/setvar key=system {{noop}}|
	/setvar key=prompt {{noop}}|
	/setvar key=instruct {{noop}}|

	//Button02-20|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 134|
	/setvar key=system {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 135|
	/setvar key=prompt {{pipe}}|
	/getentryfield file="Character Maker Combined NSFW GenRaw" 136|
	/setvar key=instruct {{pipe}}|

	/setvar key=cprompt "{{getvar::prompt}}
{{getvar::instruct}}" |

	/ife ( debug == 'Yes'){:
		/input default={{getvar::system}} rows=8 This is the prompt that will be passed to system in genraw.|
		/setvar key=system {{pipe}}|
		/ife ( system == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
		/input default={{getvar::cprompt}} rows=8 This is the prompt that will be passed to the generation in genraw.|
		/setvar key=cprompt {{pipe}}|
		/ife ( cprompt == ''){:
			/echo Aborting | /:"Character Maker V4.Flushvar"|
		:}|
	:}|

	/genraw lock=on name={{char}}
	system="{{getvar::system}}"
{{getvar::cprompt}}|


  /addvar key=genState {{pipe}}|
  /addvar key=genState Edit|
	/ife ( guide == ''){:
		/addvar key=genState "Set Guidance"|
		/addvar key=genState Redo|
	:}|
	/else {:
		/addvar key=genState Change Guidance|
		/addvar key=genState Redo(Keep Guidance)|
		/addvar key=genState Redo(Don't keep Guidance)|
	:}|

	/addvar key=genState "Exclude items"|
	/ife ( quickRoll != 'Yes'){:
	  /buttons labels={{getvar::genState}} Is this the description you want for {{getvar::fname}}' internal Erogenous zones?|

		/setvar key=selected_btn {{pipe}}|
	:}|
	/else {:
		/getvar key=genState index=0|
		/setvar key=selected_btn {{pipe}}|
	:}|

	/ife ( selected_btn == ''){:
		/echo Aborting | /:"Character Maker V4.Flushvar"|
	:}|
  /elseif ( selected_btn == 'Edit'){:
		/getvar key=genState index=0| /setvar key=t {{pipe}}|
		/input default={{getvar::t}} rows=8 Edit the description to your liking.|
		/setvar key=selected_btn {{pipe}}|
		/ife ( selected_btn == ''){:
			/setvar key=genState Redo|
		:}|
	:}|
	/elseif ( selected_btn == 'Done'){:
		:}|
	/elseif ( selected_btn == 'Redo'){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Don\'t' in selected_btn){:
		/setvar key=genState Redo|
		/setvar key=guide {{noop}}|
	:}|
	/elseif ( 'Keep Guidance' in selected_btn){:
		/setvar key=genState Redo|
	:}|
	/elseif ( 'Guidance' in selected_btn){:
	  /re-replace replace="" find="/^[^:]*:\s/g" {{getvar::guide}}|
		/setvar key=guide {{pipe}}|
		/re-replace replace="" find="/\)[^\)]*$/g" {{getvar::guide}}|
	  /setvar key=guide {{pipe}}|
	  /input default="{{getvar::guidePrompt}}{{getvar::guide}}" Add what you want the generation to focus on.|
		/setvar key=guide " ({{pipe}})"|
		/setvar key=genState Redo|
	:}|
	/elseif ( selected_btn == 'Exclude items'){:
		/ife ( tskip != ''){:
			/setvar key=t "<div>This is what you are already exluding</div>{{getvar::tskip}}"|
		:}|
		/else {:
			/setvar key=t {{noop}}|
		:}|
		/input rows=8 <div>Add a comma-separated list of things you dont want to generate.</div></div>To reset this type 'Reset'</div>{{getvar::t}}|
		/setvar key=t {{pipe}}|
		/ife ( t == 'Reset'){:
			/setvar key=tskip {{noop}}|
		:}|
		/elseif ( t != ''){:
			/ife ( tskip != ''){:
				/setvar key=tskip "{{getvar::tskip}}, {{getvar::t}}"|
			:}|
			/else {:
				/setvar key=tskip {{getvar::t}}|
			:}|
		:}|
		/setvar key=genState Redo|
	:}|
:}|
/setvar key=int_ergo_zones {{getvar::selected_btn}}|
:}|
/ife ( form != ''){:
	/setvar key=form " ({{getvar::form}})"
:}|

/setvar key=output "<h2 align='center'>{{getvar::catgen}}{{getvar::form}}</h2>

Height: {{getvar::height}}"|

/ife ( length != 'None'){:
	/addvar key=output "
{{getvar::fname}}'s Length: {{getvar::length}}"|
:}|

/addvar key=output "
{{getvar::fname}}'s Weight: {{getvar::weight}}

Appearance Description"|

/ife ( cover != ''){:
	/addvar key=output "

{{getvar::fname}}'s Covering: {{getvar::cover}}"|
:}|

/ife ( skin_color != ''){:
	/addvar key=output "

{{getvar::fname}}'s Skin Color: {{getvar::skin_color}}"|
:}|

/addvar key=output "

Face
"|

/foreach {{getvar::face}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( ': None' not in it){:
		/ife ( in != 0){:
			/addvar key=output "
- {{getvar::fname}}'s  {{getvar::it}}"|
		:}|
		/else {:
			/addvar key=output "- {{getvar::fname}}'s  {{getvar::it}}"
		:}|
	:}|
:}|

/addvar key=output "


Upper Body
"|

/foreach {{getvar::upper}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( ': None' not in it){:
		/ife ( in != 0){:
			/addvar key=output "
- {{getvar::fname}}'s  {{getvar::it}}"|
		:}|
		/else {:
			/addvar key=output "- {{getvar::fname}}'s  {{getvar::it}}"
		:}|
	:}|
:}|

/addvar key=output "


Lower Body
"|

/foreach {{getvar::lower}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( ': None' not in it){:
		/ife ( in != 0){:
			/addvar key=output "
- {{getvar::fname}}'s  {{getvar::it}}"|
		:}|
		/else {:
			/addvar key=output "- {{getvar::fname}}'s  {{getvar::it}}"
		:}|
	:}|
:}|

/ife ( NSFW == 'Yes'){:
/ife ( gender == 'Female'){:
	/addvar key=output "


Breasts
"|

	/foreach {{getvar::breasts}} {:
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/ife ( ': None' not in it){:
			/ife ( in != 0){:
				/addvar key=output "
- {{getvar::fname}}'s  {{getvar::it}}"|
			:}|
			/else {:
				/addvar key=output "- {{getvar::it}}"
			:}|
		:}|
	:}|

	/addvar key=output "


Pussy
"|

	/foreach  {{getvar::pussy}} {:
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/ife ( ': None' not in it){:
			/ife ( in != 0){:
				/addvar key=output "
- {{getvar::fname}}'s  {{getvar::it}}"|
			:}|
			/else {:
				/addvar key=output "- {{getvar::fname}}'s  {{getvar::it}}"
			:}|
		:}|
	:}|
:}|
/elseif ( gender == 'Male'){:
	/addvar key=output "


Cock
"|

	/foreach  {{getvar::dick}} {:
		/setvar key=it {{var::item}}|
		/setvar key=in {{var::index}}|
		/ife ( ': None' not in it){:
			/ife ( in != 0){:
				/addvar key=output "
- {{getvar::fname}}'s  {{getvar::it}}"|
			:}|
			/else {:
				/addvar key=output "- {{getvar::fname}}'s  {{getvar::it}}"
			:}|
		:}|
	:}|
:}|


/addvar key=output "


Anus
"|

/foreach {{getvar::ass_hole}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( in != 0){:
		/addvar key=output "
- {{getvar::fname}}'s  {{getvar::it}}"|
	:}|
	/else {:
		/addvar key=output "- {{getvar::fname}}'s  {{getvar::it}}"
	:}|
:}|

/addvar key=output "


{{getvar::fname}}'s External Erogenous Zones
{{getvar::ext_ergo_zones}}


{{getvar::fname}}'s Internal Erogenous Zones
{{getvar::int_ergo_zones}}"|
:}|
/message-edit message={{lastMessageId}} {{getvar::output}}|

/setvar key=extra "Head: {{getvar::extra1}}
Upper-Body: {{getvar::extra2}}
Lower-Body: {{getvar::extra3}}
Other: {{getvar::extra4}}"|

/db-list source=chat field=name |/setvar key=a {{pipe}}|
/setvar key=b {{noop}}|

/foreach {{getvar::a}} {:
	/setvar key=it {{var::item}}|
	/setvar key=in {{var::index}}|
	/ife ( it == 'extra'){:
		/setvar key=b yes
	:}|
:}|

/ife ( b == 'yes'){:
	/db-update source=chat name=extra {{getvar::extra}}|
	/db-disable source=chat name=extra|
:}|
/else {:
	/db-add source=chat name=extra {{getvar::extra}}|
	/db-disable source=chat name=extra|
:}|
