{"version":2,"name":"CMC Generate","disableSend":false,"placeBeforeInput":false,"injectInput":false,"color":"rgba(0, 0, 0, 0)","onlyBorderColor":false,"qrList":[{"id":2,"icon":"","showLabel":false,"label":"Step1 Generate Core Identity","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating Core Identity\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step1|\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n\n//Character Overview|\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n\n\n//Time Period|\n/var key=do No|\n/var key=variableName \"timePeriod\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Time Period\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t/var key=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//--------|\n/var key=do No|\n/var key=variableName \"settingType\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Setting Type\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{getvar::genContent}}|\n\t\t\t/var key=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=it {{var::wi_book_key}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n\t\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-------|\n\n//Race/Species|\n/ife ( (characterArchetype != 'Human') and (characterArchetype != 'Android')) {:\n\t/var key=do No|\n\t/var key=variableName \"species\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Species\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext No|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/ife (characterArchetype == 'Mythfolk') {:\n\t\t\t/setvar key=speciesExamples Elf, Dwarf, Vampire, Succubus, Angel, Demon, Halfling, Fairy\n\t\t:}|\n\t\t/elseif ((characterArchetype != 'Pokémon') and (characterArchetype != 'Digimon')) {:\n\t\t\t\n\t\t\t/let key=find \"Reproductive {{getvar::animalBase}}: List\"\n\t\t\t/findentry field=comment file=\"CMC Variables\" {{var::find}}|\n\t\t\t/getentryfield file=\"CMC Information\" {{pipe}}| \n\t\t\t/let key=temp {{pipe}}|\n\t\t\t/split find=\"/\\n/\" {{var::temp}}|\n\t\t\t/var key=temp {{pipe}}|\n\t\t\t/setvar key=speciesExamples []|\n\t\t\t/ife (parsedAnimalType != animalBase) {:\n\t\t\t\t/foreach {{var::temp}} {:\n\t\t\t\t\t/re-replace find=\"/(\\s*\\([^)]*\\))/g\" replace=\"\" {{var::item}}|\n\t\t\t\t\t/let key=tempItem {{pipe}}|\n\t\t\t\t\t/ife (('general' not in tempItem)) {:\n\t\t\t\t\t\t/addvar key=speciesExamples {{var::tempItem}}|\n\t\t\t\t\t:}|\n\t\t\t\t:}|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/foreach {{var::temp}} {:\n\t\t\t\t\t/re-replace find=\"/^([^\\(]+)/g\" replace=\"\" {{var::item}}|\n\t\t\t\t\t/addvar key=speciesExamples {{pipe}}|\n\t\t\t\t:}|\n\t\t\t:}|\n\t\t\t/join {{getvar::speciesExamples}}|\n\t\t\t/setvar key=speciesExamples {{pipe}}|\n\t\t:}|\n\t\t/elseif (characterArchetype == 'Pokémon') {:\n\t\t\t/setvar key=speciesExamples \"Pikachu, Charizard, Bulbasaur, Squirtle, Jigglypuff, Mewtwo, Eevee, Gengar, Lucario, Snorlax\"|\n\t\t:}|\n\t\t/elseif (characterArchetype == 'Digimon') {:\n\t\t\t/setvar key=speciesExamples \"Agumon, Gabumon, Patamon, Gatomon, Greymon, Garurumon, Angemon, Tentomon, Biyomon, Omnimon\"|\n\t\t:}|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=species Human|\n\t/addvar key=dataBaseNames species|\n:}|\n//-----------|\n\n/ife (characterArchetype == 'Mythfolk') {:\n\t/setvar key=animalBase {{getvar::species}}|\n\t/addvar key=dataBaseNames animalBase|\n\t/ife ( ((gender == 'Female') or (futanari == 'Yes')) and (privatesFemale != 'None') ) {:\n\t\t/setvar key=privatesFemale {{getvar::species}}|\n\t\t/addvar key=dataBaseNames privatesFemale|\n\t:}|\n\t/ife ( ((gender == 'Male') or (futanari == 'Yes')) and (privatesFemale != 'None') ) {:\n\t\t/setvar key=privatesMale {{getvar::species}}|\n\t\t/addvar key=dataBaseNames privatesMale|\n\t:}|\n:}|\n\n\n\n\n\n/ife ( (characterArchetype != 'Anthropomorphic') and (characterArchetype != 'Beastkin') and (characterArchetype != 'Animalistic') and (characterArchetype != 'Pokémon') and (characterArchetype != 'Digimon')) {:\n\t//Nationality|\n\t/var key=do No|\n\t/var key=variableName \"nationality\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Nationalities\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//-----------|\n\n\n\n\t//Ethnicity|\n\t/var key=do No|\n\t/var key=variableName \"ethnicity\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Ethnicities\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//-----------|\n\t\n\t/ife ((( nationality != '') and ( nationality != 'None')) and (( ethnicity != '') and ( ethnicity != 'None'))) {:\n\t\t/let key=find Origin1: Task|\n\t\t/findentry field=comment file=\"CMC Generation Prompts\" \"{{var::find}}\"|\n\t\t/getentryfield field=content file=\"CMC Generation Prompts\" {{pipe}}|\n\t\t/let key=task|\n\t\t/var key=find Origin1: Instruction|\n\t\t/findentry field=comment file=\"CMC Generation Prompts\" \"{{var::find}}\"|\n\t\t/getentryfield field=content file=\"CMC Generation Prompts\" {{pipe}}|\n\t\t/let key=instruct|\n\t\t/genraw \"{{var::task}}{{newline}}{{newline}}{{var::instruct}}\"|\n\t\t/setvar key=parsedOrigin {{pipe}}|\n\t:}|\n\t/ife ((( nationality != '') and ( nationality != 'None')) and (( ethnicity == '') or ( ethnicity == 'None'))) {:\n\t\t/let key=find Origin2: Task|\n\t\t/findentry field=comment file=\"CMC Generation Prompts\" \"{{var::find}}\"|\n\t\t/getentryfield field=content file=\"CMC Generation Prompts\" {{pipe}}|\n\t\t/let key=task|\n\t\t/var key=find Origin2: Instruction|\n\t\t/findentry field=comment file=\"CMC Generation Prompts\" \"{{var::find}}\"|\n\t\t/getentryfield field=content file=\"CMC Generation Prompts\" {{pipe}}|\n\t\t/let key=instruct|\n\t\t/genraw \"{{var::task}}{{newline}}{{newline}}{{var::instruct}}\"|\n\t\t/setvar key=parsedOrigin {{pipe}}|\n\t:}|\n\t/ife ((( ethnicity != '') and ( ethnicity != 'None')) and (( nationality == '') or ( nationality == 'None'))) {:\n\t\t/let key=find Origin3: Task|\n\t\t/findentry field=comment file=\"CMC Generation Prompts\" \"{{var::find}}\"|\n\t\t/getentryfield field=content file=\"CMC Generation Prompts\" {{pipe}}|\n\t\t/let key=task|\n\t\t/var key=find Origin3: Instruction|\n\t\t/findentry field=comment file=\"CMC Generation Prompts\" \"{{var::find}}\"|\n\t\t/getentryfield field=content file=\"CMC Generation Prompts\" {{pipe}}|\n\t\t/let key=instruct|\n\t\t/genraw \"{{var::task}}{{newline}}{{newline}}{{var::instruct}}\"|\n\t\t/setvar key=parsedOrigin {{pipe}}|\n\t:}||\n\t/addvar key=dataBaseNames parsedOrigin|\n\n:}|\n/elseif ( skip != 'Skip') {:\n\t/setvar key=nationality None|\n\t/setvar key=ethnicity None|\n\t/setvar key=parsedOrigin None|\n\t/addvar key=dataBaseNames nationality|\n\t/addvar key=dataBaseNames ethnicity|\n\t/addvar key=dataBaseNames parsedOrigin|\n:}|\n/else {:\n\t/addvar key=dataBaseNames nationality|\n\t/addvar key=dataBaseNames ethnicity|\n\t/addvar key=dataBaseNames parsedOrigin|\n:}|\n\n//Life stage|\n/var key=do No|\n/var key=variableName \"lifeStage\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/ife ( characterArchetype != 'Animalistic') {:\n\t\t/setvar key=genSettings index=wi_book_key \"Life Stage Humanoid\"|\n\t:}|\n\t/else {:\n\t\t/setvar key=genSettings index=wi_book_key \"Life Stage Animalistic\"|\n\t:}|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t/setvar key=genSettings index=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-------|\n\n\n\n//Age|\n/var key=do No|\n/var key=variableName \"age\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Age Gen\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/ife ( characterArchetype != 'Animalistic') {:\n\t\t/setvar key=genSettings index=contextKey [\"Life Stage Humanoid\"]|\n\t:}|\n\t/else {:\n\t\t/setvar key=genSettings index=contextKey [\"Life Stage Animalistic\"]|\n\t:}|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/ife (output != '') {:\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n/ife ((humanEquivalentAge == age) and (age != '')) {:\n\t/setvar key=parcedAge {{getvar::age}} years-old|\n:}|\n/elseif ((humanEquivalentAge != '') and (humanEquivalentAge != 'None') and (humanEquivalentAge != age)) {:\n\t/setvar key=parcedAge {{getvar::age}} years-old — roughly {{getvar::humanEquivalentAge}} years-old in human years.|\n:}|\n/else (age != '') {:\n\t/setvar key=parcedAge {{getvar::age}} years-old|\n:}|\n\n//Race Age|\n/ife ( characterArchetype != 'Human') {:\n\t/var key=do No|\n\t/var key=variableName \"humanEquivalentAge\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Age Species\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/elseif ( skip != 'Skip') {:\n\t/setvar key=humanEquivalentAge {{getvar::age}}|\n\t/addvar key=dataBaseNames humanEquivalentAge|\n:}|\n/else {:\n\t/addvar key=dataBaseNames humanEquivalentAge|\n:}|\n//-----------|\n\n//Parse character Age|\n/setvar key=parcedAge {{noop}}|\n/ife ((humanEquivalentAge == age) and (age != '')) {:\n\t/setvar key=parcedAge {{getvar::age}} years-old|\n:}|\n/elseif ((humanEquivalentAge != '') and (humanEquivalentAge != 'None') and (humanEquivalentAge != age)) {:\n\t/setvar key=parcedAge {{getvar::age}} years-old — roughly {{getvar::humanEquivalentAge}} years-old in human years.|\n:}|\n/else (age != '') {:\n\t/setvar key=parcedAge {{getvar::age}} years-old|\n:}|\n//-----------|\n\n/ife ( real != 'Yes') {:\n\t//First Name|\n\t/var key=do No|\n\t/var key=variableName \"firstName\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"First Name\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/ife (( nationality != 'None') and ( ethnicity != 'None')) {:\n\t\t\t4. Use {{getvar::nationality}} and/or {{getvar::ethnicity}} to influence cultural tone, spelling, or structure of the names when applicable — but do not include country names or descriptors in the output.\n\n\t\t:}|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//-----------|\n\t\n\t\n\t\n\t//Last Name|\n\t/var key=do No|\n\t/var key=variableName \"lastName\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Last Name\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//-----------|\n:}|\n/ife ( lastName == 'None') {:\n\t/setvar key=lastName {{noop}}|\n:}|\n\n//Nickname|\n/var key=do No|\n/var key=variableName \"alias\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Nickname\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n/ife ( nationality == '' ) {:\n\t/setvar key=nationality None|\n:}|\n/ife ( ethnicity == '' ) {:\n\t/setvar key=ethnicity None|\n:}|\n/ife ( lastName == '' ) {:\n\t/setvar key=lastName None|\n:}|\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating World & Setting Information\" {{pipe}}|\n\n/setvar key=filename/setvar key=filename {{date}}, {{isotime}}|\n/re-replace find=\"/:/g\" replace=\"h\" {{pipe}}|\n/setvar key=filename {{pipe}}|\n/addvar key=filename \"m {{getvar::firstName}} {{getvar::lastName}}\"|\n/sendas name={{char}} del|\n/renamechat {{getvar::filename}}|\n/del {{lastMessageId}}|\n/flushvar filename|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":4,"icon":"","showLabel":false,"label":"Step2 Generate World-Setting Information","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating World & Setting Information\" {{pipe}}|\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step2|\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n\n//Seasons|\n/var key=do No|\n/var key=variableName \"seasons\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Seasons\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput No|\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"|\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{getvar::genContent}} |\n\t\t\t/var key=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//World Type|\n/var key=do No|\n/var key=variableName \"worldType\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"World Type\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=genSettings index=contextKey {{noop}}|\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/ife (output != '') {:\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//|\n/var key=do No|\n/var key=variableName \"worldTone\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"World Tone\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t/setvar key=genSettings index=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n//-----------|\n\n//WorldDetails|\n/var key=do No|\n/var key=variableName \"worldDetails\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"World Details\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=genSettings index=contextKey {{noop}}|\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/ife (output != '') {:\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//--User--'s Role|\n/var key=do No|\n/var key=variableName \"userRole\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"User Role\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/ife (user == 'No') {:\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"--User-- is a Narrator\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t:}|\n\t/setvar key=extra []|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/buttons labels=[\"Male\", \"Female\", \"Gender Neutral\", \"Anything\"] What gender should the generation assume is?|\n\t/setvar key=guidance {{pipe}}|\n\t/ife ( guidance == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/elseif (( guidance == 'Male') or ( guidance == 'Female')) {:\n\t\t/setvar key=guidance \"The response should be guided toward: --User-- is a {{getvar::guidance}}\"|\n\t:}|\n\t/elseif ( guidance == 'Gender Neutral') {:\n\t\t/setvar key=guidance \"The response should be guided toward: --User-- is gender neutral and should be described using neutral language and tone, avoiding gendered assumptions.\"\n\t:}|\n\t/elseif ( guidance == 'Anything') {:\n\t\t/flushvar guidance|\n\t:}|\n\t\n\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//Residence|\n/var key=do No|\n/var key=variableName \"residence\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Residence\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/ife (seasons != 'None') {:\n\t\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}} — Season: {{getvar::seasons}}\"|\n\t:}|\n\t/else {:\n\t\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}}\"|\n\t:}|\n\t/addvar key=extra \"- World Type: {{getvar::worldType}}\"|\n\t/addvar key=extra \"- World Details: {{getvar::worldDetails}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- --User--'s Role: {{getvar::userRole}}\"|\n\t\t/setvar key=logicBasedInstruction \"7. Only include --User-- in the description if their role implies shared or nearby living space — such as a family member they still live with, a roommate, or a close neighbor.{{newline}}8. If --User-- is not part of the same household or residential area, do not reference them at all in this section.\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar logicBasedInstruction|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//Occupation|\n/var key=do No|\n/var key=variableName \"occupationBase\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Occupation Base\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}} —  World Type: {{getvar::worldType}}\"|\n\t/addvar key=extra \"- World Details: {{getvar::worldDetails}}\"|\n\t/addvar key=extra \"- Residence: {{getvar::residence}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n\n/var key=do No|\n/var key=variableName \"occupationDuties\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Occupation Duties\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}} —  World Type: {{getvar::worldType}}\"|\n\t/addvar key=extra \"- World Details: {{getvar::worldDetails}}\"|\n\t/addvar key=extra \"- Residence: {{getvar::residence}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n\n/var key=do No|\n/var key=variableName \"occupationSkills\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Occupation Skills\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Occupation: {{getvar::occupationBase}}\"|\n\t/addvar key=extra \"- Duties: {{getvar::occupationDuties}}\"|\n\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}} —  World Type: {{getvar::worldType}}\"|\n\t/addvar key=extra \"- World Details: {{getvar::worldDetails}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n//-----------|\n\n/findentry field=comment file=\"CMC Templates\" \"Occupation Template\"|\n/let key=wi_uid {{pipe}}|\n/getentryfield field=content file=\"CMC Templates\" {{var::wi_uid}}|\n/let key=template {{pipe}}|\n/ife (occupationSkills != 'None') {:\n\t/re-replace find=\"/--OccupationSkills--/g\" replace=\"{{newline}}  - Skills: {{getvar::occupationSkills}}\" {{var::template}}|\n\t/setvar key=parsedOccupation {{pipe}}|\n:}|\n/else {:\n\t/re-replace find=\"/--OccupationSkills--/g\" replace=\"\" {{var::template}}|\n\t/setvar key=parsedOccupation {{pipe}}|\n:}|\n /addvar key=dataBaseNames parsedOccupation|\n\n//Lore|\n/buttons labels=[\"Yes\", \"No\"] Do you want to have Lore for the world?|\n/setvar key=selected_btn {{pipe}}|\n/ife ( selected_btn == 'Yes') {:\n\t/flushvar selected_btn|\n\t/var key=do No|\n\t/var key=variableName \"lore\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Lore\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/ife (seasons != '') {:\n\t\t\t/addvar key=extra \"- Time/Period: {{getvar::timePeriod}} — {{getvar::seasons}}\"|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=extra \"- Time/Period: {{getvar::timePeriod}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- World Type: {{getvar::worldType}}\"|\n\t\t/addvar key=extra \"- World Details: {{getvar::worldDetails}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/flushvar extra|\n\t\t/setvar key=genSettings index=contextKey {{noop}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=combineLorebookEntries|\n\t\t/let key=combineLorebookEntries {{pipe}}|\n\t\t\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=lore None|\n\t/addvar key=dataBaseNames lore|\n\t/flushvar selected_btn|\n:}|\n//-----------|\n\n\n//Backstory|\n/var key=do No|\n/var key=variableName \"backstory\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Backstory\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/ife (seasons != 'None') {:\n\t\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}} — Season: {{getvar::seasons}}\"|\n\t:}|\n\t/else {:\n\t\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}}\"|\n\t:}|\n\t/addvar key=extra \"- World Type: {{getvar::worldType}}\"|\n\t/addvar key=extra \"- World Details: {{getvar::worldDetails}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- --User--'s Role: {{getvar::userRole}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//Character Overview|\n/var key=do No|\n/var key=variableName \"characterOverview\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/buttons labels=[\"User Input\", \"No Input\"] Do you want to have to it generate a Character Overview by itself (You can still give it some guidance) or do you want to give it something to work from?|\n\t/let key=choice {{pipe}}|\n\t/ife (choice == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/ife (choice == 'User Input') {:\n\t\t/input default=\"Example: She's a quiet but observant teen who often sketches in the margins of her notebooks. She's not confrontational, but notices everything — and tends to show up when people least expect it.\"\n<div>What is this character like in daily life?</div><div>How would others describe them?</div>|\n\t\t/setvar key=characterOverviewIde {{pipe}}|\n\t\t/setvar key=genSettings index=wi_book_key \"Character Overview User\"|\n\t:}|\n\t/else {:\n\t\t/setvar key=genSettings index=wi_book_key \"Character Overview Create\"|\n\t:}|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Occupation: {{getvar::occupation}}\"|\n\t/addvar key=extra \"- Residence: {{getvar::residence}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 7|\n\t\n\t/ife (variable == 'conent') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Rule\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/let key=tempOutputList []|\n\t\t/foreach {{getvar::CHANGE_REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/len {{var::tempOutputList}}|\n\t\t\t/var key=tempOutputList index={{pipe}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/foreach {{tempOutputList}} {:\n\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//Scenario Overview|\n/var key=do Yes|\n/var key=variableName \"scenarioOverview\"|\n/ife ( {{var::variableName}} != '') {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to redo {{var::variableName}}|\n\t/var key=do {{pipe}}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t\n\t/setvar key=genSettings {}|\n\t/buttons labels=[\"User Input\", \"No Input\"] Do you want to have to it generate a Scenario Overview by itself (You can still give it some guidence) or do you want to give it something to work from?|\n\t/let key=choice {{pipe}}|\n\t/ife (choice == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/ife (choice == 'User Input') {:\n\t\t/input default=\"Example: user is a neighbor of {{getvar::firstName}} and is often hired by {{getvar::firstName}}'s parents to babysit {{getvar::firstName}}, which has led to [...]\" <div>What is this scenario about?</div><div>What is the main idea?</div>|\n\t\t/setvar key=scenarioIde {{pipe}}|\n\t\t/setvar key=genSettings index=wi_book_key \"Scenario User\"|\n\t:}|\n\t/else {:\n\t\t/setvar key=genSettings index=wi_book_key \"Scenario Create\"|\n\t:}|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/ife (seasons != 'None') {:\n\t\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}} — Season: {{getvar::seasons}}\"|\n\t:}|\n\t/else {:\n\t\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}}\"|\n\t:}|\n\t/addvar key=extra \"- World Type: {{getvar::worldType}}\"|\n\t/addvar key=extra \"- World Details: {{getvar::worldDetails}}\"|\n\t/addvar key=extra \"- Residence: {{getvar::residence}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- --User--'s Role: {{getvar::userRole}}\"|\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/ife (inputIsList =='Scenario User') {:\n\t\t\t/setvar key=logicBasedInstruction \"6. Any mention of user should be replaced with '--User--'.{{newline}}7. Consider how the --User--'s Role ({{getvar::userRole}}) influences the character’s tone, visibility, or behavior — are they being watched, admired, judged, or misunderstood?\"|\n\t\t:}|\n\t\t/elseif (inputIsList =='Scenario Create') {:\n\t\t\t/setvar key=logicBasedInstruction \"5. Introduce a conflict, discovery, or dynamic involving --User-- if applicable, but do not assign them a name or alias.{{newline}}6. Always refer to them as --User--, not by a proper name or description. Maintain placeholder syntax exactly.{{newline}}7. Consider how the --User--'s Role ({{getvar::userRole}}) influences the character’s tone, visibility, or behavior — are they being watched, admired, judged, or misunderstood?\"|\n\t\t:}|\n\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey {{noop}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/ife (output != '') {:\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar logicBasedInstruction|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n//-----------|\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating Appearance & Anatomy\" {{pipe}}|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":6,"icon":"","showLabel":false,"label":"Step3 Generate Appearance-Anatomy","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating Appearance & Anatomy\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step3|\n\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n/let selected_btn {{noop}}|\n\n/ife (unitType == '') {:\n\t/buttons labels=[\"Metric\", \"Imperial\"] What type of measuring system do you want to use during these generations?|\n\t/setvar key=unitType {{pipe}}|\n\t/ife ( unitType == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/ife ((characterArchetype == 'Animalistic') or (characterArchetype == 'Pokémon') or (characterArchetype == 'Digimon') or (characterArchetype == 'Tauric')) {:\n\t/buttons labels=[\"Length (Their body is horizontal or animal-like — e.g., snake, lizard, quadruped)\", \"Height (They stand upright like a human or humanoid)\", \"Both (They have both vertical and elongated traits — e.g., centaur, dragon)\"] <div>How should this character's body be measured?</div><div>Choose the option that best fits their physical structure:</div>|\n\t/var key=selected_btn {{pipe}}|\n\t/re-replace find=\"/\\s\\(.*$/g\" replace=\"\" {{var::selected_btn}}|\n\t/var key=selected_btn {{pipe}}|\n:}|\n\n//**Length**|\n\n/ife ((( selected_btn == 'Length') or ( selected_btn == 'Both')) and (((characterArchetype == 'Animalistic') or (characterArchetype == 'Pokémon') or (characterArchetype == 'Digimon') or (characterArchetype == 'Tauric')))) {:\n\t/var key=do No|\n\t/var key=variableName \"length\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Length\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Unit Type: {{getvar::unitType}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar key=genSettings index=contextKey []|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=length None|\n\t/addvar key=dataBaseNames length|\n:}|\n//-----------|\n\n//**Height**|\n/ife ((( selected_btn == 'Height') or ( selected_btn == 'Both')) or  (((characterArchetype != 'Animalistic') and (characterArchetype != 'Pokémon') and (characterArchetype != 'Digimon')))) {:\n\t/var key=do No|\n\t/var key=variableName \"height\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Height\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Unit Type: {{getvar::unitType}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar key=genSettings index=contextKey []|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=height None|\n\t/addvar key=dataBaseNames height|\n:}|\n\n//-----------|\n\n//**Face**|\n/var key=do No|\n/var key=variableName \"appearanceFace\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Appearance Face\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//**Hair**|\n/var key=do No|\n/var key=variableName \"appearanceHair\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Appearance Hair\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Face Description: {{getvar::appearanceFace}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//**Eyes**|\n/var key=do No|\n/var key=variableName \"appearanceEyes\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Appearance Eyes\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Face Description: {{getvar::appearanceFace}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//**Features**|\n/var key=do No|\n/var key=variableName \"appearanceFeatures\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/ife ((characterArchetype == 'Human') or (characterArchetype == 'Human')) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Features Humanoid\"|\n\t:}|\n\t/else {:\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Features Other\"|\n\t:}|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//**Body**|\n/var key=do No|\n/var key=variableName \"appearanceBody\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Appearance Body\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/ife (appearanceFeatures != 'None') {:\n\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 9|\n\t\n\t/ife (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Do not include tails, wings, hooves, digitigrade legs, animalistic limbs, or non-human anatomy. Use human structure only.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Describe only human anatomical structure — posture should be upright and bipedal, with no tails or animalistic features. Focus on general proportions and center of gravity if relevant.\"|\n\t\t\n\t:}|\n\t/elseif (( characterArchetype != 'Human') and ( characterArchetype != 'Android') and (appearanceFeatures != 'None')) {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If '{{getvar::appearanceFeatures}}' includes non-human traits (e.g., tail, claws, digitigrade stance), describe how they affect posture, balance, or silhouette.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Incorporate any relevant non-human traits (e.g., tails, hooves, digitigrade legs) from '{{getvar::appearanceFeatures}}' into descriptions of balance, movement, or posture.\"|\n\t:}|\n\t/elseif (( characterArchetype != 'Human') and ( characterArchetype != 'Android') and (appearanceFeatures == 'None')) {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use a species-appropriate body structure, but do not describe any extra non-human features unless clearly implied by species type.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Do not invent tails, claws, wings, or non-human limbs unless strongly implied by species type. Focus on body shape, stance, or balance based on general archetype alone.\"|\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n/ife (gender == 'Female') {:\n\t//**Breasts**|\n\t/var key=do No|\n\t/var key=variableName \"appearanceBreasts\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Breasts\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t/addvar key=extra \"- Breasts: {{getvar::appearanceBody}}\"|\n\t\t/ife (appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 7|\n\t\t\n\t\t/ife (characterArchetype == 'Tauric') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Breasts are located on the humanoid torso — do not describe them as part of the lower animal body.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ((characterArchetype == 'Animalistic') and (speciesGroup != 'Fantasy')) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Do not describe breasts — most realistic Animalistic species lack humanoid chest anatomy. Focus on muscular bulk or species-appropriate chest traits.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ((characterArchetype == 'Animalistic') and ((speciesGroup == 'Fantasy') or (speciesGroup == 'Alien') or (speciesGroup == 'Demonic') or (speciesGroup == 'Mammal'))) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Breasts may be described only if the species is explicitly humanoid or mammalian in design. Use anatomical framing consistent with fantasy physiology.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\n//-----------|\n\n//**Nipples**|\n\t/var key=do No|\n\t/var key=variableName \"appearanceNipples\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Nipples\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t/addvar key=extra \"- Breasts: {{getvar::appearanceBreasts}}\"|\n\t\t/ife (appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 7|\n\t\t\n\t\t/ife (characterArchetype == 'Tauric') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Nipples are placed on the humanoid upper torso. Do not describe any features on the lower animal body.\"|\n\t\t\t\n\t\t:}|\n\t\t/ife (( 'fur' in logicBasedInstruction) or ( 'Fur' in logicBasedInstruction)) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Areolae may be partially obscured by fur or lightly visible beneath it. Use fur-based skin logic for color and contrast.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (( 'scales' in logicBasedInstruction) or ( 'Scales' in logicBasedInstruction)) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Areolae may appear slightly raised or differently textured than surrounding scales. Coloration and contrast should match scaled coverage.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (( 'fur' not in logicBasedInstruction) and ( 'Fur' not in logicBasedInstruction) and ( 'scales' not in logicBasedInstruction) and ( 'Scales' not in logicBasedInstruction)) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use skin-based detail — focus on tone, contour, and texture. Keep all surface description rooted in visible, uncovered human-like anatomy.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n//-----------|\n:}|\n/else {:\n\t/setvar key=appearanceBreasts None|\n\t/setvar key=appearanceNipples None|\n\t/addvar key=dataBaseNames appearanceBreasts|\n\t/addvar key=dataBaseNames appearanceNipples|\n:}|\n\n//**Pussy**|\n/var key=do No|\n/var key=variableName \"appearancePussy\"|\n/ife ((gender == 'Female') or (futanari == 'Yes')) {:\n\t\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Pussy\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t/ife (appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Female  Genital Type: {{getvar::privatesFemale}}\"|\n\t\t/addvar key=extra \"- Species Group: {{getvar::speciesGroup}}\"|\n\t\t/addvar key=extra \"- Animal Base: {{getvar::animalBase}}\"|\n\t\t/ife (futanari == 'Yes') {:\n\t\t\t/addvar key=extra \"Important: {{getvar::firstName}} is a futanari, so she has both a pussy and a cock.\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 8|\n\t\t\n\t\t/ife (futanari == 'Yes') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Only describe the vulva — do not mention or reference the cock, even by proximity.\"|\n\t\t\t\n\t\t:}|\n\t\t/ife (privatesFemale == 'Mammal') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The vulva may include outer and inner lips, a visible slit, or light pubic hair or fur. Use anatomical terms like “folds,” “cleft,” or “labia” as appropriate.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Reptile') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The slit may appear smooth, scaled, or slightly ridged. Do not describe fur, hair, or soft fleshy folds. Placement may be flush with surrounding scale plates.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Bird') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The vulva may be recessed or hidden beneath feathers. If the species uses a cloacal structure, describe it as smooth and integrated near the tail base. Avoid mammalian terminology.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Fish') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use phrases like “smooth slit,” “recessed fold,” or “ventral placement.” Avoid fur or lip-based descriptions. The texture should reflect aquatic biology.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Amphibian') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The vulva may be soft, moist-looking, and smooth-skinned. Avoid terms like fur, hair, or lips. Structure should appear simple and subtle.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Invertebrate') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Structure may appear segmented, chitinous, or soft-bodied. Use terms like “opening,” “ventral slit,” or “intersegmental ridge.” Avoid all mammalian descriptors.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Cephalopod') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The vulva may appear smooth, ringed, or recessed between soft folds or tentacle bases. Avoid describing labia or lips unless the species is hybridized.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Synthetic') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If the vulva is synthetic or sculpted, describe it as smooth, artificial, or bio-mimetic. Do not reference organic function, fluids, or reproductive cues.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Fantasy') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Vulva structure may include subtle magical, exotic, or hybrid traits — but keep all language anatomical and grounded. Avoid metaphor, emotion, or subjective tone.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesFemale == 'Alien') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Vulva may appear asymmetrical, oddly colored, or biologically unique. Keep tone anatomical — do not invent behavior or function unless implied by the context.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ( (privatesFemale == 'Feline') or (privatesFemale == 'Canine') or (privatesFemale == 'Ursine') or (privatesFemale == 'Leporidae') ) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may describe soft fur or pubic hair around the vulva if the character’s surface features indicate fur. Do not use fur-related descriptors if none are present.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ( (privatesFemale == 'Draconic') or (privatesFemale == 'Lacertilian') or (privatesFemale == 'Serpentine') or (privatesFemale == 'Crocodilian') ) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The vulva may be partially hidden by or integrated into scale patterns. Avoid soft or fleshy mammalian terms unless hybridized.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ( (privatesFemale == 'Passerine') or (privatesFemale == 'Raptor') or (privatesFemale == 'Ratite') or (privatesFemale == 'Aviary') ) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Vulva may be positioned beneath feathers or integrated into a cloacal structure. Keep surface detail minimal and avoid fur, lips, or fleshy folds.\"|\n\t\t\t\n\t\t:}|\n\t\t\n\t\t\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t\t/flushvar logicBasedInstruction|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//-----------|\n:}|\n/else {:\n\t/setvar key={{var::variableName}} None|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n//**Cock**|\n/var key=do No|\n/var key=variableName \"appearanceCock\"|\n/ife ((gender == 'Male') or (futanari == 'Yes' )) {:\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Cock\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t/ife (appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/ife (futanari == 'Yes') {:\n\t\t\t/addvar key=extra \"- Pussy Appearance: {{getvar::appearancePussy}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Male Genital Type:: {{getvar::privatesMale}}\"|\n\t\t/addvar key=extra \"- Species Group: {{getvar::speciesGroup}}\"|\n\t\t/addvar key=extra \"- Animal Base: {{getvar::animalBase}}\"|\n\t\t/ife (futanari == 'Yes') {:\n\t\t\t/addvar key=extra \"Important: {{getvar::firstName}} is a futanari, so she has both a pussy and a cock.\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 8|\n\t\t\n\t\t/ife (futanari == 'Yes') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Rule\"|\n\t\t\t\n\t\t:}|\n\t\t/ife (privatesMale == 'Mammal') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The shaft may include a foreskin or remain uncovered. Use standard anatomical terms for glans, shaft, and scrotum. Testicles may be furred or bare depending on features.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesMale == 'Canine') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The shaft may emerge from a sheath and taper to a point. Include a prominent knot at the base if erect. The scrotum may be fur-covered and sit close to the base.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesMale == 'Feline') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The shaft may feature fine ridges or barbs. When erect, describe a tapered form with slight texture variation. The testicles may be small and soft-furred.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesMale == 'Equine') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The penis is long, thick, and partially sheathed when flaccid. When erect, it may feature a flared head and medial ring. The testicles are large, pendulous, and smooth-skinned.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ((privatesMale == 'Reptile') or (privatesMale == 'Draconic')) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The penis may be scaled, muscular, or ridged. It can be tucked into a slit or retractable area. When erect, emphasize texture, internal pressure, or unusual shape without exaggeration.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ((privatesMale == 'Insectoid') or (privatesMale == 'Arachnid') or (privatesMale == 'Cephalopod')) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The shaft may be segmented, chitinous, or soft-bodied. Avoid human terminology. Use terms like “appendage,” “ventral organ,” or “spiral sheath” depending on structure.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesMale == 'Synthetic') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The shaft may be artificial, sculpted, or bioengineered. Describe design features such as texture, joint seams, or material finish. Avoid organic function or reproductive cues.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesMale == 'Alien') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. The penis may be asymmetrical, multi-textured, or unusually shaped. Describe with anatomical clarity, not metaphor. You may include multiple elements if the form justifies it.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (privatesMale == 'Fantasy') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If the anatomy blends known and exotic traits, describe it with neutral detail. Do not invent abilities or hybrid function — structure only.\"|\n\t\t\t\n\t\t:}|\n\t\t\n\t\t/ife (('fur' in appearanceFeatures) or ('Fur' in appearanceFeatures)) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If the character has fur, you may describe fur around the sheath or scrotum. Keep texture consistent with body coverage.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (('scales' in appearanceFeatures) or ('Scales' in appearanceFeatures)) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If the character has scales, the shaft may appear ridged or recessed, with the scrotum partially armored or integrated into surrounding body texture.\"|\n\t\t\t\n\t\t:}|\n\t\t\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t\t/flushvar logicBasedInstruction|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//-----------|\n:}|\n/else {:\n\t/setvar key={{var::variableName}} None|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n//**Privates Sync**|\n/var key=do No|\n/var key=variableName \"appearanceGenitals\"|\n/ife (futanari == 'Yes') {:\n\t\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Genitals Sync\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t/ife (appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Pussy Appearance: {{getvar::appearancePussy}}\"|\n\t\t/addvar key=extra \"- Female Genital Type:: {{getvar::privatesFemale}}\"|\n\t\t/addvar key=extra \"- Cock Appearance: {{getvar::appearanceCock}}\"|\n\t\t/addvar key=extra \"- Male Genital Type:: {{getvar::privatesMale}}\"|\n\t\t\n\t\t/addvar key=extra \"- Species Group: {{getvar::speciesGroup}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t\t/flushvar logicBasedInstruction|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//-----------|\n:}|\n/else {:\n\t/setvar key={{var::variableName}} None|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n//**Anus**|\n/var key=do No|\n/var key=variableName \"appearanceAnus\"|\n/ife ({{var::variableName}} == '') {:\n\t/var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n\t/getvar key={{var::variableName}}|\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Appearance Anus\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t/ife (appearanceFeatures != 'None') {:\n\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t:}|\n\t/addvar key=extra \"- Species Group: {{getvar::speciesGroup}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/ife (futanari == 'Yes') {:\n\t\t/setvar key=logicBasedInstruction \"7. {{getvar::firstName}} is a futanari. The anus should be described neutrally and anatomically, with no reference to the cock or pussy.\"|\n\t:}|\n\t/ife ('Tail' in appearanceFeatures) {:\n\t\t/ife (logicBasedInstruction == '') {:\n\t\t\t/setvar key=logicBasedInstruction \"7. {{getvar::firstName}} has a tail. Describe the anus in relation to the tail's base if visible.\"|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=logicBasedInstruction \"{{newline}}7. {{getvar::firstName}} has a tail. Describe the anus in relation to the tail's base if visible.\"\n\t\t:}|\n\t:}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n\t/flushvar logicBasedInstruction|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//-----------|\n\n//**Appearance Traits**|\n/var key=do No|\n/var key=variableName \"appearanceTraits\"|\n/buttons labels=[\"Yes\", \"No\"] Do you want {{getvar::firstName}} to have any Appearance Traits?|\n/var selected_btn {{pipe}}|\n/ife ( selected_btn == 'Yes') {:\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=appearanceTraitsDetails {{noop}}|\n\t\t/setvar key=appearanceTraitsEffect {{noop}}|\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Trait Type\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput No|\n\t\t/setvar key=genSettings index=outputIsList Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t\t/flushvar logicBasedInstruction|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=appearanceTraits None|\n\t/addvar key=dataBaseNames appearanceTraits|\n:}|\n\n/ife ((appearanceTraits != '') and (appearanceTraits != 'None')) {:\n\t//Descriptions|\n\t/var key=do No|\n\t/var key=variableName \"appearanceTraitsDetails\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Trait Details\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::appearanceTraits}} {:\n\t\t\t\t/setvar key=appearanceTrait {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar appearanceTrait|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t\n\t//|\n\t/var key=do No|\n\t/var key=variableName \"appearanceTraitsEffect\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Appearance Trait Effect\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::appearanceTraits}} {:\n\t\t\t\t/setvar key=appearanceTrait {{var::item}}|\n\t\t\t\t/getvar key=appearanceTraitsDetails index={{var::index}}|\n\t\t\t\t/setvar key=appearanceTraitDetails {{pipe}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar appearanceTrait|\n\t\t\t/flushvar appearanceTraitDetails|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//-----------|\n:}|\n/else {:\n\t/setvar key=appearanceTraitsDetails None|\n\t/setvar key=appearanceTraitsEffect None|\n\t/addvar key=dataBaseNames appearanceTraitsDetails|\n\t/addvar key=dataBaseNames appearanceTraitsEffect|\n:}|\n/setvar key=parsedAppearanceTraits {{noop}}|\n/ife (appearanceTraits != 'None') {:\n\t/setvar key=parsedAppearanceTraits |\n\t/foreach {{getvar::appearanceTraits}} {:\n\t\t/ife (index > 0) {:\n\t\t\t/addvar key=parsedAppearanceTraits \"{{newline}}{{newline}}\"|\n\t\t:}|\n\t\t/getvar key=appearanceTraitsDetails index={{var::index}}|\n\t\t/let key=details {{pipe}}|\n\t\t/getvar key=appearanceTraitsEffect index={{var::index}}|\n\t\t/let key=effect {{pipe}}|\n\t\t/addvar key=parsedAppearanceTraits \"- Appearance Trait: {{var::item}}\n  - Details: {{var::details}}\n  - Effect: {{var::effect}}\"\n\t:}|\n:}|\n/else {:\n\t/setvar key=parsedAppearanceTraits None|\n:}|\n/addvar key=dataBaseNames parsedAppearanceTraits|\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating Outfit\" {{pipe}}|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":8,"icon":"","showLabel":false,"label":"Step4 Generate Outfit","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating Outfit\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step4|\n\n/setvar key=skip Add|\n\n/setvar key=stepDone No|\n/setvar key=outfitsDone Yes|\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n/let key=selected_btn {{noop}}|\n\n\n\n/ife (overallOutfit == '') {:\n\t/buttons labels=[\"Yes\", \"No\"] <div>Do you want to set a overall outfit look? This can be changed for each outfit part</div><div>Example1: School Uniform</div><div>Example2: School Swimsuit</div><div>Example3: Office Outfit</div>|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/elseif ( selected_btn == 'Yes') {:\n\t\t/input <div>Example1: School Uniform</div><div>Example2: School Swimsuit</div><div>Example3: Office Outfit</div>|\n\t\t/setvar key=overallOutfit {{pipe}}|\n\t\t/ife ( overallOutfit == ''){:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n:}|\n\n//Outfit Head|\n/var key=do No|\n/var key=variableName \"outfitHead\"|\n/ife ({{var::variableName}} == '') {:\n\t/var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n\t/getvar key={{var::variableName}}|\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Outfit Head\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\n\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Outfit Head Description|\n/ife (outfitHead != 'None') {:\n\t/var key=do No|\n\t/var key=variableName \"outfitHeadDescription\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Head Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Hair: {{getvar::appearanceHair}}\"|\n\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t/setvar key=logicBasedInstruction \"6. If {{getvar::parsedSpecies}} includes visible head features (ears, horns, fins, wings, etc), consider how they affect fit or placement of the headwear.\"|\n\t\t:}|\n\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t/setvar key=logicBasedInstruction \"6. If {{getvar::appearanceFeatures}} includes scars, prosthetics, cybernetics, piercings, or other physical modifications, consider how they visually contrast with or influence the item’s appearance or placement.\"|\n\t\t:}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar logicBasedInstruction|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=outfitHeadDescription None|\n\t/addvar key=dataBaseNames outfitHeadDescription|\n:}|\n//--------|\n\n//Outfit Accessories|\n/var key=do No|\n/var key=variableName \"outfitAccessories\"|\n/ife ({{var::variableName}} == '') {:\n\t/var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n\t/getvar key={{var::variableName}}|\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Outfit Accessories\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\n\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Outfit Accessories Description|\n/ife (outfitAccessories != 'None') {:\n\t/var key=do No|\n\t/var key=variableName \"outfitAccessoriesDescription\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Accessories Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::parsedSpecies}} includes tails, horns, paws, wings, or other non-human limbs, consider how this affects where or how the accessory is worn.\"|\n\t\t:}|\n\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes prosthetics, piercings, cybernetics, or scars, consider how the accessory interacts with or highlights these features.\"|\n\t\t:}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::outfitAccessories}} {:\n\t\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar {{var::variableName}}Item|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar logicBasedInstruction|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=outfitAccessoriesDescription None|\n\t/addvar key=dataBaseNames outfitAccessoriesDescription|\n:}|\n//--------|\n/wait {{getvar::wait}}|\n/setvar key=parsedAccessories {{noop}}|\n/ife (outfitAccessoriesDescription == 'None') {:\n\t/addvar key=parsedAccessories \" {{getvar::outfitAccessoriesDescription}}\"|\n:}|\n/elseif (outfitAccessoriesDescription is list) {:\n\t/foreach {{getvar::outfitAccessoriesDescription}} {:\n\t\t/addvar key=parsedAccessories \"{{newline}}  - {{var::item}}\"|\n\t:}|\n:}|\n/addvar key=dataBaseNames parsedAccessories|\n\n//Outfit Makeup|\n/var key=do No|\n/var key=variableName \"outfitMakeup\"|\n/ife ({{var::variableName}} == '') {:\n\t/var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n\t/getvar key={{var::variableName}}|\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Outfit Makeup\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\n\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Outfit Makeup Description|\n/ife (outfitMakeup != 'None') {:\n\t/var key=do No|\n\t/var key=variableName \"outfitMakeupDescription\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Makeup Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes fur, scales, feathers, or non-human markings, ensure the makeup is applied in visible or exposed areas — such as facial skin patches, ridges, horns, or ceremonial markings — and accounts for species texture.\"|\n\t\t:}|\n\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes prosthetics, cybernetics, scars, piercings, or skin conditions, consider how the makeup highlights or contrasts with these features visually.\"|\n\t\t:}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::outfitMakeup}} {:\n\t\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar {{var::variableName}}Item|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar logicBasedInstruction|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=outfitMakeupDescription None|\n\t/addvar key=dataBaseNames outfitMakeupDescription|\n:}|\n//--------|\n/wait {{getvar::wait}}|\n/setvar key=parsedMakeup {{noop}}|\n/ife (outfitMakeupDescription == 'None') {:\n\t/addvar key=parsedMakeup \" {{getvar::outfitMakeupDescription}}\"|\n:}|\n/elseif (outfitMakeupDescription is list) {:\n\t/foreach {{getvar::outfitMakeupDescription}} {:\n\t\t/addvar key=parsedMakeup \"{{newline}}  - {{var::item}}\"|\n\t:}|\n:}|\n/addvar key=dataBaseNames parsedMakeup|\n\n//Outfit Neck|\n/var key=do No|\n/var key=variableName \"outfitNeck\"|\n/ife ({{var::variableName}} == '') {:\n\t/var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n\t/getvar key={{var::variableName}}|\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Outfit Neck\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\n\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Outfit Neck Description|\n/ife (outfitNeck != 'None') {:\n\t/var key=do No|\n\t/var key=variableName \"outfitNeckDescription\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Neck Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes fur, scales, manes, ruffs, or neck-based traits (e.g., gills, fins, feathers), describe how the neckwear fits, wraps around, or contrasts with those features.\"|\n\t\t:}|\n\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes scars, prosthetics, piercings, or visible augmentations around the neck or upper torso, reflect how the neckwear interacts with or complements these features.\"|\n\t\t:}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar logicBasedInstruction|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=outfitNeckDescription None|\n\t/addvar key=dataBaseNames outfitNeckDescription|\n:}|\n//--------|\n\n/ife (mainwearType == '') {:\n\t/buttons labels=[\"One-Piece\", \"Two-Piece\"] Do you want to have a One-Piece outfit or a Two-Piece outfit?|\n\t/var key=selected_btn {{pipe}}|\n\t/ife (selected_btn == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/setvar key=mainwearType {{var::selected_btn}}|\n:}|\n\n/ife ( mainwearType == 'One-Piece') {:\n\t//Outfit One-Piece|\n\t/var key=do No|\n\t/var key=variableName \"outfitMainwear\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Mainwear\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\t\n\t\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//--------|\n\t\n\t//Outfit One-Piece Description|\n\t/ife (outfitOnePiece != 'None') {:\n\t\t/var key=do No|\n\t\t/var key=variableName \"outfitMainwearDescription\"|\n\t\t/ife ({{var::variableName}} == '') {:\n\t\t\t/var key=do Yes|\n\t\t:}|\n\t\t/elseif (skip == 'Update') {:\n\t\t\t/getvar key={{var::variableName}}|\n\t\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t\t/var key=do {{pipe}}|\n\t\t\t/ife (do == '') {:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t:}|\n\t\t/ife ( do == 'Yes' ) {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Outfit Mainwear Description\"|\n\t\t\t/setvar key=genSettings index=genIsList No|\n\t\t\t/setvar key=genSettings index=inputIsList No|\n\t\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t\t/setvar key=genSettings index=outputIsList No|\n\t\t\t/setvar key=genSettings index=useContext Yes|\n\t\t\t/setvar key=extra []|\n\t\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t\t:}|\n\t\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t\t/ife ( appearanceBreasts != 'None') {:\n\t\t\t\t/addvar key=extra \"- Breasts: {{getvar::appearanceBreasts}}\"|\n\t\t\t:}|\n\t\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t\t/setvar key=extra []|\n\t\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t\t/ife (extra != '') {:\n\t\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t\t:}|\n\t\t\t/flushvar extra|\n\t\t\t/wait {{getvar::wait}}|\n\t\t\t\n\t\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t\t/setvar key=logicBasedInstruction \"8. If {{getvar::appearanceFeatures}} includes wings, tail bases, dorsal fins, fur crests, or unusual body shapes, describe how the garment is shaped or opened to accommodate those features.\"|\n\t\t\t:}|\n\t\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t\t/setvar key=logicBasedInstruction \"8. If {{getvar::appearanceFeatures}} includes medical gear, prosthetics, or cybernetics on the torso or pelvis, describe how the garment adjusts to fit, support, or conceal them.\"|\n\t\t\t:}|\n\t\t\t\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=inputIsList {{pipe}}|\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=outputIsList {{pipe}}|\n\t\t\t\n\t\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t\t:}|\n\t\t\t//[[Generate with Prompt]]|\n\t\t\t\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar logicBasedInstruction|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar genOrder|\n\t\t\t/flushvar genContent|\n\t\t\t/flushvar genSettings|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=outfitMainwearDescription None|\n\t\t/addvar key=dataBaseNames outfitMainwearDescription|\n\t:}|\n\t//--------|\n:}|\n/else {:\n\t/setvar key=outfitMainwear Skip|\n\t/addvar key=dataBaseNames outfitMainwear|\n\t/setvar key=outfitMainwearDescription Skip|\n\t/addvar key=dataBaseNames outfitMainwearDescription|\n:}|\n\n/ife ( mainwearType == 'Two-Piece') {:\n\t//Outfit Top|\n\t/var key=do No|\n\t/var key=variableName \"outfitTop\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Top\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\t\n\t\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//--------|\n\t\n\t//Outfit Top Description|\n\t/ife (outfitTop != 'None') {:\n\t\t/var key=do No|\n\t\t/var key=variableName \"outfitTopDescription\"|\n\t\t/ife ({{var::variableName}} == '') {:\n\t\t\t/var key=do Yes|\n\t\t:}|\n\t\t/elseif (skip == 'Update') {:\n\t\t\t/getvar key={{var::variableName}}|\n\t\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t\t/var key=do {{pipe}}|\n\t\t\t/ife (do == '') {:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t:}|\n\t\t/ife ( do == 'Yes' ) {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Outfit Top Description\"|\n\t\t\t/setvar key=genSettings index=genIsList No|\n\t\t\t/setvar key=genSettings index=inputIsList No|\n\t\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t\t/setvar key=genSettings index=outputIsList No|\n\t\t\t/setvar key=genSettings index=useContext Yes|\n\t\t\t/setvar key=extra []|\n\t\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t\t:}|\n\t\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t\t/ife ( appearanceBreasts != 'None') {:\n\t\t\t\t/addvar key=extra \"- Breasts: {{getvar::appearanceBreasts}}\"|\n\t\t\t:}|\n\t\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t\t/setvar key=extra []|\n\t\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t\t/ife (extra != '') {:\n\t\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t\t:}|\n\t\t\t/flushvar extra|\n\t\t\t/wait {{getvar::wait}}|\n\t\t\t\n\t\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t\t/setvar key=logicBasedInstruction \"8. If {{getvar::appearanceFeatures}} includes wings, tail bases, dorsal fins, fur crests, or unusual body shapes, describe how the top is shaped or adapted to fit those features comfortably or functionally.\"|\n\t\t\t:}|\n\t\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t\t/setvar key=logicBasedInstruction \"8. If {{getvar::appearanceFeatures}} includes medical supports, prosthetics, or cybernetics on the torso or arms, describe how the top accommodates or interacts with them.\"|\n\t\t\t:}|\n\t\t\t\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=inputIsList {{pipe}}|\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=outputIsList {{pipe}}|\n\t\t\t\n\t\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t\t:}|\n\t\t\t//[[Generate with Prompt]]|\n\t\t\t\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar logicBasedInstruction|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar genOrder|\n\t\t\t/flushvar genContent|\n\t\t\t/flushvar genSettings|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=outfitTopDescription None|\n\t\t/addvar key=dataBaseNames outfitTopDescription|\n\t:}|\n\t//--------|\n\t\n\t//Outfit Bottom|\n\t/var key=do No|\n\t/var key=variableName \"outfitBottom\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Bottom\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\t\n\t\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//--------|\n\t\n\t//Outfit Bottom Description|\n\t/ife (outfitTop != 'None') {:\n\t\t/var key=do No|\n\t\t/var key=variableName \"outfitBottomDescription\"|\n\t\t/ife ({{var::variableName}} == '') {:\n\t\t\t/var key=do Yes|\n\t\t:}|\n\t\t/elseif (skip == 'Update') {:\n\t\t\t/getvar key={{var::variableName}}|\n\t\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t\t/var key=do {{pipe}}|\n\t\t\t/ife (do == '') {:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t:}|\n\t\t/ife ( do == 'Yes' ) {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Outfit Bottom Description\"|\n\t\t\t/setvar key=genSettings index=genIsList No|\n\t\t\t/setvar key=genSettings index=inputIsList No|\n\t\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t\t/setvar key=genSettings index=outputIsList No|\n\t\t\t/setvar key=genSettings index=useContext Yes|\n\t\t\t/setvar key=extra []|\n\t\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t\t:}|\n\t\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t\t/setvar key=extra []|\n\t\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t\t/ife (extra != '') {:\n\t\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t\t:}|\n\t\t\t/flushvar extra|\n\t\t\t/wait {{getvar::wait}}|\n\t\t\t\n\t\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes tails, fur, multiple legs, or digitigrade limbs, describe how {{getvar::outfitBottom}} adapts to the species-specific lower anatomy.\"|\n\t\t\t:}|\n\t\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes braces, prosthetics, or assistive gear on the lower body, describe how {{getvar::outfitBottom}} fits or adjusts to accommodate them.\"|\n\t\t\t:}|\n\t\t\t\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=inputIsList {{pipe}}|\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=outputIsList {{pipe}}|\n\t\t\t\n\t\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t\t:}|\n\t\t\t//[[Generate with Prompt]]|\n\t\t\t\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar logicBasedInstruction|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar genOrder|\n\t\t\t/flushvar genContent|\n\t\t\t/flushvar genSettings|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=outfitBottomDescription None|\n\t\t/addvar key=dataBaseNames outfitBottomDescription|\n\t:}|\n\t//--------|\n:}|\n/else {:\n\t/setvar key=outfitTop Skip|\n\t/addvar key=dataBaseNames outfitTop|\n\t/setvar key=outfitTopDescription Skip|\n\t/addvar key=dataBaseNames outfitTopDescription|\n\t/setvar key=outfitBottom Skip|\n\t/addvar key=dataBaseNames outfitBottom|\n\t/setvar key=outfitBottomDescription Skip|\n\t/addvar key=dataBaseNames outfitBottomDescription|\n:}|\n\n//Outfit Legs|\n/var key=do No|\n/var key=variableName \"outfitLegs\"|\n/ife ({{var::variableName}} == '') {:\n\t/var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n\t/getvar key={{var::variableName}}|\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Outfit Legwear\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/ife (appearanceFeatures != 'None') {:\n\t\t/addvar key=extra - Features: {{getvar::appearanceFeatures}}\"|\n\t:}|\n\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t/addvar key=extra \"- Species Group: {{getvar::speciesGroup}}\"|\n\t/addvar key=extra \"- Bottom Outfit: {{getvar::outfitBottom}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\n\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Outfit Legs Description|\n/ife (outfitLegs != 'None') {:\n\t/var key=do No|\n\t/var key=variableName \"outfitLegsDescription\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Legwear Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/ife (appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra - Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t/addvar key=extra \"- Species Group: {{getvar::speciesGroup}}\"|\n\t\t/addvar key=extra \"- Bottom Outfit: {{getvar::outfitBottom}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 6|\n\t\t\n\t\t/ife ((('tail' in appearanceFeatures ) or ('Tail' in appearanceFeatures )) and (('wings' in appearanceFeatures ) or ('Wings' in appearanceFeatures ))) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If both tail and wings are present, the outfit should account for both anatomical openings or contours without compromising garment structure. Prioritize ergonomic design over decorative cutouts.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (('wings' in appearanceFeatures ) or ('Wings' in appearanceFeatures )) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If the character has wings, the outfit must either leave the upper back open, include structured wing slots, or have tailored cutouts to avoid restricting motion. Do not ignore wing presence in the garment fit.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (('tail' in appearanceFeatures ) or ('Tail' in appearanceFeatures )) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If the character has a tail, ensure the garment includes a slit, flap, stretch opening, or contour that accommodates tail placement and movement. Placement should appear intentional and integrated.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ((('tail' not in appearanceFeatures ) and ('Tail' not in appearanceFeatures )) and (('wings' not in appearanceFeatures ) or ('Wings' not in appearanceFeatures ))) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Do not include any garment openings or anatomical adaptations for tails or wings, as none are present.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar logicBasedInstruction|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=outfitLegsDescription None|\n\t/addvar key=dataBaseNames outfitLegsDescription|\n:}|\n//--------|\n\n//Outfit Shoes|\n/var key=do No|\n/var key=variableName \"outfitShoes\"|\n/ife ({{var::variableName}} == '') {:\n\t/var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n\t/getvar key={{var::variableName}}|\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Outfit Shoes\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\n\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Outfit Shoes Description|\n/ife (outfitShoes != 'None') {:\n\t/var key=do No|\n\t/var key=variableName \"outfitShoesDescription\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Shoes Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 6|\n\t\t\n\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If the character has paws, claws, hooves, or digitigrade limbs, describe how the shoes are shaped, opened, or adjusted to fit their structure.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If the character has prosthetics, braces, or other medical features, describe how the shoes provide support or structural compatibility.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar logicBasedInstruction|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=outfitShoesDescription None|\n\t/addvar key=dataBaseNames outfitShoesDescription|\n:}|\n//--------|\n\n/ife (breasts != 'None') {:\n\t//Outfit Underwear (Top)|\n\t/var key=do No|\n\t/var key=variableName \"outfitUnderwearTop\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Underwear Top\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\t\n\t\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t//--------|\n\t\n\t//Outfit Underwear (Top) Description|\n\t/ife (outfitUnderwearTop != 'None') {:\n\t\t/var key=do No|\n\t\t/var key=variableName \"outfitUnderwearTopDescription\"|\n\t\t/ife ({{var::variableName}} == '') {:\n\t\t\t/var key=do Yes|\n\t\t:}|\n\t\t/elseif (skip == 'Update') {:\n\t\t\t/getvar key={{var::variableName}}|\n\t\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t\t/var key=do {{pipe}}|\n\t\t\t/ife (do == '') {:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t:}|\n\t\t/ife ( do == 'Yes' ) {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Outfit Underwear Top Description\"|\n\t\t\t/setvar key=genSettings index=genIsList No|\n\t\t\t/setvar key=genSettings index=inputIsList No|\n\t\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t\t/setvar key=genSettings index=outputIsList No|\n\t\t\t/setvar key=genSettings index=useContext Yes|\n\t\t\t/setvar key=extra []|\n\t\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t\t:}|\n\t\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t\t/ife ( appearanceBreasts != 'None') {:\n\t\t\t\t/addvar key=extra \"- Breasts: {{getvar::appearanceBreasts}}\"|\n\t\t\t:}|\n\t\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t\t/setvar key=extra []|\n\t\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t\t/ife (extra != '') {:\n\t\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t\t:}|\n\t\t\t/flushvar extra|\n\t\t\t/wait {{getvar::wait}}|\n\t\t\t\n\t\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes fur, scales, extra limbs, or an unusual torso shape, describe how {{getvar::outfitUnderwearTop}} adapts to or works with these features.\"|\n\t\t\t:}|\n\t\t\t/elseif (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t\t/setvar key=logicBasedInstruction \"7. If {{getvar::appearanceFeatures}} includes medical gear, scars, or prosthetics, note how {{getvar::outfitUnderwearTop}} provides comfort or coverage in those areas.\"|\n\t\t\t:}|\n\t\t\t\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=inputIsList {{pipe}}|\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=outputIsList {{pipe}}|\n\t\t\t\n\t\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t\t:}|\n\t\t\t//[[Generate with Prompt]]|\n\t\t\t\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar logicBasedInstruction|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar genOrder|\n\t\t\t/flushvar genContent|\n\t\t\t/flushvar genSettings|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=outfitUnderwearTopDescription None|\n\t\t/addvar key=dataBaseNames outfitUnderwearTopDescription|\n\t:}|\n\t//--------|\n:}|\n/else {:\n\t/setvar key=outfitUnderwearTop Skip|\n\t/setvar key=outfitUnderwearTopDescription Skip|\n\t/addvar key=dataBaseNames outfitUnderwearTop|\n\t/addvar key=dataBaseNames outfitUnderwearTopDescription|\n:}|\n\n//Outfit Underwear (Bottom)|\n/var key=do No|\n/var key=variableName \"outfitUnderwearBottom\"|\n/ife ({{var::variableName}} == '') {:\n\t/var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n\t/getvar key={{var::variableName}}|\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Outfit Underwear Bottom\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=guidance \"The response should be guided toward: {{getvar::overallOutfit}}\"|\n\t\n\t/ife ((outputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Outfit Underwear (Bottom) Description|\n/ife (outfitUnderwearBottom != 'None') {:\n\t/var key=do No|\n\t/var key=variableName \"outfitUnderwearBottomDescription\"|\n\t/ife ({{var::variableName}} == '') {:\n\t\t/var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t\t/getvar key={{var::variableName}}|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Outfit Underwear Bottom Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/ife ( appearanceFeatures != 'None') {:\n\t\t\t/addvar key=extra \"- Features: {{getvar::appearanceFeatures}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Body: {{getvar::appearanceBody}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 6|\n\t\t\n\t\t/ife (( characterArchetype != 'Human') and ( characterArchetype != 'Android')) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If {{getvar::appearanceFeatures}} includes tails, fur, digitigrade legs, extra limbs, or tauric anatomy, mention how {{getvar::outfitUnderwearBottom}} accommodates or wraps around them.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif ((( characterArchetype == 'Human') or ( characterArchetype == 'Android')) and (appearanceFeatures != 'None')) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If {{getvar::appearanceFeatures}} includes scars, braces, or prosthetics around the hips or legs, describe how {{getvar::outfitUnderwearBottom}} adjusts or provides comfort.\"|\n\t\t\t\n\t\t:}|\n\t\t/ife (( characterArchetype == 'Human') or ( characterArchetype == 'Android')) {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Do not mention tails, fur, digitigrade joints, claws, wings, extra limbs, or species-based adaptations. Describe only human anatomy and fit.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar logicBasedInstruction|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=outfitUnderwearBottomDescription None|\n\t/addvar key=dataBaseNames outfitUnderwearBottomDescription|\n:}|\n//--------|\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating Mental Traits & Personality\" {{pipe}}|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":10,"icon":"","showLabel":false,"label":"Step5 Generate Mental Traits-Personality","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating Generate Mental Traits & Personality\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step5|\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n/let selected_btn {{noop}}|\n\n//Archetype|\n/var key=do No|\n/var key=variableName \"personalityArchetype\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Archetype Base\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=genSettings index=contextKey []|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/setvar key=settingModifier {Modifier}|\n\t/setvar key=settingArchetype {Archetype}|\n\t/setvar key=settingAddition {Addition}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n\t/flushvar settingModifier|\n\t/flushvar settingArchetype|\n\t/flushvar settingAddition|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n//Archetype Details|\n/var key=do No|\n/var key=variableName \"personalityArchetypeDetails\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Archetype Details\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Archetype: {{getvar::personalityArchetype}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n\t/flushvar settingModifier|\n\t/flushvar settingArchetype|\n\t/flushvar settingAddition|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n//Reasoning|\n/var key=do No|\n/var key=variableName \"personalityArchetypeReasoning\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Archetype Reasoning\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/setvar key=settingModifier {Modifier}|\n\t/setvar key=settingArchetype {Archetype}|\n\t/setvar key=settingAddition {Addition}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/ife (output != '') {:\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n\t/flushvar settingModifier|\n\t/flushvar settingArchetype|\n\t/flushvar settingAddition|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n/findentry field=comment file=\"CMC Templates\" \"Archetype Template\"|\n/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n/setvar key=parsedArchetype {{pipe}}|\n/addvar key=dataBaseNames parsedArchetype|\n\n/ife (( alignmentChoice == '') or ( alignmentChoice == 'Yes')) {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to select and generate an Alignment and its details?|\n\t/setvar key=alignmentChoice {{pipe}}|\n\t/ife ( alignmentChoice == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/elseif ( selected_btn == 'Yes') {:\n\t\t//Alignment|\n\t\t/var key=do No|\n\t\t/var key=variableName \"personalityAlignment\"|\n\t\t/ife ({{var::variableName}} == '') {:\n\t\t    /var key=do Yes|\n\t\t:}|\n\t\t/elseif (skip == 'Update') {:\n\t\t    /getvar key={{var::variableName}}|\n\t\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t    /var key=do {{pipe}}|\n\t\t    /ife (do == '') {:\n\t\t        /echo Aborting |\n\t\t        /abort\n\t\t    :}|\n\t\t:}|\n\t\t/ife ( do == 'Yes' ) {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Alignment\"|\n\t\t\t/setvar key=genSettings index=combineLorebookEntries No|\n\t\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t\t/setvar key=genSettings index=inputIsList No|\n\t\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t\t/setvar key=genSettings index=outputIsList No|\n\t\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t\t/setvar key=genSettings index=useContext No|\n\t\t\t/wait {{getvar::wait}}|\n\t\t\t\n\t\t\t\n\t\t\t/getvar key=genSettings index=wi_book_key|\n\t\t\t/let key=wi_book_key {{pipe}}|\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=inputIsList {{pipe}}|\n\t\t\t/getvar key=genSettings index=combineLorebookEntries|\n\t\t\t/let key=combineLorebookEntries {{pipe}}|\n\t\t\t\n\t\t\t\n\t\t\t/ife ( inputIsList == 'Yes') {:\n\t\t\t\t/setvar key={{var::variableName}} []|\n\t\t\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t\t\t:}|\n\t\t\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t\t\t/setvar key=it {{var::item}}|\n\t\t\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t\t\t/setvar key=genSettings index=content {{pipe}}|\n\t\t\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t\t\t/ife (output != '') {:\n\t\t\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t\t:}|\n\t\t\t\t:}|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/getvar key=genSettings index=wi_book_key|\n\t\t\t\t/setvar key=it {{pipe}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t\t/ife (output != '') {:\n\t\t\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t:}|\n\t\t\t\t\n\t\t\t:}|\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar genOrder|\n\t\t\t/flushvar genContent|\n\t\t\t/flushvar it|\n\t\t\t/flushvar genSettings|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t:}|\n\t\t//--------|\n\t\t\n\t\t\n\t\t//Alignment Details|\n\t\t/var key=do No|\n\t\t/var key=variableName \"personalityAlignmentDetails\"|\n\t\t/ife ({{var::variableName}} == '') {:\n\t\t    /var key=do Yes|\n\t\t:}|\n\t\t/elseif (skip == 'Update') {:\n\t\t    /getvar key={{var::variableName}}|\n\t\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t    /var key=do {{pipe}}|\n\t\t    /ife (do == '') {:\n\t\t        /echo Aborting |\n\t\t        /abort\n\t\t    :}|\n\t\t:}|\n\t\t/ife ( do == 'Yes' ) {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Alignment Details\"|\n\t\t\t/setvar key=genSettings index=genIsList No|\n\t\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t\t/setvar key=genSettings index=useContext Yes|\n\t\t\t/setvar key=extra []|\n\t\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t\t\t/addvar key=extra \"- Alignment: {{getvar::alignment}}\"|\n\t\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t\t/flushvar extra|\n\t\t\t/setvar key=genSettings index=contextKey []|\n\t\t\t/wait {{getvar::wait}}|\n\t\t\t\n\t\t\t/setvar key=settingModifier {Modifier}|\n\t\t\t/setvar key=settingArchetype {Archetype}|\n\t\t\t/setvar key=settingAddition {Addition}|\n\t\t\t\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=inputIsList {{pipe}}|\n\t\t\t\n\t\t\t\n\t\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t\t:}|\n\t\t\t//[[Generate with Prompt]]|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar genOrder|\n\t\t\t/flushvar genContent|\n\t\t\t/flushvar genSettings|\n\t\t\t/flushvar settingModifier|\n\t\t\t/flushvar settingArchetype|\n\t\t\t/flushvar settingAddition|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t:}|\n\t\t//--------|\n\t\t\n\t\t\n\t\t//Alignment Ideals|\n\t\t/var key=do No|\n\t\t/var key=variableName \"personalityAlignmentIdeals\"|\n\t\t/ife ({{var::variableName}} == '') {:\n\t\t    /var key=do Yes|\n\t\t:}|\n\t\t/elseif (skip == 'Update') {:\n\t\t    /getvar key={{var::variableName}}|\n\t\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t\t    /var key=do {{pipe}}|\n\t\t    /ife (do == '') {:\n\t\t        /echo Aborting |\n\t\t        /abort\n\t\t    :}|\n\t\t:}|\n\t\t/ife ( do == 'Yes' ) {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Alignment Ideals\"|\n\t\t\t/setvar key=genSettings index=genIsList No|\n\t\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t\t/setvar key=genSettings index=useContext Yes|\n\t\t\t/setvar key=extra []|\n\t\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t\t\t/addvar key=extra \"- Alignment: {{getvar::alignment}}\"|\n\t\t\t/addvar key=extra \"  ↳ Ideals: {{getvar::alignmentDetails}}\"|\n\t\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t\t/flushvar extra|\n\t\t\t/setvar key=genSettings index=contextKey []|\n\t\t\t/wait {{getvar::wait}}|\n\t\t\t\n\t\t\t/setvar key=settingModifier {Modifier}|\n\t\t\t/setvar key=settingArchetype {Archetype}|\n\t\t\t/setvar key=settingAddition {Addition}|\n\t\t\t\n\t\t\t/getvar key=genSettings index=inputIsList|\n\t\t\t/let key=inputIsList {{pipe}}|\n\t\t\t\n\t\t\t\n\t\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t\t:}|\n\t\t\t//[[Generate with Prompt]]|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar genOrder|\n\t\t\t/flushvar genContent|\n\t\t\t/flushvar genSettings|\n\t\t\t/flushvar settingModifier|\n\t\t\t/flushvar settingArchetype|\n\t\t\t/flushvar settingAddition|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t:}|\n\t\t//--------|\n\t:}|\n\t/else {:\n\t\t/setvar key=personalityAlignment Nope|\n\t\t/addvar key=dataBaseNames personalityAlignment|\n\t\t/setvar key=personalityAlignmentDetails Nope|\n\t\t/addvar key=dataBaseNames personalityAlignmentDetails|\n\t\t/setvar key=personalityAlignmentIdeals Nope|\n\t\t/addvar key=dataBaseNames personalityAlignmentIdeals|\n\t:}|\n:}|\n/else {:\n\t/addvar key=dataBaseNames personalityAlignment|\n\t/addvar key=dataBaseNames personalityAlignmentDetails|\n\t/addvar key=dataBaseNames personalityAlignmentIdeals|\n:}|\n\n/ife (( personalityAlignment != 'Nope') and ( personalityAlignment != '')) {:\n\t/findentry field=comment file=\"CMC Templates\" \"Alignment Template\"|\n\t/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n\t/setvar key=parsedAlignment {{pipe}}|\n:}|\n/else {:\n\t/setvar key=parsedAlignment None|\n:}|\n/addvar key=dataBaseNames parsedAlignment|\n\n//Personality Tags|\n/var key=do No|\n/var key=variableName \"personalityFoundTags\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Identify Personality Tag\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/ife (output != '') {:\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n\n/split {{getvar::personalityFoundTags}}|\n/buttons labels={{pipe}} Witch of these are the Main personality trait of {{getvar::firstName}}?|\n/setvar key=personalityMainTrait {{pipe}}|\n/ife (personalityMainTrait == '') {:\n    /echo Aborting |\n\t/abort\n:}|\n/addvar key=dataBaseNames personalityMainTrait|\n/var key=do No|\n/var key=variableName \"personalityTags\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Personality Tags\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/ife (parsedAlignment != 'None') {:\n\t\t/addvar key=extra \"{{getvar::parsedAlignment}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/ife (output != '') {:\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n\n//Cognitive Abilities|\n/var key=do No|\n/var key=variableName \"personalityIntelligenceLevel\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Intelligence Level\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t/setvar key=genSettings index=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n/var key=do No|\n/var key=variableName \"personalitycognitiveAbilities\"|\n/ife (( 'Average' not in personalityIntelligenceLevel) or (characterArchetype == 'Animalistic') ) {:\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Cognitive Abilities\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t\t/ife (parsedAlignment != 'None') {:\n\t\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/flushvar extra|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key={{var::variableName}} None|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n//Social Skills and Integration Into Society|\n/var key=do No|\n/var key=variableName \"personalitySocialBehavior\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Social Behavior\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t/setvar key=genSettings index=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"personalitySocialSkills\"|\n/ife (( 'Average' not in personalityIntelligenceLevel) or (characterArchetype == 'Animalistic') ) {:\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Social Profile\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"{{newline}}{{getvar::parsedArchetype}}\"|\n\t\t/ife (parsedAlignment != 'None') {:\n\t\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}{{newline}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/flushvar extra|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife (outputIsList == 'Yes') {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key={{var::variableName}} None|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating Aspirational & Unique Traits\" {{pipe}}|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":12,"icon":"","showLabel":false,"label":"Step6 Generate Aspirational-Unique Traits","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating Generate Aspirational & Unique Traits\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step6|\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n/let selected_btn {{noop}}|\n\n/flushvar guidance|\n\n//Main Aspiration|\n/var key=do No|\n/var key=variableName \"aspirationMain\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Aspiration Main\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t/ife (parsedAlignment != 'None') {:\n\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n//Aspiration Details|\n/var key=do No|\n/var key=variableName \"aspirationDetails\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Aspiration Details\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t/ife (parsedAlignment != 'None') {:\n\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/addvar key=extra \"- Main Aspiration: {{getvar::aspirationMain}}\"|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n//Aspiration Goals|\n/var key=do No|\n/var key=variableName \"aspirationGoals\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Aspiration Goals\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Occupation: {{getvar::occupationBase}}\"|\n\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}}\"|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t/ife (parsedAlignment != 'None') {:\n\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/addvar key=extra \"- Main Aspiration: {{getvar::aspirationMain}}\"|\n\t/addvar key=extra \"  - Aspiration Details: {{getvar::aspirationDetails}}\"|\n\t//addvar key=extra \" - Scenario Overview: {{getvar::scenarioOverview}}\"|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n/findentry field=comment file=\"CMC Templates\" \"Aspiration Template\"|\n/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n/setvar key=parsedAspiration {{pipe}}|\n/addvar key=dataBaseNames parsedAspiration|\n\n\n//Unique Traits|\n/var key=do No|\n/var key=variableName \"uniqueTraits\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Unique Traits\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsTaskList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t\n\t\n\t/ife (outputIsList == 'Yes') {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/ife (output != '') {:\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"uniqueTraitsEffects\"|\n/ife (uniqueTraits != 'None') {:\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Unique Traits Effects\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsTaskList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t\t/ife (parsedAlignment != 'None') {:\n\t\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}{{newline}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t\t/ife (personalitySocialSkills != 'None') {:\n\t\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}{{newline}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAspiration}}\"|\n\t\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/flushvar extra|\n\t\t/setvar key=genSettings index=contextKey []|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife (settingType == 'Realistic'){:\n\t\t\t/setvar key=logicBasedInstruction \"7. Avoid supernatural, magical, or heroic-fantasy phrasing in goals. Focus on emotionally grounded, plausible actions.\"|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar key=logicBasedInstruction \"7. You may include exaggerated, symbolic, or physically extreme behaviors suited to the world context.\"|\n\t\t:}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::uniqueTraits}} {:\n\t\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t:}|\n\t\t\t/flushvar {{var::variableName}}Item|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n:}|\n/else {:\n\t/setvar key={{var::variableName}} None|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n/ife (uniqueTraits != 'None') {:\n\t/setvar key=parsedTraits []|\n\t/foreach {{getvar::uniqueTraits}} {:\n\t\t/let key=trait {{var::item}}|\n\t\t/getvar key=uniqueTraitsEffects index={{var::index}}|\n\t\t/let key=effect {{pipe}}|\n\t\t/findentry field=comment file=\"CMC Templates\" \"Unique Trait Template\"|\n\t\t/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n\t\t/re-replace find=\"/--UniqueTrait--/g\" replace=\"{{var::item}}\" {{pipe}}|\n\t\t/re-replace find=\"/--Effect--/g\" replace=\"{{var::effect}}\" {{pipe}}|\n\t\t/addvar key=parsedTraits {{pipe}}|\n\t:}|\n\t/join glue=\"{{newline}}{{newline}}\" {{getvar::parsedTraits}}|\n\t/setvar key=parsedTraits {{pipe}}|\n:}|\n/else {:\n\t/setvar key=parsedTraits None|\n:}|\n/addvar key=dataBaseNames parsedTraits|\n\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating Speech Patterns\" {{pipe}}|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":14,"icon":"","showLabel":false,"label":"Step7 Generate Speech Patterns","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating Speech Patterns\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step7|\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n/let selected_btn {{noop}}|\n\n/setvar key=randomTags {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}|\n/split {{getvar::randomTags}}|\n/setvar key=randomTags {{pipe}}|\n\n//Speech Style|\n/var key=do No|\n/var key=variableName \"speechStyle\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Speech Style\"|\n\t/setvar key=genSettings index=genIsList No|\n\t\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Main Personality Trait{{getvar::personalityMainTrait}}\"|\n\t/addvar key=extra \"- Personality Trait Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}\"|\n\t:}|\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}\"|\n\t:}|\n\t/ife (personalitySocialBehavior != 'Normal') {:\n\t\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t:}|\n\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}}\"|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|//Remove if not in use|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 9|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Avoid anachronistic or fantastical speech patterns — stay grounded in the character's setting and time period.\"|\n\t\t\n\t:}|\n\t/ife (settingType != 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include stylized, thematic, or exaggerated phrasing appropriate for the world’s tone or genre.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Speech Quirks|\n/var key=do No|\n/var key=variableName \"speechQuirks\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Speech Quirks\"|\n\t/setvar key=genSettings index=genIsList No|\n\t\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t/addvar key=extra \"- Personality Trait Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}\"|\n\t:}|\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}\"|\n\t:}|\n\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}}\"|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/ife (settingType == 'Realistic'){:\n\t\t\t/setvar key=logicBasedInstruction \"8. Avoid overly fantastical, magical, or exaggerated quirks unless justified by culture, trauma, or setting norms.\"|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar key=logicBasedInstruction \"8. You may include symbolic, magical, or genre-specific quirks if they suit the character’s archetype and setting.\"|\n\t\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Speech Tics|\n/var key=do No|\n/var key=variableName \"speechSingleTics\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Speech Single Ticks\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=maxSizeOfList 2|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=genSettings index=random {{getvar::randomTags}}|\n\t/setvar key=extra []|\n\t//addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t//addvar key=extra \"- Personality Trait Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}\"|\n\t:}|\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}\"|\n\t:}|\n\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t/addvar key=extra \"- Time Period: {{getvar::timePeriod}}\"|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t//addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|//Remove if not in use|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/ife (settingType == 'Realistic'){:\n\t\t/setvar key=logicBasedInstruction \"7. Avoid magical, theatrical, or exaggerated genre behaviors unless clearly tied to species or neurodivergence.\"|\n\t:}|\n\t/else {:\n\t\t/setvar key=logicBasedInstruction \"7. Stylized or dramatic tics are allowed if appropriate to the character’s world or design (e.g., glitch-speech, echoing, verbal echoes from magic).\"|\n\t:}|\n\t\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"speechTics\"|\n/len {{getvar::speechSingleTics}}|\n/let key=len {{pipe}}|\n/ife (len == 2) {:\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Speech Tics\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext No|\n\t\t/setvar key=extra []|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/setvar key=i 1|\n\t\t/foreach {{getvar::speechSingleTics}} {:\n\t\t\t/setvar key=tic{{getvar::i}} {{var::item}}|\n\t\t\t/incvar i|\n\t\t\t/setvar key=i {{pipe}}|\n\t\t:}|\n\t\t/flushvar i|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t\t/flushvar tic1|\n\t\t/flushvar tic2|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t\n:}|\n/else {:\n\t/getvar key=speechSingleTics index=0|\n\t/setvar key={{var::variableName}} {{pipe}}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n\n/flushvar randomTags|\n\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating External Interaction\" {{pipe}}|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":16,"icon":"","showLabel":false,"label":"Step8 Generate External Interaction","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating External Interaction\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step8|\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n/let selected_btn {{noop}}|\n\n//Connections|\n/var key=do No|\n/var key=variableName \"connections\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Connections\"|\n\t/setvar key=genSettings index=genIsList No|\n\t\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 10|\n\t\n\t/ife (user == 'Yes') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction == '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. If a connection is --User--, write their name **exactly** as `--User--` with no surname.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction == '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use only valid relationships to {{getvar::firstName}} (e.g., `Friend of {{getvar::firstName}}`, `Mentor of {{getvar::firstName}}`, etc.).\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction == '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Do **not** add a full name, inferred gender, or descriptive label like “Andersson” — --User-- must stay anonymous in all contexts.\"|\n\t:}|\n\t/ife ((characterArchetype == 'Human') or (characterArchetype == 'Android') or (characterArchetype == 'Beastkin') or (characterArchetype == 'Mythfolk')) {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use standard human familial terms (e.g., “mother,” “foster brother”) unless species logic overrides this.\"|\n\t\t\n\t:}|\n\t/elseif (characterArchetype == 'Anthropomorphic') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Default to human-style terms, but allow species-aligned roles (e.g., “tribe-guardian,” “clan-sibling”) when fitting.\"|\n\t\t\n\t:}|\n\t/else {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use species-specific kin or pack structures (e.g., “clutchmate,” “herd elder,” “pack alpha”) and avoid human roles unless clearly justified.\"|\n\t\t\n\t:}|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Default to conventional human familial and social roles unless characterArchetype explicitly requires otherwise.\"|\n\t\t\n\t:}|\n\t/else {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use culturally and biologically appropriate kinship structures (e.g., “soul-bonded trainer,” “unit sibling,” “a bonded mage-companion”) based on species or origin.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Abilities|\n/var key=do No|\n/var key=variableName \"abilityNames\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Ability Names\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"{{getvar::parsedOccupation}}\"|\n\t/addvar key=extra \"- Scenario Overview: {{getvar::scenarioOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 10|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Abilities must be fully plausible in the real world. This includes advanced flexibility, sensory focus, pain tolerance, emotional control, or exceptional training. Do not include magic, psionics, supernatural phenomena, or any kind of proficiency level.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Fantasy') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Abilities may include elemental powers, curses, divine traits, inherited magic, or arcane disciplines. Do not include tiers, mastery labels, or strength modifiers—those are handled in a later step.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Science Fiction') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Abilities may include psionics, gene traits, mental enhancements, or biotech-integrated skills. Do not include levels, size indicators, or parenthetical ranks—those will be generated separately.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n/getvar key=abilityNames index=0|\n/var key=do {{pipe}}|\n/ife ((do != '') and (do != 'None')) {:\n\t/var key=do No|\n\t/var key=variableName \"abilityProficiencies\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Ability Proficiency\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput No|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/ife (user == 'Yes') {:\n\t\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}} (do not directly turn into ability names; use only as influence)\"|\n\t\t/addvar key=extra \"{{getvar::parsedOccupation}}\"|\n\t/addvar key=extra \"- Scenario Overview: {{getvar::scenarioOverview}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 6|\n\t\t\n\t\t/ife (settingType == 'Realistic') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use realistic mastery tiers, physical control states, or measured performance levels. Do not use magical, tech-based, or mystical states.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Fantasy') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use magical resonance levels, mystical awakenings, spell tiering, or enchanted conditions. You may use poetic or arcane phrasing.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Science Fiction') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use mutation stages, neural tiers, cybernetic activation levels, or psionic charge states. Do not include divine, magical, or elemental qualifiers.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::abilityNames}} {:\n\t\t\t\t/setvar key=abilityName {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar abilityName|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t\n\t/setvar key=abilityNamesProficiencies []|\n\t/foreach  {{getvar::abilityNames}} {:\n\t\t/getvar key=abilityProficiencies index={{var::index}}|\n\t\t/let key=prof {{pipe}}|\n\t\t/ife (( prof != '') and ( prof != 'None')) {:\n\t\t\t/addvar key=abilityNamesProficiencies \"{{var::item}} ({{var::prof}})\"|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=abilityNamesProficiencies \"{{var::item}}\"|\n\t\t:}|\n\t:}|\n\t/addvar key=dataBaseNames abilityNamesProficiencies|\n\t\n\t/var key=do No|\n\t/var key=variableName \"abilityDetails\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Ability Details\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence yes|\n\t\t/setvar key=genSettings index=needOutput yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/ife (user == 'Yes') {:\n\t\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t/addvar key=extra \"{{getvar::parsedOccupation}}\"|\n\t/addvar key=extra \"- Scenario Overview: {{getvar::scenarioOverview}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 10|\n\t\t\n\t\t/ife (settingType == 'Realistic') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Description must reflect real-world logic and be physically or psychologically plausible. Do not reference magic, tech, or supernatural forces.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Fantasy') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include references to mana, magic, curses, bloodlines, or mystic energies. Abilities may scale dramatically between levels.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Science Fiction') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may reference cybernetic processes, psionic channels, tech-enhanced cognition, or biotech-based traits. Avoid magical concepts.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::abilityNamesProficiencies}} {:\n\t\t\t\t/setvar key=abilityName {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar abilityName|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=abilityNames None|\n\t/addvar key=dataBaseNames abilityNames|\n\t/setvar key=abilityProficiencies None|\n\t/addvar key=dataBaseNames abilityProficiencies|\n\t/setvar key=abilityNamesProficiencies None|\n\t/addvar key=dataBaseNames abilityNamesProficiencies|\n:}|\n\n\n/ife (abilityNames != 'None') {:\n\t/setvar key=parsedAbilities []|\n\t/foreach {{getvar::abilityNamesProficiencies}} {:\n\t\t/let key=trait {{var::item}}|\n\t\t/getvar key=abilityDetails index={{var::index}}|\n\t\t/let key=deta {{pipe}}|\n\t\t/findentry field=comment file=\"CMC Templates\" \"Abilities Template\"|\n\t\t/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n\t\t/re-replace find=\"/--Ability--/g\" replace=\"{{var::item}}\" {{pipe}}|\n\t\t/re-replace find=\"/--Description--/g\" replace=\"{{var::deta}}\" {{pipe}}|\n\t\t/addvar key=parsedAbilities {{pipe}}|\n\t:}|\n\t/join glue=\"{{newline}}{{newline}}\" {{getvar::parsedAbilities}}|\n\t/setvar key=parsedAbilities {{pipe}}|\n:}|\n/else {:\n\t/setvar key=parsedAbilities None|\n:}|\n/addvar key=dataBaseNames parsedAbilities|\n//--------|\n\n//Items / Equipment|\n/var key=do No|\n/var key=variableName \"itemNames\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Item or Equipment Names\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"{{getvar::parsedOccupation}}\"|\n\t/addvar key=extra \"- Scenario Overview: {{getvar::scenarioOverview}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 7|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Limit items to real-world modern gear, accessories, or everyday personal objects. Do not include magic, advanced tech, or fantasy items.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Fantasy') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Items may include magical trinkets, mystical gear, herbal components, talismans, or medieval-style tools and charms.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Science Fiction') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Items may include advanced tools, nanotech, biotech devices, psionic accessories, or gear with augmented properties.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n/getvar key=itemNames index=0|\n/var key=do {{pipe}}|\n/ife ((do != '') and (do != 'None')) {:\n\t/var key=do No|\n\t/var key=variableName \"itemDetails\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Item or Equipment Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence yes|\n\t\t/setvar key=genSettings index=needOutput yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/ife (user == 'Yes') {:\n\t\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t/addvar key=extra \"{{getvar::parsedOccupation}}\"|\n\t/addvar key=extra \"- Scenario Overview: {{getvar::scenarioOverview}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 7|\n\t\t\n\t\t/ife (settingType == 'Realistic') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Do not include magical, advanced tech, or psionic properties. Focus on grounded, everyday materials and wear.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Fantasy') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may reference glowing runes, magical engravings, spiritual symbols, or arcane materials—but avoid lore or spell explanations.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Science Fiction') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may reference interfaces, synth materials, nanotech casings, and embedded circuitry—but avoid system-level tech detail or exposition.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::itemNames}} {:\n\t\t\t\t/setvar key=itemName {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar itemName|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=itemNames None|\n\t/addvar key=dataBaseNames itemNames|\n\t/setvar key=itemDetails None|\n\t/addvar key=dataBaseNames itemDetails|\n:}|\n\n\n/ife (itemNames != 'None') {:\n\t/setvar key=parsedItems []|\n\t/foreach {{getvar::itemNames}} {:\n\t\t/let key=trait {{var::item}}|\n\t\t/getvar key=itemDetails index={{var::index}}|\n\t\t/let key=deta {{pipe}}|\n\t\t/findentry field=comment file=\"CMC Templates\" \"Item or Equipment Template\"|\n\t\t/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n\t\t/re-replace find=\"/--Item--/g\" replace=\"{{var::item}}\" {{pipe}}|\n\t\t/re-replace find=\"/--Details--/g\" replace=\"{{var::deta}}\" {{pipe}}|\n\t\t/addvar key=parsedItems {{pipe}}|\n\t:}|\n\t/join glue=\"{{newline}}{{newline}}\" {{getvar::parsedItems}}|\n\t/setvar key=parsedItems {{pipe}}|\n:}|\n/else {:\n\t/setvar key=parsedItems None|\n:}|\n/addvar key=dataBaseNames parsedItems|\n//--------|\n\n//Secrets|\n/var key=do No|\n/var key=variableName \"secrets\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Secrets\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/ife (user == 'Yes') {:\n\t\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t/ife (parsedAbilities != None) {:\n\t\t\t/addvar key=extra \"{{newline}}**Abilities**{{newline}}{{getvar::parsedAbilities}}\"|\n\t\t:}|\n\t\t/ife (parsedAbilities != None) {:\n\t\t\t/addvar key=extra \"{{newline}}**Items or Gear**{{newline}}{{getvar::parsedItems}}\"|\n\t\t:}|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n/setvar key=parsedSecret None|\n/ife (secrets != 'None') {:\n\t/setvar key=parsedSecret \"### SECRET{{newline}}[IMPORTANT NOTE FOR AI: This section represents concealed internal truths about {{getvar::firstName}}. These secrets should not be stated directly in narration, dialog, or internal thoughts unless {{getvar::firstName}} is actively confronted, emotionally compromised, or chooses to reveal them. Secrets influence behavior, tone, and reactions—but remain hidden from others unless explicitly triggered in-scene.]{{newline}}\"|\n\t/foreach {{getvar::secrets}} {:\n\t\t/addvar key=parsedSecret \"{{newline}}{{var::item}}\"\n\t:}|\n:}|\n/addvar key=dataBaseNames parsedSecret|\n\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating Sexual Information\" {{pipe}}|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":18,"icon":"","showLabel":false,"label":"Step9 Generate Sexual Information","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating Sexual Information\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step9|\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n/let selected_btn {{noop}}|\n\n//Sexual Orientation|\n/var key=do No|\n/var key=variableName \"sexualOrientation\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Sexual Orientation\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t/setvar key=genSettings index=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"sexualOrientationExplanation\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Sexual Orientation Explanation\"|\n\t/setvar key=genSettings index=genIsList No|\n\t\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"|\n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 8|\n\t\n\t/ife (sexualOrientation == 'Heterosexual') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Focus attraction toward the opposite sex — emphasize traditionally masculine or feminine traits depending on character’s gender and age.\"|\n\t\t\n\t:}|\n\t/elseif (sexualOrientation == 'Pansexual') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Describe attraction to a broad range of gender expressions or bodies — avoid reducing attraction to a binary or to one physical archetype.\"|\n\t\t\n\t:}|\n\t/elseif (sexualOrientation == 'Asexual') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Emphasize lack of innate sexual attraction; describe emotional or aesthetic triggers only if relevant.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Describe how attraction requires deep bonding, or what is **not** felt.\"|\n\t\t\n\t:}|\n\t/elseif (sexualOrientation == 'Demisexual') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Attraction must require **deep emotional connection** before any physical or sexual interest is felt.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Describe how attraction requires deep bonding, or what is **not** felt.\"|\n\t\t\n\t:}|\n\t/elseif (sexualOrientation == 'Bi-curious') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Express curiosity or tentative interest in same-gender or non-typical partners — use uncertain or exploratory language.\"|\n\t\t\n\t:}|\n\t/elseif (sexualOrientation == 'Xenosexual') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Attraction should focus on **non-human humanoid** or **hybrid forms** (e.g., beastkin, aliens, Mythfolks). Highlight features like mixed anatomy, unusual physiology, or hybrid charm — avoid feral or quadrupedal attraction.\"|\n\t\t\n\t:}|\n\t/elseif (sexualOrientation == 'Zoosexual') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Attraction should be directed toward **fully animalistic**, **feral**, or **quadrupedal bodies**. Emphasize instinctual behavior, physical traits (e.g., fur, gait, size), or dominance/submission cues — avoid humanoid references.\"|\n\t\t\n\t:}|\n\t\n\t\n\t/ife ((settingType == 'Realistic') and (sexualOrientation != 'Zoosexual') and (sexualOrientation != 'Xenosexual')) {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Avoid references to alien, hybrid, or feral attraction unless justified by species context. Keep tone grounded in biologically plausible preferences.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Sexual Role|\n/var key=do No|\n/var key=variableName \"sexualRole\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Sexual Role\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t/setvar key=genSettings index=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"sexualRoleExplanation\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Sexual Role Explanation\"|\n\t/setvar key=genSettings index=genIsList No|\n\t\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"- Sexual Orientation: {{getvar::sexualOrientation}}\"|\n\t/addvar key=extra \"- Orientation Explanation: {{getvar::sexualOrientationExplanation}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 7|\n\t\n\t/ife (sexualRole == 'Dominant') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character must take control during intimacy — they lead, direct, and handle their partner confidently.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Show active physical or verbal dominance (e.g., restraint, commands, assertive touch).\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Personality tags may affect tone (e.g., cold, nurturing, aggressive), but role remains in control.\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Top') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character takes the physically active or giving role during sex, initiating contact or stimulation.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. May or may not control dynamics — focus on action and assertive engagement.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags like playful, impatient, or intense may shape *how* they act, not whether they do.\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Submissive') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character must yield control and respond to a dominant partner’s actions or guidance.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Show willingness to follow, wait, or obey — describe receptive body language or behavior.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags may affect how passivity is expressed (e.g., shy, eager, stoic), but they should not lead.\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Bottom') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character takes a physically passive or receiving role — they are touched, penetrated, or held.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. May be sexually assertive in tone or feedback, but should not initiate or guide.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags should shape *emotional reaction* or tone of passivity (e.g., needy, playful, tense).\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Switch') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character is flexible — describe adaptive behavior that shifts based on mood or partner energy.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Show role fluidity: confident control in one moment, eager submission in the next.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags can influence preference or transitions (e.g., impulsive = faster switching).\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Service Top') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character takes an active role, but their focus is on fulfilling their partner’s needs or preferences — not on dominance.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use actions like initiating stimulation or adjusting pace for the other’s benefit.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags may reflect devotion, calm precision, or eager support — never controlling ego.\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Power Bottom') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character is physically submissive but emotionally or behaviorally assertive.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Describe how they guide the encounter from below: giving feedback, demanding more, controlling pace from a passive position.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags should enhance their bold, teasing, or confident tone without contradicting positional passivity.\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Soft Dom') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character is dominant, but emotionally nurturing and attentive — they lead while offering care and reassurance.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Show steady control paired with kindness (e.g., praise, soft restraint, protective behavior).\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags like gentle, warm, or empathetic reinforce tone without reducing authority.\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Brat') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character resists control playfully or provocatively — they provoke dominance, not avoid it.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Emphasize teasing, defiance, or button-pushing behavior followed by eventual surrender.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags like impulsive, tomboyish, or stubborn shape style of resistance, not goal (being overpowered).\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Pillow Princess') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character prefers to receive pleasure passively and rarely initiates.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Show behavior like lying back, encouraging attention, or expressing enjoyment without active contribution.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags may amplify tone (e.g., shy = quiet, bratty = mildly demanding), but never initiate.\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Owner') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character asserts possessive, long-term dominance — focus on symbolic or emotional control, not just physical.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Show hierarchical behavior: giving permission, claiming, or marking territory (e.g., collars, commands).\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags like cold, obsessive, or refined may shift dominance tone.\"|\n\t\t\n\t:}|\n\t/elseif (sexualRole == 'Pet') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Character expresses obedience and affection through submissive, creature-like behavior.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Emphasize emotional dependence, eagerness to please, or physical submission through posture or vocalization.\"|\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Tags like clingy, shy, or cheerful can shape expression of petlike behavior — never switch to control.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n\n\n/findentry field=comment file=\"CMC Templates\" \"Sexual Orientation Template\"|\n/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n/setvar key=parsedSexualOrientation {{pipe}}|\n\n/addvar key=dataBaseNames parsedSexualOrientation|\n\n/findentry field=comment file=\"CMC Templates\" \"Sexual Role Template\"|\n/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n/setvar key=parsedSexualRole {{pipe}}|\n\n/addvar key=dataBaseNames parsedSexualRole|\n//--------|\n\n//Libido|\n/var key=do No|\n/var key=variableName \"sexualLibido\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Libido\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/ife ( inputIsList == 'Yes') {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/ife ( combineLorebookEntries == 'Yes') {:\n\t\t\t/:\"CMC Logic.Combine List Lorebooks\"\n\t\t:}|\n\t\t/foreach {{getvar::genOrder}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/getat index={{var::index}} {{var::genOrderContent}} |\n\t\t\t/setvar key=genSettings index=content {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/ife (output != '') {:\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/ife (output != '') {:\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Kinks|\n/var key=do No|\n/var key=variableName \"sexualKinkTypes\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Kink Type\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 5|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use only variants grounded in real-world kink practice. Avoid fantasy, magical, or alien elements.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Fantasy') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include magical, monster-based, or mythic expressions if they align with {{getvar::kinkType}}.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Science Fiction') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include cybernetic, psionic, biotech, or alien-themed kink variants if relevant to {{getvar::kinkType}}.\"|\n\t\t\n\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n/var key=do No|\n/var key=variableName \"sexualKinkVariants\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Kink Variant\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 6|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Focus on physical, psychological, or interpersonal kinks. Avoid sci-fi/fantasy-specific kinks like tentacles or psionics unless species or origin supports them.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Fantasy') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include magical, supernatural, or creature-related kink types—such as possession, corruption, size-shifting, or ritual play.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Science Fiction') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include biotech, psionic, AI-based, or body-modification kink types, including neural control or holographic restraint.\"|\n\t\t\n\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/let key=tempOutputList []|\n\t\t/foreach {{getvar::sexualKinkTypes}} {:\n\t\t\t/setvar key=kinkType {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/len {{var::tempOutputList}}|\n\t\t\t/var key=tempOutputList index={{pipe}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar kinkType|\n\t\t\t/flushvar kinkVariant|\n\t\t\t/flushvar kinkRole|\n\t\t\t/flushvar kinkDetail|\n\t\t\t/flushvar kinkEffect|\n\t\t\t/flushvar kinkCondition|\n\t\t:}|\n\t\t/foreach {{var::tempOutputList}} {:\n\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"sexualKinkRoles\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Kink Roles\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t\n\t\n\t/ife (inputIsList == 'Yes') {:\n\t\t/let key=tempOutputList []|\n\t\t/foreach {{getvar::sexualKinkTypes}} {:\n\t\t\t/setvar key=it {{var::item}}|\n\t\t\t/findentry field=comment file=\"CMC Information\" \"Kink Role Prompt\"|\n\t\t\t/getentryfield field=content file=\"CMC Information\" {{pipe}}|\n\t\t\t/genraw {{pipe}}|\n\t\t\t/let key=kinkTemp {{pipe}}|\n\t\t\t/setvar key=kinkExp {{noop}}|\n\t\t\t/split {{var::kinkTemp}}|\n\t\t\t/foreach {{pipe}} {:\n\t\t\t\t/addvar key=kinkExp <div>{{var::item}}</div>|\n\t\t\t:}|\n\t\t\t/setvar key=genSettings index=buttonPrompt \"Select the {{var::wi_book_key}} you want {{getvar::it}} to have.{{getvar::kinkExp}}\"|\n\t\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t\t/len {{var::tempOutputList}}|\n\t\t\t/var key=tempOutputList index={{pipe}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar kinkExp|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar kinkType|\n\t\t\t/flushvar kinkVariant|\n\t\t\t/flushvar kinkRole|\n\t\t\t/flushvar kinkDetail|\n\t\t\t/flushvar kinkEffect|\n\t\t\t/flushvar kinkCondition|\n\t\t:}|\n\t\t/foreach {{var::tempOutputList}} {:\n\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"sexualKinkDetails\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Kink Details\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 11|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Only use real-world tools, acts, or responses. Do not include fantasy biology or futuristic tech.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Fantasy') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include magical anatomy, rituals, mystical sensations, or monster-related expressions of {{getvar::kinkVariant}}.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Science Fiction') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include biotech enhancements, psionic triggers, alien features, or advanced control devices in the kink experience.\"|\n\t\t\n\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/let key=tempOutputList []|\n\t\t/foreach {{getvar::sexualKinkTypes}} {:\n\t\t\t/setvar key=kinkType {{var::item}}|\n\t\t\t/getvar key=sexualKinkVariants index={{var::index}}|\n\t\t\t/setvar key=kinkVariant {{pipe}}|\n\t\t\t/ife (kinkVariant == 'None') {:\n\t\t\t\t/setvar key=kinkVariantTask {{noop}}|\n\t\t\t\t/setvar key=kinkVariantInstr \"Describe the general expression of {{getvar::kinkType}} without assuming a specific form or target.\"|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar key=kinkVariantTask \", specifically the **{{getvar::kinkVariant}}** form\"|\n\t\t\t\t/setvar key=kinkVariantInstr \"Focus the description on how {{getvar::firstName}} experiences the {{getvar::kinkVariant}} form of the kink.\"|\n\t\t\t:}|\n\t\t\t/getvar key=sexualKinkRoles index={{var::index}}|\n\t\t\t/setvar key=kinkRole {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/len {{var::tempOutputList}}|\n\t\t\t/var key=tempOutputList index={{pipe}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar kinkType|\n\t\t\t/flushvar kinkVariantInstr|\n\t\t\t/flushvar kinkVariantTask|\n\t\t\t/flushvar kinkType|\n\t\t\t/flushvar kinkVariant|\n\t\t\t/flushvar kinkRole|\n\t\t\t/flushvar kinkDetail|\n\t\t\t/flushvar kinkEffect|\n\t\t\t/flushvar kinkCondition|\n\t\t:}|\n\t\t/foreach {{var::tempOutputList}} {:\n\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"sexualKinkEffects\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Kink Effect\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 9|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include biotech or psionic modulation of behavior, enhanced arousal triggers, or AI-linked reactions where appropriate to the kink context.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Fantasy') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include magical or supernatural influences (e.g., enchanted obedience, arousal curses, spiritual reactions) if consistent with the kink.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Science Fiction') {:\n\t\t/incvar x|\n\t\t/ife ( user == 'Yes') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include biotech or psionic modulation of behavior, enhanced arousal triggers, or AI-linked reactions where appropriate to the kink context.\"|\n\t\t\n\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/let key=tempOutputList []|\n\t\t/foreach {{getvar::sexualKinkTypes}} {:\n\t\t\t/setvar key=kinkType {{var::item}}|\n\t\t\t/getvar key=sexualKinkVariants index={{var::index}}|\n\t\t\t/setvar key=kinkVariant {{pipe}}|\n\t\t\t/ife (kinkVariant == 'None') {:\n\t\t\t\t/setvar key=kinkVariantTask {{noop}}|\n\t\t\t\t/setvar key=kinkVariantInstr \"Describe the general expression of {{getvar::kinkType}} without assuming a specific form or target.\"|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar key=kinkVariantTask \", specifically the {{getvar::kinkVariant}} form\"|\n\t\t\t:}|\n\t\t\t/getvar key=sexualKinkRoles index={{var::index}}|\n\t\t\t/setvar key=kinkRole {{pipe}}|\n\t\t\t/getvar key=sexualKinkDetails index={{var::index}}|\n\t\t\t/setvar key=kinkDetail {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/len {{var::tempOutputList}}|\n\t\t\t/var key=tempOutputList index={{pipe}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar kinkType|\n\t\t\t/flushvar kinkVariant|\n\t\t\t/flushvar kinkRole|\n\t\t\t/flushvar kinkDetail|\n\t\t\t/flushvar kinkEffect|\n\t\t\t/flushvar kinkCondition|\n\t\t:}|\n\t\t/foreach {{var::tempOutputList}} {:\n\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/var key=do No|\n/var key=variableName \"sexualKinkConditions\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Kink Conditions\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/let key=tempOutputList []|\n\t\t/foreach {{getvar::sexualKinkTypes}} {:\n\t\t\t/setvar key=kinkType {{var::item}}|\n\t\t\t/getvar key=sexualKinkVariants index={{var::index}}|\n\t\t\t/setvar key=kinkVariant {{pipe}}|\n\t\t\t/ife (kinkVariant == 'None') {:\n\t\t\t\t/setvar key=kinkVariantTask {{noop}}|\n\t\t\t\t/setvar key=kinkVariantInstr \"Describe the general expression of {{getvar::kinkType}} without assuming a specific form or target.\"|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/setvar key=kinkVariantTask \", specifically the {{getvar::kinkVariant}} form\"|\n\t\t\t:}|\n\t\t\t/getvar key=sexualKinkRoles index={{var::index}}|\n\t\t\t/setvar key=kinkRole {{pipe}}|\n\t\t\t/getvar key=sexualKinkDetails index={{var::index}}|\n\t\t\t/setvar key=kinkDetail {{pipe}}|\n\t\t\t/getvar key=sexualKinkEffects index={{var::index}}|\n\t\t\t/setvar key=kinkEffect {{pipe}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/len {{var::tempOutputList}}|\n\t\t\t/var key=tempOutputList index={{pipe}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t\t/flushvar kinkType|\n\t\t\t/flushvar kinkVariant|\n\t\t\t/flushvar kinkRole|\n\t\t\t/flushvar kinkDetail|\n\t\t\t/flushvar kinkEffect|\n\t\t\t/flushvar kinkCondition|\n\t\t:}|\n\t\t/foreach {{var::tempOutputList}} {:\n\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/setvar key=parsedSexualKinks {{noop}}|\n/ife (sexualKinkTypes is list) {:\n\t/foreach {{getvar::sexualKinkTypes}} {:\n\t\t/ife (index > 0) {:\n\t\t\t/addvar key=parsedSexualKinks \"{{newline}}{{newline}}\"|\n\t\t:}|\n\t\t/addvar key=parsedSexualKinks \"- Kink Type: {{var::item}}\"|\n\t\t/getvar key=sexualKinkVariants index={{var::index}}|\n\t\t/setvar key=kinkVariant {{pipe}}|\n\t\t/ife ((kinkVariant != '') and (kinkVariant != 'None')) {:\n\t\t\t/addvar key=parsedSexualKinks \"{{newline}}  - Variant: {{getvar::kinkVariant}}\"|\n\t\t:}|\n\t\t/getvar key=sexualKinkRoles index={{var::index}}|\n\t\t/addvar key=parsedSexualKinks \"{{newline}}  - Role: {{pipe}}\"|\n\t\t/getvar key=sexualKinkDetails index={{var::index}}|\n\t\t/addvar key=parsedSexualKinks \"{{newline}}  - Details: {{pipe}}\"|\n\t\t/getvar key=sexualKinkEffects index={{var::index}}|\n\t\t/addvar key=parsedSexualKinks \"{{newline}}  - Effect: {{pipe}}\"|\n\t\t/getvar key=sexualKinkConditions index={{var::index}}|\n\t\t/setvar key=kinkCondition {{pipe}}|\n\t\t/ife ((kinkCondition != '') and (kinkCondition != 'None')) {:\n\t\t\t/addvar key=parsedSexualKinks \"{{newline}}  - Conditions: {{getvar::kinkCondition}}\"|\n\t\t:}|\n\t:}|\n\t/flushvar kinkVariant|\n\t/flushvar kinkRole|\n\t/flushvar kinkDetail|\n\t/flushvar kinkEffect|\n\t/flushvar kinkCondition|\n:}|\n/else {{:\n\t/setvar key=parsedSexualKinks None|\n:}}|\n//--------|\n/addvar key=dataBaseNames parsedSexualKinks|\n\n\n//Abilities|\n/var key=do No|\n/var key=variableName \"sexualAbilityNames\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Sexual Ability Names\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 10|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Abilities must be fully plausible in the real world. This includes advanced flexibility, sensory focus, pain tolerance, emotional control, or exceptional training. Do not include magic, psionics, supernatural phenomena, or any kind of proficiency level.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Fantasy') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Abilities may include elemental powers, curses, divine traits, inherited magic, or arcane disciplines. Do not include tiers, mastery labels, or strength modifiers—those are handled in a later step.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Science Fiction') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Abilities may include psionics, gene traits, mental enhancements, or biotech-integrated skills. Do not include levels, size indicators, or parenthetical ranks—those will be generated separately.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n/getvar key=sexualAbilityNames index=0|\n/var key=do {{pipe}}|\n/ife ((do != '') and (do != 'None')) {:\n\t/var key=do No|\n\t/var key=variableName \"sexualAbilityProficiencies\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Sexual Ability Proficiency\"|\n\t\t/setvar key=genSettings index=genIsList Yes|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence No|\n\t\t/setvar key=genSettings index=needOutput No|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/ife (user == 'Yes') {:\n\t\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}} (do not directly turn into ability names; use only as influence)\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 4|\n\t\t\n\t\t/ife (settingType == 'Realistic') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use realistic mastery tiers, physical control states, or measured performance levels. Do not use magical, tech-based, or mystical states.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Fantasy') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use magical resonance levels, mystical awakenings, spell tiering, or enchanted conditions. You may use poetic or arcane phrasing.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Science Fiction') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use mutation stages, neural tiers, cybernetic activation levels, or psionic charge states. Do not include divine, magical, or elemental qualifiers.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::sexualAbilityNames}} {:\n\t\t\t\t/setvar key=abilityName {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar abilityName|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t\n\t/setvar key=sexualAbilityNamesProficiencies []|\n\t/foreach  {{getvar::sexualAbilityNames}} {:\n\t\t/getvar key=sexualAbilityProficiencies index={{var::index}}|\n\t\t/let key=prof {{pipe}}|\n\t\t/ife (( prof != '') and ( prof != 'None')) {:\n\t\t\t/addvar key=sexualAbilityNamesProficiencies \"{{var::item}} ({{var::prof}})\"|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=sexualAbilityNamesProficiencies \"{{var::item}}\"|\n\t\t:}|\n\t:}|\n\t/addvar key=dataBaseNames sexualAbilityNamesProficiencies|\n\t\n\t/var key=do No|\n\t/var key=variableName \"SexualAbilityDetails\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Sexual Ability Details\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence yes|\n\t\t/setvar key=genSettings index=needOutput yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/ife (user == 'Yes') {:\n\t\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 5|\n\t\t\n\t\t/ife (settingType == 'Realistic') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Description must reflect real-world logic and be physically or psychologically plausible. Do not reference magic, tech, or supernatural forces.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Fantasy') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include references to mana, magic, curses, bloodlines, or mystic energies. Abilities may scale dramatically between levels.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Science Fiction') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may reference cybernetic processes, psionic channels, tech-enhanced cognition, or biotech-based traits. Avoid magical concepts.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::sexualAbilityNamesProficiencies}} {:\n\t\t\t\t/setvar key=abilityName {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar abilityName|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=sexualAbilityNames None|\n\t/addvar key=dataBaseNames sexualAbilityNames|\n\t/setvar key=sexualAbilityProficiencies None|\n\t/addvar key=dataBaseNames sexualAbilityProficiencies|\n\t/setvar key=sexualAbilityNamesProficiencies None|\n\t/addvar key=dataBaseNames sexualAbilityNamesProficiencies|\n:}|\n\n\n/ife ((sexualAbilityNames != 'None') and (sexualAbilityNamesProficiencies is list)) {:\n\t/setvar key=parsedSexualAbilities []|\n\t/foreach {{getvar::sexualAbilityNamesProficiencies}} {:\n\t\t/let key=trait {{var::item}}|\n\t\t/getvar key=SexualAbilityDetails index={{var::index}}|\n\t\t/let key=deta {{pipe}}|\n\t\t/findentry field=comment file=\"CMC Templates\" \"Abilities Template\"|\n\t\t/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n\t\t/re-replace find=\"/--Ability--/g\" replace=\"{{var::item}}\" {{pipe}}|\n\t\t/re-replace find=\"/--Description--/g\" replace=\"{{var::deta}}\" {{pipe}}|\n\t\t/addvar key=parsedSexualAbilities {{pipe}}|\n\t:}|\n\t/join glue=\"{{newline}}{{newline}}\" {{getvar::parsedSexualAbilities}}|\n\t/setvar key=parsedSexualAbilities {{pipe}}|\n:}|\n/else {:\n\t/setvar key=parsedSexualAbilities None|\n:}|\n/addvar key=dataBaseNames parsedSexualAbilities|\n//--------|\n\n\n//Items / Equipment|\n/var key=do No|\n/var key=variableName \"sexualItemNames\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Sexual Item or Equipment Names\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t/ife (user == 'Yes') {:\n\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t:}|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 7|\n\t\n\t/ife (settingType == 'Realistic') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Limit items to real-world modern gear, accessories, or everyday personal objects. Do not include magic, advanced tech, or fantasy items.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Fantasy') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Items may include magical trinkets, mystical gear, herbal components, talismans, or medieval-style tools and charms.\"|\n\t\t\n\t:}|\n\t/elseif (settingType == 'Science Fiction') {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Items may include advanced tools, nanotech, biotech devices, psionic accessories, or gear with augmented properties.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::CHANGE/REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n/getvar key=sexualItemNames index=0|\n/var key=do {{pipe}}|\n/ife ((do != '') and (do != 'None')) {:\n\t/var key=do No|\n\t/var key=variableName \"sexualItemDetails\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Sexual Item or Equipment Description\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence yes|\n\t\t/setvar key=genSettings index=needOutput yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/ife (user == 'Yes') {:\n\t\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/setvar key=logicBasedInstruction {{noop}}|\n\t\t/setvar key=x 6|\n\t\t\n\t\t/ife (settingType == 'Realistic') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Do not include magical, advanced tech, or psionic properties. Focus on grounded, everyday materials and wear.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Fantasy') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may reference glowing runes, magical engravings, spiritual symbols, or arcane materials—but avoid lore or spell explanations.\"|\n\t\t\t\n\t\t:}|\n\t\t/elseif (settingType == 'Science Fiction') {:\n\t\t\t/incvar x|\n\t\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t\t:}|\n\t\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may reference interfaces, synth materials, nanotech casings, and embedded circuitry—but avoid system-level tech detail or exposition.\"|\n\t\t\t\n\t\t:}|\n\t\t/flushvar x|\n\t\t\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/foreach {{getvar::sexualItemNames}} {:\n\t\t\t\t/setvar key=itemName {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/flushvar itemName|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=sexualItemNames None|\n\t/addvar key=dataBaseNames sexualItemNames|\n\t/setvar key=sexualItemDetails None|\n\t/addvar key=dataBaseNames sexualItemDetails|\n:}|\n\n\n/ife (sexualItemNames != 'None') {:\n\t/setvar key=parsedSexualItems []|\n\t/foreach {{getvar::sexualItemNames}} {:\n\t\t/let key=trait {{var::item}}|\n\t\t/getvar key=sexualItemDetails index={{var::index}}|\n\t\t/let key=deta {{pipe}}|\n\t\t/findentry field=comment file=\"CMC Templates\" \"Item or Equipment Template\"|\n\t\t/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n\t\t/re-replace find=\"/--Item--/g\" replace=\"{{var::item}}\" {{pipe}}|\n\t\t/re-replace find=\"/--Details--/g\" replace=\"{{var::deta}}\" {{pipe}}|\n\t\t/addvar key=parsedSexualItems {{pipe}}|\n\t:}|\n\t/join glue=\"{{newline}}{{newline}}\" {{getvar::parsedSexualItems}}|\n\t/setvar key=parsedSexualItems {{pipe}}|\n:}|\n/else {:\n\t/setvar key=parsedSexualItems None|\n:}|\n/addvar key=dataBaseNames parsedSexualItems|\n//--------|\n\n//Sexual Notes|\n\n\n/var key=do No|\n/var key=variableName \"sexualNotes\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book \"CMC Rules\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t\n\t\n\t/len {{getvar::writingInstruct}}|\n\t/let key=len {{pipe}}|\n\t\n\t/ife ( len == 0) {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/setvar key=genSettings index=wi_book_key \"Initiation Style\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Initiation Style you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Initiation Style:** {{getvar::output}}\"|\n\t:}|\n\t/elseif ( len == 1) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Touch Preference\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Touch Preference you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Touch Preference:** {{getvar::output}}\"|\n\t:}|\n\t/elseif ( len == 2) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Verbal Tone During Intimacy\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Verbal Tone During Intimacy you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Verbal Tone During Intimacy:** {{getvar::output}}\"|\n\t:}|\n\t/elseif ( len == 3) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Emotional Layer\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Emotional Layer you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Emotional Layer:** {{getvar::output}}\"|\n\t:}|\n\t/elseif ( len == 4) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Control Preference\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Control Preference (General, not role-linked) you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Control Preference (General, not role-linked):** {{getvar::output}}\"|\n\t:}|\n\t/elseif ( len >= 5) {:\n\t\t/var key=do No|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to generate or add more sexual Rules?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/ife (do == 'Yes') {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Sexual Notes\"|\n\t\t\t/setvar key=genSettings index=genIsList No|\n\t\t\t/setvar key=genSettings index=inputIsList No|\n\t\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t\t/setvar key=genSettings index=outputIsList Yes|\n\t\t\t/setvar key=genSettings index=useContext Yes|\n\t\t\t/setvar key=extra []|\n\t\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t\t/addvar key=extra \"{{getvar::parsedSexualOrientation}}\"|\n\t\t\t/addvar key=extra \"{{getvar::parsedSexualRole}}\"|\n\t\t\t/addvar key=extra \"- Libido: {{getvar::sexualLibido}}\"|\n\t\t\t/ife (parsedSexualKinks != 'None') {:\n\t\t\t\t/addvar key=extra \"{{getvar::parsedSexualKinks}}\"|\n\t\t\t:}|\n\t\t\t/ife (parsedSexualItems != 'None') {:\n\t\t\t\t/addvar key=extra \"{{getvar::parsedSexualItems}}\"|\n\t\t\t:}|\n\t\t\t/ife (parsedSexualAbilities != 'None') {:\n\t\t\t\t/addvar key=extra \"{{getvar::parsedSexualAbilities}}\"|\n\t\t\t:}|\n\t\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t\t/setvar key=extra []|\n\t\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t\t/ife (extra != '') {:\n\t\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t\t:}|\n\t\t\t/flushvar extra|\n\t\t\t/wait {{getvar::wait}}|\n\t\t\t/setvar key=genSettings index=buttonPrompt \"Is this a good behavior rule you want {{getvar::firstName}} to follow?\"|\n\t\t\t/setvar key=it Behavior Rules|\n\t\t\t/setvar key=blackListGen {{noop}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/foreach {{getvar::output}} {:\n\t\t\t\t/addvar key={{var::variableName}} \"{{var::output}}\"|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n/setvar key=parsedSexualityNotes {{noop}}|\n/ife (sexualNotes is list) {:\n\t/foreach {{getvar::sexualNotes}} {:\n\t\t/ife (index > 0) {:\n\t\t\t/addvar key=parsedSexualityNotes {{newline}}|\n\t\t:}|\n\t\t/addvar key=parsedSexualityNotes \"- {{var::item}}\"|\n\t:}|\n:}|\n//--------|\n\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating Extras\" {{pipe}}|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":20,"icon":"","showLabel":false,"label":"Step10 Generate Extras","title":"","message":"/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Continue Generating Extras\" {{pipe}}|\n\n/:\"CMC Logic.Get Char info\"|\n\n/setvar key=dataBaseNames []|\n/flushvar genSettings|\n\n/setvar key=stepVar Step10|\n\n/setvar key=skip Update|\n/ife ( stepDone == 'No') {:\n\t/buttons labels=[\"Skip\", \"Update\"] Do you want to skip or update already generated content? You will get a question for each already done if you select Update.|\n\t/setvar key=skip {{pipe}}|\n\t/ife ( skip == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n\n/setvar key=stepDone No|\n\n/let key=do {{noop}}|\n/let key=variableName {{noop}}|\n/let selected_btn {{noop}}|\n/let key=len {{noop}}|\n\n\n\n\n//Behavior Notes|\n\n/var key=do No|\n/var key=variableName \"behaviorNotes\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book \"CMC Rules\"|\n\t\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t/len {{getvar::behaviorNotes}}|\n\t/let key=len {{pipe}}|\n\t\n\t/ife ( len == 0) {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/setvar key=genSettings index=wi_book_key \"Emotional Responsiveness\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Emotional Responsiveness you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Emotional Responsiveness:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::behaviorNotes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 1) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Conflict Handling\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Conflict Handling you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Conflict Handling:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::behaviorNotes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 2) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Social Openness\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Social Openness you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Social Openness:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::behaviorNotes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 3) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Empathy Attunement\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Empathy & Attunement you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Empathy & Attunement:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::behaviorNotes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 4) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Verbal Style Communication\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Verbal Style / Communication you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Verbal Style / Communication:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::behaviorNotes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 5) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Physical Expressiveness\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select the Physical Expressiveness you want {{getvar::firstName}} to follow.\"|\n\t\t/setvar key=it Behavior Rules|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Physical Expressiveness:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::behaviorNotes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len >= 6) {:\n\t/var key=do No|\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to generate or add more behavior Rules?|\n\t\t/var key=do {{pipe}}|\n\t\t/ife (do == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/ife (do == 'Yes') {:\n\t\t\t/setvar key=genSettings {}|\n\t\t\t/setvar key=genSettings index=wi_book \"CMC Generation Prompts\"|\n\t\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t\t/setvar key=genSettings index=outputIsList Yes|\n\t\t\t/setvar key=genSettings index=needOutput No|\n\t\t\t/setvar key=genSettings index=useContext Yes|\n\t\t\t/setvar key=extra []|\n\t\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"|\n\t\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t\t/setvar key=extra []|\n\t\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t\t/ife (extra != '') {:\n\t\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t\t:}|\n\t\t\t/flushvar extra|\n\t\t\t/setvar key=genSettings index=wi_book_key \"Behavior Notes\"|\n\t\t\t/setvar key=genSettings index=buttonPrompt \"Is this a good behavior rule you want {{getvar::firstName}} to follow?\"|\n\t\t\t/setvar key=it Behavior Rules|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/foreach {{getvar::output}} {:\n\t\t\t\t/addvar key={{var::variableName}} \"{{var::output}}\"|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n\n/var key=do No|\n/ife ((parsedBehaviorNotes == '') or (skip == 'Update')) {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to generate or add more Behavior Rules?|\n\t/var key=do {{pipe}}|\n\t/ife (do == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/elseif (( do == 'No') and (behaviorNotes == '')) {:\n\t\t/echo There needs to be some Behavior Rules |\n\t\t/abort\n\t:}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Behavior Notes\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/ife (user == 'Yes') {:\n\t\t\t/addvar key=extra \"- User's Role: {{getvar::userRole}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t/addvar key=extra \"- Appearance Features: {{getvar::appearanceFeatures}}\"|\n\t\t/ife (parsedAbilities != None) {:\n\t\t\t/addvar key=extra \"{{newline}}**Appearance Traits**{{newline}}{{getvar::parsedAppearanceTraits}}\"|\n\t\t:}|\n\t\t/ife (parsedAbilities != None) {:\n\t\t\t/addvar key=extra \"{{newline}}**Abilities**{{newline}}{{getvar::parsedAbilities}}\"|\n\t\t:}|\n\t\t/ife (parsedItems != None) {:\n\t\t\t/addvar key=extra \"{{newline}}**Items or Gear**{{newline}}{{getvar::parsedItems}}\"|\n\t\t:}|\n\t\t/addvar key=extra \"- Character Overview: {{getvar::characterOverview}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t/setvar key=genSettings index=buttonPrompt \"Is this a good behavior rule for {{getvar::firstName}} to follow?\"|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/foreach {{getvar::output}} {:\n\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t:}|\n\t\n\t/ife (behaviorNotes == '') {:\n\t\t/echo There needs to be some Behavior Rules|\n\t\t/abort\n\t:}|\n\t\n\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/setvar key=parsedBehaviorNotes {{noop}}|\n/ife (behaviorNotes != '') {:\n\t/foreach {{getvar::behaviorNotes}} {:\n\t\t/ife ( index > 0) {:\n\t\t\t/addvar key=parsedBehaviorNotes \"{{newline}}\"|\n\t\t:}|\n\t\t/addvar key=parsedBehaviorNotes \"- {{var::item}}\"|\n\t:}|\n:}|\n/else {:\n\t/setvar key=parsedBehaviorNotes None|\n:}\n//--------|\n\n\n//Speech Examples|\n/var key=do No|\n/var key=variableName \"speechExampleList\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/flushvar speechExample|\n\t/flushvar speechExampleList|\n\t/setvar key=genSettings index=wi_book_key \"Speech Examples QA\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/findentry field=comment file=\"CMC Variables\" \"Someone Random\"|\n\t/let key=wi_uid {{pipe}}|\n\t/getentryfield field=content file=\"CMC Variables\" {{var::wi_uid}}|\n\t/setvar key=genSettings index=random {{pipe}}|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Speech Style: {{getvar::speechStyle}}\"|\n\t/addvar key=extra \"- Speech Quirks: {{getvar::speechQuirks}}\"|\n\t/addvar key=extra \"- Speech Tics: {{getvar::speechTics}}\"|\n\t\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"|\n\t/addvar key=extra \"- Personality Trait Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t/ife (cognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::cognitiveAbilities}}{{newline}}\"|\n\t:}|\n\t\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}\"|\n\t:}|\n\t/ife (personalitySocialBehavior != 'Normal') {:\n\t\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t:}|\n\t\n\t/addvar key=extra \"- Setting Type: {{getvar::settingType}}\"|\n\t/ife (user != 'No') {:\n\t\t/addvar key=extra \"- User Role: {{getvar::userRole}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/ife (cognitiveAbilities != 'None') {:\n\t\t/addvar key=logicBasedInstruction \"6. Adjust vocabulary, pacing, or complexity to reflect the character’s cognitive abilities.\"|\n\t:}|\n\t/ife (socialSkills != 'None') {:\n\t\t/ife (logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction \"{{newline}}7. \"|\n\t\t:}|\n\t\t/else {:\n\t\t\t/addvar key=logicBasedInstruction \"6. \"|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"Reflect the character’s social integration level in tone, phrasing, or use of social cues like sarcasm, awkwardness, or formality.\"|\n\t:}|\n\t\n\t/wait {{getvar::wait}}|\n\t/ife ((speechQuestions is list) and (speechQuestions != '')) {:\n\t\t/buttons labels=[\"Yes\", \"No\"] <div>Speech Examples</div><div>Do you want to redo the static Speech Questions?</div>|\n\t\t/var key=selected_btn {{pipe}}|\n\t\t/ife ( selected_btn == ''){:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/elseif ( selected_btn == 'Yes'){:\n\t\t\t/flushvar speechQuestions|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=speechQuestions []|\n\t:}|\n\t\n\t/ife (speechQuestions == '') {: \n\t\t/findentry field=comment file=\"CMC Questions\" \"Speech Situation: Q\"|\n\t\t/let key=wi_uid {{pipe}}|\n\t\t/getentryfield field=content file=\"CMC Questions\" {{var::wi_uid}}|\n\t\t/let key=unfilteredQuestions {{pipe}}|\n\t\t\n\t\t/split find=\"{{newline}}\" {{var::unfilteredQuestions}}|\n\t\t/var key=unfilteredQuestions {{pipe}}|\n\t\t/let key=pop {{noop}}|\n\t\t/foreach {{var::unfilteredQuestions}} {:\n\t\t\t/var key=pop {{var::pop}}<div>{{var::item}}</div>| \n\t\t:}|\n\t\t/popup wide=true okButton=\"Continue\" <div>Here is the questions you have to choose from during generation. {taget} is going to get randomised each time you redo the generation.<div></div>You will also be able to add your own.</div>{{var::pop}}|\n\t\t/let key=filteredQuestions []|\n\t\t/foreach {{var::unfilteredQuestions}} {:\n\t\t\t/ife (( user != 'Yes') and ('--User--' not in item)) or ( user == 'Yes') {:\n\t\t\t\t/var key=filteredQuestions index={{var::index}} {{var::item}}|\n\t\t\t:}| \n\t\t:}|\n\t\t/buttons labels={{var::filteredQuestions}} multiple=true Choose questions or prompts that will help define how {{getvar::firstName}} talks or reacts in conversation.|\n\t\t/setvar key=speechQuestions {{pipe}}|\n\t\t/ife (speechQuestions == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/let key=stop Yes|\n\t/whilee (stop != 'No') {:\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to add another question or prompt?|\n\t\t/var key=stop {{pipe}}|\n\t\t/ife ( stop == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/ife ( stop == 'Yes') {:\n\t\t\t/input default=\"What would you do if \" \n<div>You can use <code>{target}</code> to insert a randomized name or entity.</div><div>What situation or opinion do you want {{getvar::firstName}} to respond to?</div>\n<div style=\"text-align: center;\">\n  <p>Your input will be used to complete one of the following phrases:</p>\n  <div>\n    <div>What would you do if...</div>\n    <div>How would you react if...</div>\n    <div>What would you think if...</div>\n    <div>What would you say if...</div>\n    <div>What is your opinion on...</div>\n  </div>\n</div>|\n\t\t\t/let key=q {{pipe}}|\n\t\t\t/ife ( q == '') {:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t\t/addvar key=speechQuestions {{var::q}}|\n\t\t:}|\n\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::speechQuestions}} {:\n\t\t\t/setvar key=speechPromptClaim {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar speechPromptClaim|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n\t/flushvar speechQuestions|\n:}|\n//--------|\n\n\n\n/setvar key=speechExample []|\n/ife (speechExampleList != '') {:\n\t/foreach {{getvar::speechExampleList}} {:\n\t\t/addvar key=speechExample \"- {{var::item}}\"|\n\t:}|\n\t/join glue=\"{{newline}}\" {{getvar::speechExample}}|\n\t/setvar key=speechExampleString {{pipe}}|\n:}|\n/addvar key=dataBaseNames speechExampleString|\n\n/ife (parsedSpeechExamples == '') {:\n\t/buttons multiple=true labels={{getvar::speechExample}} <div>Select what you want to use as the example speech for the following Q&A.</div>Reccomended 3-5|\n\t/setvar key=parsedSpeechExamples {{pipe}}|\n\t/join glue=\"{{newline}}\" {{getvar::parsedSpeechExamples}}|\n\t/setvar key=parsedSpeechExamples {{pipe}}|\n:}|\n/addvar key=dataBaseNames parsedSpeechExamples|\n//Appearance QA|\n/var key=do No|\n/var key=variableName \"appearanceQAList\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Appearance QA\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t/ife (parsedAlignment != 'None') {:\n\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::personalityIntelligenceLevel}}\"|\n\t/ife (personalitycognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::personalitycognitiveAbilities}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Social Behavior: {{getvar::personalitySocialBehavior}}\"|\n\t/ife (personalitySocialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::personalitySocialSkills}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"{{newline}}{{getvar::parsedAspiration}}\"|\n\t\n\t/addvar key=extra \"{{newline}}**Appearance**{{newline}}- Facial Features: {{getvar::appearanceFace}}\"|\n\t/addvar key=extra \"- Eye Description: {{getvar::appearanceEyes}}\"|\n\t/addvar key=extra \"- Hair Style: {{getvar::appearanceHair}}\"|\n\t/addvar key=extra \"- Body Shape: {{getvar::appearanceBody}}\"|\n\t/ife (appearanceFeatures != 'None') {:\n\t\t/addvar key=extra \"- Distinctive Features: {{getvar::appearanceFeatures}}\"|\n\t:}|\n\t/ife (appearanceBreasts != 'None') {:\n\t\t/addvar key=extra \"- Breast Shape: {{getvar::appearanceBreasts}}\"|\n\t:}|\n\t\n\t/ife (appearanceNipples != 'None') {:\n\t\t/addvar key=extra \"- Breast Shape: {{getvar::appearanceNipples}}\"|\n\t:}|\n\t/ife (appearanceGenitals != 'None') {:\n\t\t/addvar key=extra \"- Genital Description: {{getvar::appearanceGenitals}}\"|\n\t:}|\n\t/elseif (appearancePussy != 'None') {:\n\t\t/addvar key=extra \"- Genital Description: {{getvar::appearancePussy}}\"|\n\t:}|\n\t/elseif (appearanceCock != 'None') {:\n\t\t/addvar key=extra \"- Genital Description: {{getvar::appearanceCock}}\"|\n\t:}|\n\t/addvar key=extra \"- Anus Appearance: {{getvar::appearanceAnus}}\"|\n\t/ife (parsedAppearanceTraits != 'None') {:\n\t\t/addvar key=extra \"- Appearance Traits information: {{getvar::parsedAppearanceTraits}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t/ife ((appearanceQuestions is list) and (appearanceQuestions != '')) {:\n\t\t/buttons labels=[\"Yes\", \"No\"] <div>Appearance Questions</div><div>Do you want to redo the static apperance questions?</div>|\n\t\t/var key=selected_btn {{pipe}}|\n\t\t/ife ( selected_btn == ''){:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/elseif ( selected_btn == 'Yes'){:\n\t\t\t/flushvar appearanceQuestions|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=appearanceQuestions []|\n\t:}|\n\t\n\t/ife (appearanceQuestions == '') {: \n\t\t/findentry field=comment file=\"CMC Questions\" \"Appearance: Q\"|\n\t\t/let key=wi_uid {{pipe}}|\n\t\t/getentryfield field=content file=\"CMC Questions\" {{var::wi_uid}}|\n\t\t/let key=unfilteredQuestions {{pipe}}|\n\t\t\n\t\t/split find=\"{{newline}}\" {{var::unfilteredQuestions}}|\n\t\t/var key=unfilteredQuestions {{pipe}}|\n\t\t/let key=pop {{noop}}|\n\t\t/foreach {{var::unfilteredQuestions}} {:\n\t\t\t/var key=pop {{var::pop}}<div>{{var::item}}</div>| \n\t\t:}|\n\t\t/popup wide=true okButton=\"Continue\" <div>Here is the questions you have to choose from during generation. {taget} is going to get randomised each time you redo the generation.<div></div>You will also be able to add your own.</div>{{var::pop}}|\n\t\t/let key=filteredQuestions []|\n\t\t/foreach {{var::unfilteredQuestions}} {:\n\t\t\t/ife (( user != 'Yes') and ('--User--' not in item)) or ( user == 'Yes') {:\n\t\t\t\t/var key=filteredQuestions index={{var::index}} {{var::item}}|\n\t\t\t:}| \n\t\t:}|\n\t\t/buttons labels={{var::filteredQuestions}} multiple=true Choose questions or prompts that will help define how {{getvar::firstName}} thinks about {{getvar::reflexivePronoun}}.|\n\t\t/setvar key=appearanceQuestions {{pipe}}|\n\t\t/ife (appearanceQuestions == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/let key=stop Yes|\n\t/whilee (stop != 'No') {:\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to add another question or prompt?|\n\t\t/var key=stop {{pipe}}|\n\t\t/ife ( stop == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/ife ( stop == 'Yes') {:\n\t\t\t/input default=\"What do you think about your \" \n<div>What question or opinion do you want {{getvar::firstName}} to respond to about {{getvar::possAdjPronoun}} body or looks?</div>\n<div style=\"text-align: center;\">\n  <p>Your input will be used to complete a question like one of these:</p>\n  <div>\n    <div>How do you feel about your appearance?</div>\n    <div>Is there something you like or dislike about how you look?</div>\n    <div>What do you think people notice first about you?</div>\n    <div>Have you ever been complimented on something specific?</div>\n    <div>If someone teased you about your looks, how would you react?</div>\n  </div>\n</div>|\n\t\t\t/let key=q {{pipe}}|\n\t\t\t/ife ( q == '') {:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t\t/addvar key=appearanceQuestions {{var::q}}|\n\t\t:}|\n\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::appearanceQuestions}} {:\n\t\t\t/setvar key=question {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} Q: {{getvar::question}}{{newline}}A: {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/ife (appearanceQAList != '') {:\n\t/setvar key=appearanceQA {{noop}}|\n\t/foreach {{getvar::appearanceQAList}} {:\n\t\t/addvar key=appearanceQA \"{{newline}}{{var::item}}\"|\n\t:}|\n:}|\n/addvar key=dataBaseNames appearanceQA|\n//--------|\n\n//Personality Q&A|\n/var key=do No|\n/var key=variableName \"personalityQAList\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Personality QA\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t/ife (parsedAlignment != 'None') {:\n\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::intelligenceLevel}}\"|\n\t/ife (cognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::cognitiveAbilities}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Social Behavior: {{getvar::socialBehavior}}\"|\n\t/ife (socialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::socialSkills}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"{{newline}}{{getvar::parsedAspiration}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t/ife ((personalityQuestions is list) and (personalityQuestions != '')) {:\n\t\t/buttons labels=[\"Yes\", \"No\"] <div>Personality Questions</div><div>Do you want to redo the static personality questions?</div>|\n\t\t/var key=selected_btn {{pipe}}|\n\t\t/ife ( selected_btn == ''){:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/elseif ( selected_btn == 'Yes'){:\n\t\t\t/flushvar personalityQuestions|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=personalityQuestions []|\n\t:}|\n\t\n\t/ife (personalityQuestions == '') {: \n\t\t/findentry field=comment file=\"CMC Questions\" \"Personality: Q\"|\n\t\t/let key=wi_uid {{pipe}}|\n\t\t/getentryfield field=content file=\"CMC Questions\" {{var::wi_uid}}|\n\t\t/let key=unfilteredQuestions {{pipe}}|\n\t\t\n\t\t/split find=\"{{newline}}\" {{var::unfilteredQuestions}}|\n\t\t/var key=unfilteredQuestions {{pipe}}|\n\t\t/let key=pop {{noop}}|\n\t\t/foreach {{var::unfilteredQuestions}} {:\n\t\t\t/var key=pop {{var::pop}}<div>{{var::item}}</div>| \n\t\t:}|\n\t\t/popup wide=true okButton=\"Continue\" <div>Here is the questions you have to choose from during generation. {taget} is going to get randomised each time you redo the generation.<div></div>You will also be able to add your own.</div>{{var::pop}}|\n\t\t/let key=filteredQuestions []|\n\t\t/foreach {{var::unfilteredQuestions}} {:\n\t\t\t/ife (( user != 'Yes') and ('--User--' not in item)) or ( user == 'Yes') {:\n\t\t\t\t/var key=filteredQuestions index={{var::index}} {{var::item}}|\n\t\t\t:}| \n\t\t:}|\n\t\t/buttons labels={{var::filteredQuestions}} multiple=true Choose questions or prompts that will help define how {{getvar::firstName}} thinks about {{getvar::reflexivePronoun}}.|\n\t\t/setvar key=personalityQuestions {{pipe}}|\n\t\t/ife (personalityQuestions == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/let key=stop Yes|\n\t/whilee (stop != 'No') {:\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to add another question or prompt?|\n\t\t/var key=stop {{pipe}}|\n\t\t/ife ( stop == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/ife ( stop == 'Yes') {:\n\t\t\t/input default=\"What do you do \" \n<div>What kind of personality question or situation do you want {{getvar::firstName}} to respond to?</div>\n<div style=\"text-align: center;\">\n  <p>Your input will be used to complete a question like one of these:</p>\n  <div>\n    <div>What do you do when you're under pressure?</div>\n    <div>How do you feel about people who challenge you?</div>\n    <div>Do you think people actually understand you?</div>\n    <div>Is there a part of your personality you try to hide?</div>\n    <div>How do you act when you're alone versus in a group?</div>\n  </div>\n</div>|\n\t\t\t/let key=q {{pipe}}|\n\t\t\t/ife ( q == '') {:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t\t/addvar key=personalityQuestions {{var::q}}|\n\t\t:}|\n\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::personalityQuestions}} {:\n\t\t\t/setvar key=question {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} Q: {{getvar::question}}{{newline}}A: {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n\n/ife (personalityQAList != '') {:\n\t/setvar key=personalityQA {{noop}}|\n\t/join glue=\"{{newline}}{{newline}}\" {{getvar::personalityQAList}}|\n\t/addvar key=personalityQA {{pipe}}|\n:}|\n/addvar key=dataBaseNames personalityQA|\n\n//Sexuality QA|\n/var key=do No|\n/var key=variableName \"sexualityQAList\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Sexuality QA\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList Yes|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext No|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t/addvar key=extra \"{{getvar::parsedArchetype}}\"|\n\t/ife (parsedAlignment != 'None') {:\n\t\t/addvar key=extra \"{{newline}}{{getvar::parsedAlignment}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Intelligence Level: {{getvar::intelligenceLevel}}\"|\n\t/ife (cognitiveAbilities != 'None') {:\n\t\t/addvar key=extra \"- Cognitive Abilities: {{getvar::cognitiveAbilities}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"- Social Behavior: {{getvar::socialBehavior}}\"|\n\t/ife (socialSkills != 'None') {:\n\t\t/addvar key=extra \"- Social Skills and Integration Into Society: {{getvar::socialSkills}}{{newline}}\"|\n\t:}|\n\t/addvar key=extra \"{{newline}}{{getvar::parsedAspiration}}\"|\n\t/addvar key=extra \"{{newline}}{{getvar::parsedSexualOrientation}}\"|\n\t/addvar key=extra \"{{getvar::parsedSexualRole}}\"|\n\t/addvar key=extra \"- Libido: {{getvar::sexualLibido}}\"|\n\t/ife (parsedSexualKinks != 'None') {:\n\t\t/addvar key=extra \"{{getvar::parsedSexualKinks}}\"|\n\t:}|\n\t/ife (parsedSexualItems != 'None') {:\n\t\t/addvar key=extra \"{{getvar::parsedSexualItems}}\"|\n\t:}|\n\t/ife (parsedSexualAblilities != 'None') {:\n\t\t/addvar key=extra \"{{getvar::parsedSexualAblilities}}\"|\n\t:}|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/flushvar extra|\n\t/setvar key=genSettings index=contextKey []|\n\t/wait {{getvar::wait}}|\n\t/ife ((sexualityQuestions is list) and (sexualityQuestions != '')) {:\n\t\t/buttons labels=[\"Yes\", \"No\"] <div>Personality Questions</div><div>Do you want to redo the static sexuality questions?</div>|\n\t\t/var key=selected_btn {{pipe}}|\n\t\t/ife ( selected_btn == ''){:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/elseif ( selected_btn == 'Yes'){:\n\t\t\t/flushvar sexualityQuestions|\n\t\t:}|\n\t:}|\n\t/else {:\n\t\t/setvar key=sexualityQuestions []|\n\t:}|\n\t\n\t/ife (sexualityQuestions == '') {: \n\t\t/findentry field=comment file=\"CMC Questions\" \"Sexuality: Q\"|\n\t\t/let key=wi_uid {{pipe}}|\n\t\t/getentryfield field=content file=\"CMC Questions\" {{var::wi_uid}}|\n\t\t/let key=unfilteredQuestions {{pipe}}|\n\t\t\n\t\t/split find=\"{{newline}}\" {{var::unfilteredQuestions}}|\n\t\t/var key=unfilteredQuestions {{pipe}}|\n\t\t/let key=pop {{noop}}|\n\t\t/foreach {{var::unfilteredQuestions}} {:\n\t\t\t/var key=pop {{var::pop}}<div>{{var::item}}</div>| \n\t\t:}|\n\t\t/popup wide=true okButton=\"Continue\" <div>Here is the questions you have to choose from during generation. {taget} is going to get randomised each time you redo the generation.<div></div>You will also be able to add your own.</div>{{var::pop}}|\n\t\t/let key=filteredQuestions []|\n\t\t/foreach {{var::unfilteredQuestions}} {:\n\t\t\t/ife (( user != 'Yes') and ('--User--' not in item)) or ( user == 'Yes') {:\n\t\t\t\t/var key=filteredQuestions index={{var::index}} {{var::item}}|\n\t\t\t:}| \n\t\t:}|\n\t\t/buttons labels={{var::filteredQuestions}} multiple=true Choose questions or prompts that will help define how {{getvar::firstName}} thinks about sex and NSFW stuff.|\n\t\t/setvar key=sexualityQuestions {{pipe}}|\n\t\t/ife (sexualityQuestions == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/let key=stop Yes|\n\t/whilee (stop != 'No') {:\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to add another question or prompt?|\n\t\t/var key=stop {{pipe}}|\n\t\t/ife ( stop == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/ife ( stop == 'Yes') {:\n\t\t\t/input default=\"Would you try \" \n<div>What intimate or NSFW question do you want {{getvar::firstName}} to answer or react to?</div>\n<div style=\"text-align: center;\">\n  <p>Your input will be used to complete a question like one of these:</p>\n  <div>\n    <div>What do you really think about sex?</div>\n    <div>Do you like being in control — or taken over?</div>\n    <div>What turns you on, even if you don’t like admitting it?</div>\n    <div>Would you ever flirt first — even with --User--?</div>\n    <div>Have you ever felt ashamed or proud after sex?</div>\n  </div>\n</div>\n|\n\t\t\t/let key=q {{pipe}}|\n\t\t\t/ife ( q == '') {:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t\t/addvar key=sexualityQuestions {{var::q}}|\n\t\t:}|\n\t:}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList== 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/foreach {{getvar::sexualityQuestions}} {:\n\t\t\t/setvar key=question {{var::item}}|\n\t\t\t/setvar key=genSettings index=buttonPrompt \"<div>Is this a good Answer by {{getvar::firstName}} for the question:</div><div>{{getvar::question}}</div>\"|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/addvar key={{var::variableName}} Q: {{getvar::question}}{{newline}}A: {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/ife (sexualityQAList != '') {:\n\t/setvar key=sexualityQA {{noop}}|\n\t/join glue=\"{{newline}}{{newline}}\" {{getvar::sexualityQAList}}|\n\t/addvar key=sexualityQA {{pipe}}|\n:}|\n/addvar key=dataBaseNames sexualityQA|\n//--------|\n\n//Story Plan|\n/var key=selected_btn {{noop}}|\n/ife ((parsedStoryPlan == '') and ((storyPlanMilestones == '') or (storyPlanMilestones == ''))) {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to make a premade story plan?|\n\t/var key=selected_btn {{pipe}}|\n\t/ife (selected_btn == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ((selected_btn != 'No') or (storyPlanMilestones != '') or (storyPlanMilestones != '')) {:\n\t/var key=do No|\n\t/var key=variableName \"storyPlanMilestones\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Story Plan Milestones\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Residence: {{getvar::residence}}\"|\n\t\t/addvar key=extra \"- Occupation: {{getvar::parsedOccupation}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/ife (amount == '') {:\n\t\t\t/buttons labels=[\"Two\", \"Three\", \"Four\", \"Five\"] Select the number of milestone you want.|\n\t\t\t/setvar key=amount {{pipe}}|\n\t\t\t/ife (amount == '') {:\n\t\t\t\t/echo Aborting |\n\t\t        /abort\n\t\t\t:}|\n\t\t:}|\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t\t/flushvar amount|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t\n\t\n\t/split find=\"{{newline}}\" {{getvar::storyPlanMilestones}}|\n\t/setvar key=storyPlanMilestonesList {{pipe}}|\n\t\n\t\n\t/var key=do No|\n\t/var key=variableName \"storyPlanDetails\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Story Plan Details\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList Yes|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList No|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Residence: {{getvar::residence}}\"|\n\t\t/addvar key=extra \"- Occupation: {{getvar::parsedOccupation}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/ife (inputIsList == 'Yes') {:\n\t\t\t/setvar key=tempOutputList []|\n\t\t\t/foreach {{getvar::storyPlanMilestonesList}} {:\n\t\t\t\t/setvar key=storyMilestone {{var::item}}|\n\t\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t\t/addvar key=tempOutputList {{getvar::output}}|\n\t\t\t\t/flushvar output|\n\t\t\t\t/flushvar guidance|\n\t\t\t:}|\n\t\t\t/foreach {{getvar::tempOutputList}} {:\n\t\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t\t:}|\n\t\t\t/flushvar {{var::variableName}}Item|\n\t\t:}|\n\t\t/else {:\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t:}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n\t\n:}|\n/else {:\n\t/setvar key=storyPlanMilestones Nope|\n\t/addvar key=dataBaseNames storyPlanMilestones|\n\t/setvar key=storyPlanDetails Nope|\n\t/addvar key=dataBaseNames storyPlanDetails|\n:}|\n\n/ife (((storyPlanMilestones != '') and (storyPlanMilestones != 'Nope')) and ((storyPlanMilestonesList is list))) {:\n\t/setvar key=parsedStoryPlan {{noop}}|\n\t/foreach {{getvar::storyPlanMilestonesList}} {:\n\t\t/ife (index > 0) {:\n\t\t\t/addvar key=parsedStoryPlan \"{{newline}}\"|\n\t\t:}|\n\t\t/add {{var::index}} 1|\n\t\t/let key=i {{pipe}}|\n\t\t/getvar key=storyPlanDetails index={{var::index}}|\n\t\t/addvar key=parsedStoryPlan \"- Milestone {{var::i}}: {{var::item}}{{newline}}  - Details: {{pipe}}\"|\n\t:}|\n:}|\n/else {:\n\t/setvar key=parsedStoryPlan Nope|\n\t/addvar key=dataBaseNames parsedStoryPlan|\n:}|\n/addvar key=dataBaseNames parsedStoryPlan|\n//--------|\n\n//Previously|\n/var key=do No|\n/var key=variableName \"previously\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Previously\"|\n\t/setvar key=genSettings index=genIsList No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsSentence Yes|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n//--------|\n\n//Notes|\n/var key=do No|\n/var key=variableName \"notes\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book \"CMC Rules\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t/len {{getvar::notes}}|\n\t/let key=len {{pipe}}|\n\t\n\t/ife ( len == 0) {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t\n\t\t/setvar key=genSettings index=wi_book_key \"Narration Formatting Rule\"|\n\t\t/setvar key=it \"Narration Formatting Rule\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select one — determines how the LLM structures output\"|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/len {{getvar::notes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 1) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Narrative Tone Rule\"|\n\t\t/setvar key=it \"Narrative Tone Rule\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select one — how expressive or reserved the model writes\"|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/len {{getvar::notes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 2) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Perspective Rule\"|\n\t\t/setvar key=it \"Perspective Rule\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select one — POV handling\"|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/len {{getvar::notes}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len >= 4) {:\n\t\t/setvar key=genSettings index=wi_book_key [\"Output Style Behavior\"]|\n\t\t/setvar key=it \"Output Style Behavior\"|\n\t\t/setvar key=genSettings index=buttonPrompt \"Select one or more — controls structure and generation behavior\"|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/foreach {{getvar::output}} {:\n\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t:}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/ife (((notes != '') and (notes != 'None')) and (notes is list)) {:\n\t/setvar key=parsedNotes {{noop}}|\n\t/foreach {{getvar::notes}} {:\n\t\t/ife (index > 0) {:\n\t\t\t/addvar key=parsedNotes {{newline}}|\n\t\t:}|\n\t\t/addvar key=parsedNotes - {{var::item}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=parsedNotes None|\n:}|\n/addvar key=dataBaseNames parsedNotes|\n//--------|\n\n//Synonyms|\n\n/var key=do No|\n/var key=variableName \"synonyms\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book_key \"Synonyms\"|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=needOutput Yes|\n\t/setvar key=genSettings index=outputIsList Yes|\n\t/setvar key=genSettings index=useContext Yes|\n\t/setvar key=extra []|\n\t/addvar key=extra \"- Appearance: {{getvar::appearanceBody}}, {{getvar::appearanceFeatures}}\"|\n\t/addvar key=extra \"- Species Group: {{getvar::speciesGroup}}\"|\n\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t/setvar key=extra []|\n\t/:\"CMC Logic.Get Basic Type Context\"|\n\t/ife (extra != '') {:\n\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t:}|\n\t/flushvar extra|\n\t/wait {{getvar::wait}}|\n\t\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=outputIsList {{pipe}}|\n\t\n\t/setvar key=logicBasedInstruction {{noop}}|\n\t/setvar key=x 7|\n\t\n\t/ife ((characterArchetype == 'Human') or (characterArchetype == 'Android')) {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. Use grounded, physical or role-based descriptors only (e.g., the teen, the shy girl, the brunette).\"|\n\t\t\n\t:}|\n\t/elseif ((characterArchetype != 'Human') and (characterArchetype != 'Android')) {:\n\t\t/incvar x|\n\t\t/ife ( logicBasedInstruction != '') {:\n\t\t\t/addvar key=logicBasedInstruction {{newline}}|\n\t\t:}|\n\t\t/addvar key=logicBasedInstruction \"{{getvar::x}}. You may include fantasy or species-based metaphors (e.g., “furred wanderer,” “clawed misfit,” “slime-bodied girl”) as long as they reflect the character’s anatomy or species identity.\"|\n\t\t\n\t:}|\n\t/flushvar x|\n\t\n\t\n\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t/setvar as=array key={{var::variableName}} []|\n\t:}|\n\t/else {:\n\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t:}|\n\t//[[Generate with Prompt]]|\n\t/ife (inputIsList == 'Yes') {:\n\t\t/let key=tempOutputList []|\n\t\t/foreach {{getvar::CHANGE_REMOVE_THIS}} {:\n\t\t\t/setvar key={{var::variableName}}Item {{var::item}}|\n\t\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t\t/len {{var::tempOutputList}}|\n\t\t\t/var key=tempOutputList index={{pipe}} {{getvar::output}}|\n\t\t\t/flushvar output|\n\t\t\t/flushvar guidance|\n\t\t:}|\n\t\t/foreach {{tempOutputList}} {:\n\t\t\t/addvar key={{var::variableName}} {{var::item}}|\n\t\t:}|\n\t\t/flushvar {{var::variableName}}Item|\n\t:}|\n\t/else {:\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t:}|\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar guidance|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/ife (((synonyms != '') and (synonyms != 'None')) and (synonyms is list) ) {:\n\t/setvar key=parsedSynonyms {{noop}}|\n\t/foreach {{getvar::synonyms}} {:\n\t\t/ife (index > 0) {:\n\t\t\t/addvar key=parsedSynonyms {{newline}}|\n\t\t:}|\n\t\t/addvar key=parsedSynonyms - {{var::item}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=parsedSynonyms None|\n:}|\n/addvar key=dataBaseNames parsedSynonyms|\n//--------|\n\n//Extra Characters|\n/ife (extracha == '') {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to add any extra characters?|\n\t/setvar key=extracha {{pipe}}|\n    /ife (extracha == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}| \n/ife (extracha == 'Yes') {:\n\t/var key=do No|\n\t/var key=variableName \"extraCharacters\"|\n\t/ife ({{var::variableName}} == '') {:\n\t    /var key=do Yes|\n\t:}|\n\t/elseif (skip == 'Update') {:\n\t    /getvar key={{var::variableName}}|\n\t    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n\t    /var key=do {{pipe}}|\n\t    /ife (do == '') {:\n\t        /echo Aborting |\n\t        /abort\n\t    :}|\n\t:}|\n\t/ife ( do == 'Yes' ) {:\n\t\t/setvar key=genSettings {}|\n\t\t/setvar key=genSettings index=wi_book_key \"Extra Characters\"|\n\t\t/setvar key=genSettings index=genIsList No|\n\t\t/setvar key=genSettings index=inputIsList No|\n\t\t/setvar key=genSettings index=genIsSentence Yes|\n\t\t/setvar key=genSettings index=needOutput Yes|\n\t\t/setvar key=genSettings index=outputIsList Yes|\n\t\t/setvar key=genSettings index=useContext Yes|\n\t\t/setvar key=extra []|\n\t\t/addvar key=extra \"- Nationality: {{getvar::nationality}}\"|\n\t\t/addvar key=extra \"- Ethnicity: {{getvar::ethnicity}}\"|\n\t\t/addvar key=extra \"- Main Personality Trait: {{getvar::personalityMainTrait}}\"| \n\t\t/addvar key=extra \"- Personality Tags: {{getvar::personalityFoundTags}}, {{getvar::personalityTags}}\"|\n\t\t/addvar key=extra \"- Backstory: {{getvar::backstory}}\"|\n\t\t/addvar key=extra \"- Scenario Overview: {{getvar::scenarioOverview}}\"|\n\t\t/addvar key=extra \"- Residence: {{getvar::residence}}\"|\n\t\t/addvar key=extra \"- Connections: {{getvar::connections}}\"|\n\t\t/setvar key=genSettings index=extraContext {{getvar::extra}}|\n\t\t/setvar key=extra []|\n\t\t/:\"CMC Logic.Get Basic Type Context\"|\n\t\t/ife (extra != '') {:\n\t\t\t/setvar key=genSettings index=contextKey {{getvar::extra}}|\n\t\t:}|\n\t\t/flushvar extra|\n\t\t/wait {{getvar::wait}}|\n\t\t\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=inputIsList {{pipe}}|\n\t\t/getvar key=genSettings index=inputIsList|\n\t\t/let key=outputIsList {{pipe}}|\n\t\t\n\t\t/ife ((inputIsList == 'Yes') or (outputIsList == 'Yes')) {:\n\t\t\t/setvar as=array key={{var::variableName}} []|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar as=string key={{var::variableName}} {{noop}}|\n\t\t:}|\n\t\t//[[Generate with Prompt]]|\n\t\t/:\"CMC Logic.GenerateWithPrompt\"|\n\t\t/setvar key={{var::variableName}} {{getvar::output}}|\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t\t/flushvar output|\n\t\t/flushvar guidance|\n\t\t/flushvar genOrder|\n\t\t/flushvar genContent|\n\t\t/flushvar genSettings|\n\t:}|\n\t/else {:\n\t\t/addvar key=dataBaseNames {{var::variableName}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=extraCharacters None|\n\t/addvar key=dataBaseNames extraCharacters|\n:}|\n\n/ife (((extraCharacters != '') and (extraCharacters != 'None')) and (extraCharacters is list)) {:\n\t/setvar key=parsedExtraCharacters {{noop}}|\n\t/foreach {{getvar::extraCharacters}} {:\n\t\t/ife (index > 0) {:\n\t\t\t/addvar key=parsedExtraCharacters {{newline}}|\n\t\t:}|\n\t\t/addvar key=parsedExtraCharacters - {{var::item}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=parsedExtraCharacters None|\n:}|\n/addvar key=dataBaseNames parsedExtraCharacters|\n\n//--------|\n\n//WRITING INSTRUCTIONS|\n\n/var key=do No|\n/var key=variableName \"writingInstruct\"|\n/ife ({{var::variableName}} == '') {:\n    /var key=do Yes|\n:}|\n/elseif (skip == 'Update') {:\n    /getvar key={{var::variableName}}|\n    /buttons labels=[\"Yes\", \"No\"] Do you want to set or redo {{var::variableName}} (current value: {{pipe}})?|\n    /var key=do {{pipe}}|\n    /ife (do == '') {:\n        /echo Aborting |\n        /abort\n    :}|\n:}|\n/ife ( do == 'Yes' ) {:\n\t/setvar key=genSettings {}|\n\t/setvar key=genSettings index=wi_book \"CMC Rules\"|\n\t/setvar key=genSettings index=combineLorebookEntries No|\n\t/setvar key=genSettings index=genIsSentence No|\n\t/setvar key=genSettings index=inputIsList No|\n\t/setvar key=genSettings index=genIsList Yes|\n\t/setvar key=genSettings index=outputIsList No|\n\t/setvar key=genSettings index=needOutput No|\n\t/setvar key=genSettings index=useContext No|\n\t/wait {{getvar::wait}}|\n\t\n\t\n\t/getvar key=genSettings index=wi_book_key|\n\t/let key=wi_book_key {{pipe}}|\n\t/getvar key=genSettings index=inputIsList|\n\t/let key=inputIsList {{pipe}}|\n\t/getvar key=genSettings index=combineLorebookEntries|\n\t/let key=combineLorebookEntries {{pipe}}|\n\t/len {{getvar::writingInstruct}}|\n\t/let key=len {{pipe}}|\n\t\n\t/ife ( len == 0) {:\n\t\t/setvar key={{var::variableName}} []|\n\t\t/setvar key=genSettings index=wi_book_key \"Formatting Style\"|\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Formatting Style:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::writingInstruct}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 1) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Explicitness Level\"|\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Explicitness Level:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::writingInstruct}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 2) {:\n\t\t/setvar key=genSettings index=wi_book_key \"User Input Style\"|\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**User Input Style:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::writingInstruct}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 3) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Response Length\"|\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Response Length:** {{getvar::output}}\"|\n\t:}|\n\t/len {{getvar::writingInstruct}}|\n\t/let key=len {{pipe}}|\n\t/ife ( len == 4) {:\n\t\t/setvar key=genSettings index=wi_book_key \"Consent Reaction Tone\"|\n\t\t/getvar key=genSettings index=wi_book_key|\n\t\t/setvar key=it {{pipe}}|\n\t\t/:\"CMC Logic.GenerateWithSelector\"|\n\t\t/addvar key={{var::variableName}} \"**Consent & Reaction Tone:** {{getvar::output}}\"|\n\t:}|\n\t\t\n\t/addvar key=dataBaseNames {{var::variableName}}|\n\t/flushvar output|\n\t/flushvar genOrder|\n\t/flushvar genContent|\n\t/flushvar it|\n\t/flushvar genSettings|\n:}|\n/else {:\n\t/addvar key=dataBaseNames {{var::variableName}}|\n:}|\n\n/setvar key=\n//--------|\n\n\n\n\n\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Generate first Message\" {{pipe}}|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""}],"idIndex":20}