{"version":2,"name":"CMC Main","disableSend":false,"placeBeforeInput":false,"injectInput":false,"color":"rgba(0, 0, 0, 0)","onlyBorderColor":false,"qrList":[{"id":2,"icon":"","showLabel":false,"label":"New Character","title":"Make a character from the beginning.","message":"//SetTempVariables|\n/let key=do |\n/let key=variableName |\n/let key=wi_book |\n/let key=wi_book_key |\n/let key=combineLorebookEntries |\n/let key=inputIsList |\n/let key=outputIsList |\n/let key=needOutput |\n/let key=content |\n/let key=output |\n/let key=wi_temp |\n/let key=wi_input_entreis |\n/let key=wi_input_content |\n/let key=workingList1 |\n/let key=workingList2 |\n/let key=genOrder |\n/let key=genOrderContent |\n/let key=selected_btn |\n/let key=parcedInput |\n/let key=workingIndex |\n/let key=workingContent2 |\n/let key=genOrderindex |\n/let key=parce1 |\n/let key=parce2 |\n/let key=t |\n/let key=it |\n/let key=wi_uid |\n/let key=genState |\n/let key=isGeneration |\n/let key=tempList |\n/let key=actionType |\n/let key=man |\n/let key=genKey |\n/let key=genIsList |\n/let key=genIsSentence |\n/let key=contextKey |\n/let key=context |\n/let key=examples |\n/let key=task |\n/let key=instruct |\n/let key=ecT |\n/let key=epT |\n/let key=epP |\n/let key=eiT |\n/let key=eiP |\n/let key=add |\n/let key=lastId |\n/let key=mess |\n/let key=message |\n/let key=databaseList |\n/let key=qrList |\n/let key=typeGuide |\n//-----|\n\n\n/messages 0|\n/let firstMess {{pipe}}|\n/ife ( 'Installation Instructions' in firstMess) {:\n\t/buttons labels=[\"Yes\", \"No\"] <div>Doing this will delete all progress.</div><div>Do you want to continue?</div>|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == '') {:\n\t\t/echo Aborting|\n\t\t/abort|\n\t:}|\n:}|\n\n/setvar key=stepDone 'No'|\n/setvar key=stepVar Step1|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/qr-update set=\"CMC Main\" label={{pipe}} newlabel=\"Continue Generating Basic Information\"|\n\n//Empty the Database to prepare for the new character|\n/db-list source=chat field=name |\n/var key=databaseList {{pipe}}|\n/foreach {{var::databaseList}} {:\n\t/db-delete source=chat {{var::item}}|\n:}|\n/qr-list CMC Logic|\n/var key=qrList {{pipe}} |\n\n/buttons labels=[\"Female\", \"Male\", \"Futanari\"] What gender is the character you are making? |\n/setvar key=gender {{pipe}}|\n/ife ( gender == '') {:\n\t/echo Aborting |\n\t/abort\n:}|\n\n\n/setvar key=type \"Help me Decide\"|\n/findentry field=comment file=\"CMC Variables\" Type Guide|\n/getentryfield file=\"CMC Variables\" {{pipe}}| \n/var typeGuide {{pipe}}|\n/whilee ( type == 'Help me Decide') {:\n\t/buttons labels=[\"Help me Decide\", \"Human\", \"Anthro\\n(Anthro is a animal that have a human form.)\", \"Demi-Human\\n(Demi-Human is races that mostly looks like humans like Dwarfs, Elves etc...)\", \"Furry\\n(Furry is animal like humans that mostly looks like humans but have certain animal parts.)\", \"Feral\\n(Feral is standard animals, fantasy animals or monsters.)\", \"Pokémon\", \"Digimon\", \"Android/n(Android is a robot that looks and acts like a Human.)\"] What type of character are you making? |\n\t/re-replace find=\"/(\\n\\(\\|\\()[\\s\\S]*$/g\" replace=\"\" {{pipe}}|\n\t/setvar key=type {{pipe}}|\n\t/ife ( type == ''){:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n\t/ife ( type == 'Help me Decide' ){:\n\t\t/input rows=8 What race do you want the character to be?|\n\t\t/let key=inp {{pipe}}|\n\t\t/genraw as=char Respond to the question: What type of character is a {{var::inp}}?\nThe reply should be in this format:\n'<div>{{getvar::inp}} is a x</div>'\nx is one of the following \"Human\", \"Anthro\", \"Demi-Human\", \"Furry\", \"Feral\", \"Pokémon\", \"Digimon\", \"Android\"\nINFORMATION: \nHuman is a standard human.\nAnthro is a animal that have a human form.\nDemi-Human is races that mostly looks like humans like Dwarfs, Elves etc...\nFurry is animal like humans that mostly looks like humans but have certain animal parts.\nFeral is standard animals, fantasy animals or monsters.\nPokémon is the creatures from the Pokémon games and anime.\nDigimon is the creatures from the Digimon games and anime.\nAndroid is a robot that looks and acts like a Human.\nINSTRUCTION: Only respond in the given format.|\n\n\t\t/setvar key=type {{pipe}}|\n\t\t/popup okButton=Continue result=true {{getvar::type}}|\n\t\t/setvar key=type {{pipe}}|\n\t\t/ife ( type == '' ){:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/elseif ( type == '1' ){:\n\t\t\t/setvar key=type \"Help me Decide\"|\n\t\t:}|\n\t:}|\n:}|\n/re-replace find=\"/\\(.*$/g\" replace=\"\" {{getvar::type}}|\n/setvar key=type {{pipe}}\n\n/setvar key=character_type none|\n/ife (( type == 'Anthro') or ( type == 'Furry')  or ( type == 'Feral')) {:\n\t/buttons labels=[\"Pokémon\", \"Digimon\", \"Normal\"] Select the type you want?|\n\t/setvar key=character_type {{pipe}}|\n:}|\n\n/setvar key=speciesType None|\n/ife ( type != 'Human') {:\n\t/buttons labels=[\"Canine\", \"Equine\", \"Feline\", \"Reptilian\", \"Aviary\", \"Leporidae(Rabbit)\", \"Other\"]What type of species should the character be? This will guide later generations. |\n\t/re-replace find=\"/\\(.*$/g\" replace=\"\" {{pipe}}|\n\t/setvar key=speciesType {{pipe}}|\n\t/ife ( speciesType == '') {:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n\t/elseif ( speciesType == 'Other') {:\n\t\t/input rows=8 Write what kind of speciesType the character should be.|\n\t\t/setvar key=speciesType {{pipe}}|\n\t\t/ife ( speciesType == ''){:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t:}|\n:}|\n\n/setvar key=normal_form {{getvar::type}}|\n\n/:\"CMC Logic.Is Real\"|\n\n/db-list source=chat field=name |\n/let key=a {{pipe}}|\n\n/ife ( ('normal_form' not in a) and (normal_form != '')){:\n\t/db-add source=chat name=normal_form {{getvar::normal_form}}|\n\t/db-disable source=chat normal_form|\n:}|\n/elseif (normal_form != '') {:\n\t/db-update source=chat name=normal_form {{getvar::normal_form}}|\n\t/db-disable source=chat normal_form|\n:}|\n/ife ( ('type' not in a) and (type != '')){:\n\t/db-add source=chat name=type {{getvar::type}}|\n\t/db-disable source=chat type|\n:}|\n/elseif (type != '') {:\n\t/db-update source=chat name=type {{getvar::type}}|\n\t/db-disable source=chat type|\n:}|\n/ife ( ('speciesType' not in a) and (speciesType != '')){:\n\t/db-add source=chat name=speciesType {{getvar::speciesType}}|\n\t/db-disable source=chat speciesType|\n:}|\n/elseif (gender != '') {:\n\t/db-update source=chat name=speciesType {{getvar::speciesType}}|\n\t/db-disable source=chat speciesType|\n:}|\n/ife ( ('gender' not in a) and (gender != '')){:\n\t/db-add source=chat name=gender {{getvar::gender}}|\n\t/db-disable source=chat gender|\n:}|\n/elseif (gender != '') {:\n\t/db-update source=chat name=gender {{getvar::gender}}|\n\t/db-disable source=chat gender|\n:}|\n/ife ( ('character_type' not in a) and (character_type != '')){:\n\t/db-add source=chat name=character_type {{getvar::character_type}}|\n\t/db-disable source=chat character_type|\n:}|\n/elseif (character_type != '') {:\n\t/db-update source=chat name=character_type {{getvar::character_type}}|\n\t/db-disable source=chat character_type|\n:}|\n\n//SetTempVariables|\n/let key=do |\n/let key=variableName |\n/let key=wi_book |\n/let key=wi_book_key |\n/let key=combineLorebookEntries |\n/let key=inputIsList |\n/let key=outputIsList |\n/let key=needOutput |\n/let key=content |\n/let key=output |\n/let key=wi_temp |\n/let key=wi_input_entreis |\n/let key=wi_input_content |\n/let key=workingList1 |\n/let key=workingList2 |\n/let key=genOrder |\n/let key=genOrderContent |\n/let key=selected_btn |\n/let key=parcedInput |\n/let key=workingIndex |\n/let key=workingContent2 |\n/let key=genOrderindex |\n/let key=parce1 |\n/let key=parce2 |\n/let key=t |\n/let key=it |\n/let key=wi_uid |\n/let key=genState |\n/let key=isGeneration |\n/let key=tempList |\n/let key=actionType |\n/let key=man |\n/let key=genKey |\n/let key=genIsList |\n/let key=genIsSentence |\n/let key=contextKey |\n/let key=context |\n/let key=examples |\n/let key=task |\n/let key=instruct |\n/let key=ecT |\n/let key=epT |\n/let key=epP |\n/let key=eiT |\n/let key=eiP |\n/let key=add |\n/let key=lastId |\n/let key=mess |\n/let key=message |\n/let key=databaseList |\n/let key=qrList |\n/let key=typeGuide |\n//-----|\n\n\n/findentry field=comment file=\"CMC Variables\" Character Template|\n/getentryfield file=\"CMC Variables\" {{pipe}}|\n/:JEDParse input={{pipe}}|\n/setvar key=t {{pipe}}|\n/:\"CMC Logic.Parse\"|\n/message-edit message=0 {{pipe}}|\n/flushvar t|\n\n/setvar key=stepDone 'Yes'|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/qr-update set=\"CMC Main\" label={{pipe}} newlabel=\"Start Generating World Info\"|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":4,"icon":"","showLabel":false,"label":"Character Generation","title":"Continues/Restart the last Generation or Starts the next Generation.","message":"/ife ( (stepVar == 'Step1') or (stepVar == '')) {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step2|\n\t\t/:\"CMC Main.Generate Basic World Info\"|\n\t:}|\n\t/else {:\n\t\t//Load Step1|\n\t\t/:\"CMC Main.New Char\"|\n\t:}|\n:}|\n/ife ( stepVar == 'Step2') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step3|\n\t:}|\n\t/else {:\n\t\t//Load Step2|\n\t\t/:\"CMC Main.Generate Basic World Info\"|\n\t:}|\n:}|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""}],"idIndex":4}