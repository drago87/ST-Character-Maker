{"version":2,"name":"CMC Main","disableSend":false,"placeBeforeInput":false,"injectInput":false,"color":"rgba(0, 0, 0, 0)","onlyBorderColor":false,"qrList":[{"id":2,"icon":"","showLabel":false,"label":"New Character","title":"Make a character from the beginning.","message":"/popup <div>If you have problems with a prompt during generation you can</div><div>1. Try pressing the 'Generate New' button.</div>\n<div>2. If the generation still poses problem you can try to Edit the prompt.</div>\n<div>3. If you still have problem you can ask for help on Discord. Include what model you are using and what prompt you are having problem with</div>|\n\n/let key=selected_btn {{noop}}|\n/let key=databaseList {{noop}}|\n/let key=qrList {{noop}}|\n/let key=typeGuide {{noop}}|\n\n/extension-exists SillyTavern-Variable-Viewer |\n/let key=vV {{pipe}}|\n/ife (vV == true) {:\n\t/buttons labels=[\"Yes\", \"No\"] <div>Do you want to enable debug mode?</div><div>This lets you check what the prompt sent to the LLM is.</div>|\n\t/let key=check {{pipe}}|\n\t/ife (check == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/elseif (check == 'Yes') {:\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to toggle the Variable Viewer window On/Off?|\n\t\t/let key=toggle {{pipe}}|\n\t\t/ife (toggle == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/elseif (toggle == 'Yes') {:\n\t\t\t/variableviewer|\n\t\t:}|\n\t:}|\n:}|\n\n/*\n/ife (model == '') {:\n\t/findentry field=comment file=\"CMC Variables\" \"Models\"|\n\t/let key=wi_uid {{pipe}}|\n\t/getentryfield field=content file=\"CMC Variables\" {{var::wi_uid}}|\n\t/let key=selectModels {{pipe}}|\n\t/buttons multiple=true labels={{var::selectModels}} Select the model you want to download the model lorebook prompts for.|\n\t/setglobalvar key=model {{pipe}}|\n\t\n\t/ife (model == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n*/\n/messages 0|\n/let firstMess {{pipe}}|\n/ife ( ('Installation Instructions' not in firstMess) and (continue != 'Yes')) {:\n\t/buttons labels=[\"Yes\", \"No\"] <div>Doing this will delete all progress. And all Chat Attachments.</div><div>Do you want to continue?</div>|\n\t/var selected_btn {{pipe}}|\n\t/ife (( selected_btn == '') or ( selected_btn == 'No')) {:\n\t\t/echo Aborting|\n\t\t/abort|\n\t:}|\n\t//Empty the Database to prepare for the new character|\n\t/db-list source=chat field=name |\n\t/var key=databaseList {{pipe}}|\n\t/foreach {{var::databaseList}} {:\n\t\t/db-delete source=chat {{var::item}}|\n\t:}|\n\t\n\t/listvar scope=local return=object |\n\t/let  key=flvars {{pipe}}|\n\t/foreach {{var::flvars}} {:\n\t\t/getat index=key {{var::item}}|\n\t\t/flushvar {{pipe}}|\n\t:}|\n\t\n:}|\n\n/setvar key=continue Yes|\n/setvar key=wait 100|\n/setvar key=stepDone No|\n/setvar key=stepVar Step0|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/let qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating Basic Information\" {{pipe}}|\n\n/swipes-count|\n/let key=sw {{pipe}}|\n/ife (sw > 1) {:\n\t/swipes-del 1|\n:}|\n\n/qr-list CMC Logic|\n/var key=qrList {{pipe}} |\n/setvar key=dataBaseNames []|\n/var selected_btn {{noop}}|\n/ife ( gender != '' ) {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to change the gender?|\n\t/var selected_btn {{pipe}}|\n:}|\n/ife ( (gender == '') or ( selected_btn == 'Yes')) {:\n\t/buttons labels=[\"Female\", \"Male\"] What gender is the character you are making? |\n\t/setvar key=gender {{pipe}}|\n\t/ife ( gender == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/addvar key=dataBaseNames gender|\n\n\n/var selected_btn {{noop}}|\n/ife ( futanari != '' ) {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to change the futanari choice?|\n\t/var selected_btn {{pipe}}|\n:}|\n/ife ( (futanari == '') or ( selected_btn == 'Yes')) {:\n\t/buttons labels=[\"Yes\", \"No\"] Is the character you are making a futanari? |\n\t/setvar key=futanari {{pipe}}|\n\t/ife ( gender == '') {:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n:}|\n/addvar key=dataBaseNames futanari|\n\n/var selected_btn {{noop}}|\n/ife ( characterArchetype != '' ) {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to change the type of character?|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == '') {:\n\t\t/echo Aborting|\n\t\t/abort|\n\t:}|\n:}|\n/ife ( (characterArchetype == '') or ( selected_btn == 'Yes')) {:\n\t/setvar key=characterArchetype \"Help me Decide\"|\n\t/findentry field=comment file=\"CMC Information {{getglobalvar::model}}\" Type Guide|\n\t/getentryfield file=\"CMC Information {{getglobalvar::model}}\" {{pipe}}| \n\t/var typeGuide {{pipe}}|\n\t/whilee ( characterArchetype == 'Help me Decide') {:\n\t\t/buttons labels=[\"Help me Decide\", \"Human\", \"Anthropomorphic\\n(Anthropomorphic is a character that combines both human and animal traits, often featuring an animal body with human-like posture, facial expressions, speech, and behavior.)\", \"Mythfolk\\n(Mythfolk is races that mostly looks like humans like Dwarfs, Elves etc...)\", \"Tauric\\n(Tauric are hybrid species with a humanoid upper body and an animal-like lower body, such as centaurs, lamias, and mermaids.)\", \"Beastkin\\n(Beastkin is a character with animal features like ears and tail but otherwise human appearance.)\", \"Animalistic\\n(Animalistic refers to standard animals, fantasy creatures, or monsters that behave and appear primarily as non-human beings, typically walking on all fours and lacking human speech or reasoning.)\", \"Pokémon\", \"Digimon\", \"Android\\n(Android is a robot that looks and acts like a Human.)\"] What type of character are you making? |\n\t\t/re-replace find=\"/(\\n\\()[\\s\\S]*$/g\" replace=\"\" {{pipe}}|\n\t\t/setvar key=characterArchetype {{pipe}}|\n\t\t/ife ( characterArchetype == ''){:\n\t\t\t/echo Aborting|\n\t\t\t/abort\n\t\t:}|\n\t\t/ife ( characterArchetype == 'Help me Decide' ){:\n\t\t\t/input rows=8 What race do you want the character to be?|\n\t\t\t/let key=inp {{pipe}}|\n\t\t\t/genraw as=char Respond to the question: What type of character is a {{var::inp}}?\nThe reply should be in this format:\n'<div>{{getvar::inp}} is a x</div>'\nx is one of the following \"Human\", \"Anthropomorphic\", \"Mythfolk\", \"Tauric\", \"Beastkin\", \"Animalistic\", \"Pokémon\", \"Digimon\", \"Android\"\nINFORMATION: \n{{var::typeGuide}}\nINSTRUCTION: Only respond in the given format.|\n\n\t\t\t/setvar key=characterArchetype {{pipe}}|\n\t\t\t/popup okButton=Continue result=true {{getvar::characterArchetype}}|\n\t\t\t/setvar key=characterArchetype {{pipe}}|\n\t\t\t/ife ( characterArchetype == '' ){:\n\t\t\t\t/echo Aborting |\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t\t/elseif ( characterArchetype == '1' ){:\n\t\t\t\t/setvar key=characterArchetype \"Help me Decide\"|\n\t\t\t:}|\n\t\t:}|\n\t:}|\n\t/re-replace find=\"/\\(.*$/g\" replace=\"\" {{getvar::characterArchetype}}|\n\t/setvar key=characterArchetype {{pipe}}|\n:}|\n/addvar key=dataBaseNames characterArchetype|\n\n\n/var selected_btn {{noop}}|\n/ife ( characterType != '' ) {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to change the character type?|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == '') {:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n:}|\n/ife ( (selected_btn == 'Yes') or (characterType == '')) {:\n\t/setvar key=characterType None|\n:}|\n/ife (((characterType == 'None') or ( selected_btn == 'Yes')) and (( characterArchetype == 'Anthropomorphic') or ( characterArchetype == 'Beastkin'))) {:\n\t/buttons labels=[\"Pokémon\", \"Digimon\", \"Animalistic\"] Select the type you want?|\n\t/setvar key=characterType {{pipe}}|\n\t/ife ( characterType == '') {:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n:}|\n/addvar key=dataBaseNames characterType|\n\n\n/ife ( (characterArchetype != 'Human') and (characterArchetype != 'Mythfolk') and (characterArchetype != 'Android')) {:\n\t/var selected_btn {{noop}}|\n\t/ife ( animalBase != '' ) {:\n\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to change the animal base?|\n\t\t/var selected_btn {{pipe}}|\n\t\t/ife ( selected_btn == '') {:\n\t\t\t/echo Aborting|\n\t\t\t/abort\n\t\t:}|\n\t:}|\n\t/ife ( ( selected_btn == 'Yes') or ( animalBase == '')) {:\n\t\t/buttons labels=[\"Mammal\", \"Reptile\", \"Bird\", \"Fish\", \"Amphibian\", \"Invertebrate\", \"Fantasy\"] What type of species should the character be? This will guide later generations. |\n\t\t/re-replace find=\"/\\(.*$/g\" replace=\"\" {{pipe}}|\n\t\t/setvar key=animalBase {{pipe}}|\n\t\t/ife ( animalBase == '') {:\n\t\t\t/echo Aborting|\n\t\t\t/abort\n\t\t:}|\n\t:}|\n:}|\n/elseif (characterArchetype == 'Human') {:\n\t/setvar key=animalBase Humanoid|\n:}|\n/elseif (characterArchetype == 'Android') {:\n\t/setvar key=animalBase Synthetic|\n:}|\n/else {:\n\t/setvar key=animalBase None|\n:}|\n/addvar key=dataBaseNames animalBase|\n\n/ife ( (characterArchetype != 'Human') and (characterArchetype != 'Mythfolk') and (characterArchetype != 'Android')) {:\n\t/buttons labels=[\"Yes pick a specific category\", \"No\"] Do you want the character to use the animal base as-is, or pick a more specific category like Canine, Feline, or Reptilian when generating the species later?|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == '') {:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n\t/elseif ( selected_btn == 'No') {:\n\t\t/setvar key=speciesGroup {{getvar::animalBase}}|\n\t:}|\n\t/else {:\n\t\t/let key=find {{getvar::animalBase}}: List|\n\t\t/findentry field=comment file=\"CMC Variables\" {{var::find}}|\n\t\t/getentryfield field=content file=\"CMC Variables\" {{pipe}}|\n\t\t/split find=\"---\" {{pipe}} |\n\t\t/setvar key=speciesGroup {{pipe}}|\n\t\t/buttons labels={{getvar::speciesGroup}} Select the Species Group you want to use for later when generating the Species.|\n\t\t/setvar key=speciesGroup {{pipe}}|\n\t\t/ife ( speciesGroup == '') {:\n\t\t\t/echo Aborting|\n\t\t\t/abort\n\t\t:}|\n\t\t/re-replace find=\"/\\(.*$/g\" replace=\"\" {{getvar::speciesGroup}}|\n\t\t/setvar key=speciesGroup {{pipe}}|\n\t:}|\n:}|\n/else {:\n\t/setvar key=speciesGroup Humanoid|\n:}|\n/ife ( (characterArchetype == 'Human') and (characterArchetype == 'Mythfolk') and (characterArchetype == 'Android')) {:\n\t/setvar key=parsedAnimalType Humanoid|\n:}|\n/elseif (((characterArchetype == Anthropomorphic) or (characterArchetype == Anthropomorphic)) and ((characterType == 'Pokémon') or (characterType == 'Digimon') or (characterType == 'Animalistic'))) {:\n\t/setvar key=parsedAnimalType {{getvar::characterType}}|\n:}|\n/elseif (animalBase != speciesGroup) {:\n\t/setvar key=parsedAnimalType {{getvar::speciesGroup}}|\n:}|\n/else {:\n\t/setvar key=parsedAnimalType {{getvar::animalBase}}|\n:}|\n\n/var selected_btn {{noop}}|\n/ife ((privatesMale != '') and (privatesFemale != '')) {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to change the Privates you selected?|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == '') {:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n:}|\n/ife (selected_btn != 'No') {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want the character to have Privates that differs from it's species type?|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == '') {:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n\t/elseif ( selected_btn == 'Yes') {:\n\t\t/buttons labels=[\"Mammal\", \"Reptile\", \"Bird\", \"Fish\", \"Amphibian\", \"Invertebrate\", \"Fantasy\"] What type of species should the characters Privates be? This will guide later generations.|\n\t\t/let key=t {{pipe}}|\n\t\t/ife (t == '') {:\n\t\t\t/echo Aborting |\n\t\t\t/abort\n\t\t:}|\n\t\t/let key=find {{var::t}}: List|\n\t\t/findentry field=comment file=\"CMC Variables\" {{var::find}}|\n\t\t/getentryfield field=content file=\"CMC Variables\" {{pipe}}|\n\t\t/split find=\"---\" {{pipe}} |\n\t\t/setvar key=temp1 {{pipe}}|\n\t\t/setvar key=temp {{getvar::temp1}}|\n\t\t/addvar key=temp Use Base Type|\n\t\t/buttons labels={{getvar::temp}} Select the Species Group you want to use for later when generating the Privates.|\n\t\t/setvar key=temp {{pipe}}|\n\t\t/ife ( temp == '') {:\n\t\t\t/echo Aborting|\n\t\t\t/abort\n\t\t:}|\n\t\t/re-replace find=\"/\\(.*$/g\" replace=\"\" {{getvar::temp}}|\n\t\t/setvar key=temp {{pipe}}|\n\t\t/ife ( temp == 'Use Base Type') {:\n\t\t\t/setvar key=temp {{getvar::animalBase}}|\n\t\t:}|\n\t\t/ife (futanari == 'Yes') {:\n\t\t\t/buttons labels=[\"Yes\", \"No\"] Do you want to use the same type of Privates for the Male and Female parts?|\n\t\t\t/var selected_btn {{pipe}}|\n\t\t\t/ife ( selected_btn == '') {:\n\t\t\t\t/echo Aborting|\n\t\t\t\t/abort\n\t\t\t:}|\n\t\t\t/elseif ( selected_btn == 'Yes') {:\n\t\t\t\t/setvar key=privatesFemale {{getvar::temp}}|\n\t\t\t\t/setvar key=privatesMale {{getvar::temp}}|\n\t\t\t:}|\n\t\t\t/else {:\n\t\t\t\t/buttons labels=[\"Male\", \"Female\"] Do you want to apply the selected type to the Female or Male part?|\n\t\t\t\t/var selected_btn {{pipe}}|\n\t\t\t\t/ife ( selected_btn == '') {:\n\t\t\t\t\t/echo Aborting|\n\t\t\t\t\t/abort\n\t\t\t\t:}|\n\t\t\t\t/else {:\n\t\t\t\t\t/setvar key=privates{{var::selected_btn}} {{getvar::temp}}|\n\t\t\t\t:}|\n\t\t\t\t/setvar key=temp {{getvar::temp1}}|\n\t\t\t\t/addvar key=temp Use Base Type|\n\t\t\t\t/buttons labels={{getvar::temp}} Select the Species Group you want to use for later when generating the Privates.|\n\t\t\t\t/setvar key=temp {{pipe}}|\n\t\t\t\t/ife ( temp == '') {:\n\t\t\t\t\t/echo Aborting|\n\t\t\t\t\t/abort\n\t\t\t\t:}|\n\t\t\t\t/re-replace find=\"/\\(.*$/g\" replace=\"\" {{getvar::temp}}|\n\t\t\t\t/setvar key=temp {{pipe}}|\n\t\t\t\t/ife ( temp == 'Use Base Type') {:\n\t\t\t\t\t/setvar key=temp {{getvar::animalBase}}|\n\t\t\t\t:}|\n\t\t\t\t/ife ( privatesFemale == '') {:\n\t\t\t\t\t/setvar key=privatesFemale {{getvar::temp}}|\n\t\t\t\t:}|\n\t\t\t\t/elseif ( privatesFemale == '') {:\n\t\t\t\t\t/setvar key=privatesMale {{getvar::temp}}|\n\t\t\t\t:}|\n\t\t\t:}|\n\t\t:}|\n\t\t/elseif (gender == 'Male') {:\n\t\t\t/setvar key=privatesFemale None|\n\t\t\t/setvar key=privatesMale {{getvar::temp}}|\n\t\t:}|\n\t\t/else {:\n\t\t\t/setvar key=privatesFemale {{getvar::temp}}|\n\t\t\t/setvar key=privatesMale None|\n\t\t:}|\n\t:}|\n\t/elseif (futanari == 'Yes') {:\n\t\t/setvar key=privatesFemale {{getvar::animalBase}}|\n\t\t/setvar key=privatesMale {{getvar::animalBase}}|\n\t:}|\n\t/elseif (gender == 'Male') {:\n\t\t/setvar key=privatesFemale None|\n\t\t/setvar key=privatesMale {{getvar::animalBase}}|\n\t:}|\n\t/else {:\n\t\t/setvar key=privatesFemale {{getvar::animalBase}}|\n\t\t/setvar key=privatesMale None|\n\t:}|\n\t/flushvar temp|\n\t/flushvar temp1|\n:}|\n/addvar key=dataBaseNames privatesFemale|\n/addvar key=dataBaseNames privatesMale|\n\n\n/var selected_btn {{noop}}|\n/ife (real != '') {:\n\t/buttons labels=[\"Yes\", \"No\"] Do you want to change if the character is real or not?|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == '') {:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n:}|\n/ife (selected_btn != 'No') {:\n\t/:\"CMC Logic.Is Real\"|\n:}|\n/buttons labels=[\"Yes\", \"No\"] Is the character going to be part of a Chat Group?|\n/var selected_btn {{pipe}}|\n/ife ( selected_btn == '') {:\n\t/echo Aborting|\n\t/abort\n:}|\n/elseif ( selected_btn == 'Yes') {:\n\t/setvar key=chatGroup Yes|\n\t/buttons labels=[\"Yes\", \"No\"] Is the user going to be part of the Chat Group?|\n\t/var selected_btn {{pipe}}|\n\t/ife ( selected_btn == '') {:\n\t\t/echo Aborting|\n\t\t/abort\n\t:}|\n\t/elseif ( selected_btn == 'Yes') {:\n\t\t/setvar key=user Yes|\n\t:}|\n\t/else {:\n\t\t/setvar key=user No|\n\t:}|\n:}|\n/else {:\n\t/setvar key=user Yes|\n\t/setvar key=chatGroup No|\n:}|\n/addvar key=dataBaseNames user|\n/addvar key=dataBaseNames chatGroup|\n/addvar key=dataBaseNames wait|\n\n\n/findentry field=comment file=\"CMC Templates\" Character Template|\n/getentryfield file=\"CMC Templates\" {{pipe}}|\n/message-edit message=0 await=true {{pipe}}|\n/:\"CMC Logic.JEDParse\"|\n\n/:\"CMC Logic.Save DataBase\"|\n\n/setvar key=stepDone Yes|\n/qr-list CMC Main|\n/getat index=1 {{pipe}}|\n/var qrlabel {{pipe}}|\n/qr-get set=\"CMC Main\" label={{var::qrlabel}}|\n/getat index=\"message\" {{pipe}}|\n/qr-update set=\"CMC Main\" label={{var::qrlabel}} newlabel=\"Start Generating World Info\" {{pipe}}|\n\n/flushvar continue|\n/forcesave|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"executeBeforeGeneration":false,"automationId":""},{"id":4,"icon":"","showLabel":false,"label":"Start Generating Aspirational & Unique Traits","title":"Continues/Restart the last Generation or Starts the next Generation.","message":"/*\nStep0 Generate Basic information\nStep1 Generate Core Identity\nStep2 Generate World-Setting Information\nStep3 Generate Appearance-Anatomy\nStep4 Outfit\nStep5 Generate Mental Traits-Personality\nStep6 Generate Aspirational-Unique Traits\nStep7 Generate Speech Patterns\nStep8 Generate External Interaction\nStep9 Generate Sexual Information\nStep10 Generate Extras\nStep11 First Message\nStep12 Tagline\n*|\n\n/ife ( (stepVar == 'Step0') or (stepVar == '')) {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step1|\n\t\t/:\"CMC Generate.Step1 Generate Core Identity\"|\n\t:}|\n\t/else {:\n\t\t//Load Step0|\n\t\t/:\"CMC Main.New Character\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step1') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step2|\n\t\t/:\"CMC Generate.Step2 Generate World-Setting Information\"|\n\t:}|\n\t/else {:\n\t\t//Load Step1|\n\t\t/:\"CMC Generate.Step1 Generate Core Identity\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step2') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step3|\n\t\t/:\"CMC Generate.Step3 Generate Appearance-Anatomy\"|\n\t:}|\n\t/else {:\n\t\t//Load Step2|\n\t\t/:\"CMC Generate.Step2 Generate World-Setting Information\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step3') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step4|\n\t\t/:\"CMC Generate.Step4 Generate Outfit\"|\n\t:}|\n\t/else {:\n\t\t//Load Step3|\n\t\t/:\"CMC Generate.Step3 Generate Appearance-Anatomy\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step4') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step5|\n\t\t/:\"CMC Generate.Step5 Generate Mental Traits-Personality\"|\n\t:}|\n\t/else {:\n\t\t//Load Step4|\n\t\t/:\"CMC Generate.Step4 Generate Outfit\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step5') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step6|\n\t\t/:\"CMC Generate.Step6 Generate Aspirational-Unique Traits\"|\n\t:}|\n\t/else {:\n\t\t//Load Step5|\n\t\t/:\"CMC Generate.Step5 Generate Mental Traits-Personality\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step6') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step7|\n\t\t/:\"CMC Generate.Step7 Generate Speech Patterns\"|\n\t:}|\n\t/else {:\n\t\t//Load Step6|\n\t\t/:\"CMC Generate.Step6 Generate Aspirational-Unique Traits\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step7') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step8|\n\t\t/:\"CMC Generate.Step8 Generate External Interaction\"|\n\t:}|\n\t/else {:\n\t\t//Load Step7|\n\t\t/:\"CMC Generate.Step7 Generate Speech Patterns\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step8') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step9|\n\t\t/:\"CMC Generate.Step9 Generate Sexual Information\"|\n\t:}|\n\t/else {:\n\t\t//Load Step8|\n\t\t/:\"CMC Generate.Step8 Generate External Interaction\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step9') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step10|\n\t\t/:\"CMC Generate.Step10 Generate Extras\"|\n\t:}|\n\t/else {:\n\t\t//Load Step9|\n\t\t/:\"CMC Generate.Step9 Generate Sexual Information\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step10') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step11|\n\t\t/:\"CMC Generate.Step11 First Message\"|\n\t:}|\n\t/else {:\n\t\t//Load Step10|\n\t\t/:\"CMC Generate.Step10 Generate Extras\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step11') {:\n\t/ife (stepDone == 'Yes') {:\n\t\t//Load Step12|\n\t\t/:\"CMC Generate.Step12 Tagline\"|\n\t:}|\n\t/else {:\n\t\t//Load Step11|\n\t\t/:\"CMC Generate.Step11 First Message\"|\n\t:}|\n:}|\n/elseif ( stepVar == 'Step12') {:\n\t\n\t//Load Step12|\n\t/:\"CMC Generate.Step12 Tagline\"|\n:}|","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"executeBeforeGeneration":false,"automationId":""},{"id":6,"icon":"","showLabel":false,"label":"Character Export","title":"Exports the character to the DataBase and saves it as a .json file that can be imported to ST","message":"/input Who do you want the name of the author of the character to be?|\n/setvar key=author {{pipe}}|\n/let key=done Regenerate|\n/findentry field=comment file=\"CMC Generation Prompts {{getglobalvar::model}}\" \"Export Prompt\"|\n/getentryfield field=content file=\"CMC Generation Prompts {{getglobalvar::model}}\" {{pipe}}|\n/let key=prompt {{pipe}}|\n/let key=output {{noop}}|\n/whilee (done == 'Regenerate') {:\n\t/echo Generationg Brief Character Overview|\n\t/genraw {{var::prompt}}|\n\t/var key=output {{pipe}}|\n\t/buttons labels=[\"Yes\", \"Edit\", \"Regenerate\"] <div>Are you happy with the Character Overview?</div><div>{{var::output}}</div>|\n\t/var key=done {{pipe}}|\n\t/ife ( done == ''){:\n\t\t/echo Aborting |\n\t\t/abort\n\t:}|\n\t/elseif (done == 'Edit') {:\n\t\t/input default={{var::output}} Edit the Character Overview to your liking.|\n\t\t/var key=output {{pipe}}|\n\t:}|\n:}|\n/re-replace find=\"/\\n/g\" replace=\"\\r\\n\" {{var::output}}|\n/re-replace find=\"/\\\"/g\" replace=\"\\\\\\\"\" {{pipe}}|\n/var key=output {{pipe}}|\n/re-replace find=\"/\\n/g\" replace=\"\\r\\n\" {{getvar::fullCharacterSheet}}|\n/re-replace find=\"/\\\"/g\" replace=\"\\\\\\\"\" {{pipe}}|\n/let key=fullCharacterSheetFixed {{pipe}}|\n/re-replace find=\"/\\n/g\" replace=\"\\r\\n\" {{getvar::firstMessage}}|\n/re-replace find=\"/\\\"/g\" replace=\"\\\\\\\"\" {{pipe}}|\n/let key=firstMessageFixed {{pipe}}|\n/let key=postHist \"{{original}}\n## **RESPONSE RULES:**\nYou MUST follow the writing instructions below with **exact formatting**:\n{{getvar::parsedWritingInstruct}}\n\nEach rule is **mandatory** — do not simplify, guess, or loosely interpret. Match the exact phrasing, punctuation, and tone shown in every line. If a style element is ambiguous, assume it must be followed literally.\"|\n/re-replace find=\"/\\n/g\" replace=\"\\r\\n\" {{var::postHist}}|\n/re-replace find=\"/\\\"/g\" replace=\"\\\\\\\"\" {{pipe}}|\n/re-replace find=\"/--FirstName--/g\" replace=\"{/{char}}\" {{pipe}}|\n/var key=postHist {{pipe}}|\n/findentry field=comment file=\"CMC Templates\" \"Character Card Template\"|\n/getentryfield field=content file=\"CMC Templates\" {{pipe}}|\n/re-replace find=\"/--CharName--/g\" replace=\"{{getvar::firstName}}\" {{pipe}}|\n/re-replace find=\"/--Summary--/g\" replace=\"\" {{pipe}}|\n/re-replace find=\"/--Scenario--/g\" replace=\"\" {{pipe}}|\n/re-replace find=\"/--Example_Dial--/g\" replace=\"\" {{pipe}}|\n/re-replace find=\"/--Main_Prompt--/g\" replace=\"{{var::postHist}}\" {{pipe}}|\n/re-replace find=\"/--Post_Hist--/g\" replace=\"\" {{pipe}}|\n/re-replace find=\"/--Alt_Greet1--/g\" replace=\"\" {{pipe}}|\n/re-replace find=\"/--Char_Notes--/g\" replace=\"\" {{pipe}}|\n/re-replace find=\"/--Group_Greeting1--/g\" replace=\"\" {{pipe}}|\n/re-replace find=\"/--Tag1--/g\" replace=\"\" {{pipe}}|\n/re-replace find=\"/--Created_By--/g\" replace=\"{{getvar::author}}\" {{pipe}}|\n/re-replace find=\"/--Creator_Notes--/g\" replace=\"{{var::output}}\" {{pipe}}|\n\n/re-replace find=\"/--Description--/g\" replace=\"{{var::fullCharacterSheetFixed}}\" {{pipe}}|\n/re-replace find=\"/--First_Mess--/g\" replace=\"{{var::firstMessageFixed}}\" {{pipe}}|\n/re-replace find=\"/--User--/g\" replace=\"{{user}}\" {{pipe}}|\n/db-add source=chat name=\"{{getvar::firstName}}.json\" {{pipe}}|\n/db-disable source=chat \"{{getvar::firstName}}.json\"|\n\n/qr-update set=\"CMC Main\" label=\"Generate Persona\" hidden=false title=\"Generates a Persona that could be used for this character.\"|\n\n/popup Download {{getvar::firstName}}.json from the SillyTavern Data Bank (It will open when you press ok) and import it as a character to be able to change the image.|\n/db|","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"executeBeforeGeneration":false,"automationId":""}],"idIndex":6}